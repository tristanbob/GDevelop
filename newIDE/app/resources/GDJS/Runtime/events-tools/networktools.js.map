{
  "version": 3,
  "sources": ["../../../../../../GDJS/Runtime/events-tools/networktools.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2016 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\nnamespace gdjs {\n  export namespace evtTools {\n    export namespace network {\n      /**\n       * Send an asynchronous request to the specified URL, with the specified (text)\n       * body, method and contentType (defaults to `application/x-www-form-urlencoded`).\n       * The result is stored in the specified response variable. Any error is stored in\n       * the specified error variable.\n       *\n       * @param url The URL to send the request to.\n       * @param body The content to be sent.\n       * @param method The method to use (\"GET\", \"POST\", \"PUT\", \"HEAD\", \"DELETE\", \"PATCH\", \"OPTIONS\")\n       * @param contentType The content type. Defaults to `application/x-www-form-urlencoded` if empty.\n       * @param responseVar The variable where to store the response text.\n       * @param errorVar The variable where to store the error message or status code (if status >= 400).\n       */\n      export const sendAsyncRequest = function (\n        url: string,\n        body: string,\n        method: string,\n        contentType: string,\n        responseVar: gdjs.Variable,\n        errorVar: gdjs.Variable\n      ) {\n        const onError = (err) => {\n          if (\n            err instanceof ProgressEvent &&\n            err.currentTarget &&\n            err.currentTarget instanceof XMLHttpRequest &&\n            err.currentTarget.status === 0\n          ) {\n            errorVar.setString('REQUEST_NOT_SENT');\n          } else {\n            errorVar.setString('' + err);\n          }\n        };\n        try {\n          const request = new XMLHttpRequest();\n          request.onerror = onError;\n          request.ontimeout = onError;\n          request.onabort = onError;\n          request.onreadystatechange = () => {\n            /* \"DONE\" */\n            if (request.readyState === 4) {\n              if (request.status >= 400) {\n                onError('' + request.status);\n              }\n              responseVar.setString(request.responseText);\n            }\n          };\n          request.open(method, url);\n          request.setRequestHeader(\n            'Content-Type',\n            contentType === ''\n              ? 'application/x-www-form-urlencoded'\n              : contentType\n          );\n          request.send(body);\n        } catch (err) {\n          onError(err);\n        }\n      };\n\n      export const sendAwaitableAsyncRequest = (\n        url: string,\n        body: string,\n        method: string,\n        contentType: string,\n        responseVar: gdjs.Variable,\n        errorVar: gdjs.Variable\n      ) => {\n        return new gdjs.PromiseTask(\n          fetch(url, {\n            body: method !== 'GET' ? body : undefined,\n            method,\n            headers: {\n              'Content-Type':\n                contentType || 'application/x-www-form-urlencoded',\n            },\n          }).then(\n            async (response) => {\n              const result = await response.text();\n              if (response.status >= 400) {\n                errorVar.setString('' + response.status);\n              }\n              responseVar.setString(result);\n            },\n            (error) => {\n              errorVar.setString('' + error);\n            }\n          )\n        );\n      };\n\n      /**\n       * @deprecated\n       */\n      export const sendDeprecatedSynchronousRequest = function (\n        host,\n        uri,\n        body,\n        method,\n        contentType,\n        responseVar\n      ) {\n        try {\n          let xhr;\n          if (typeof XMLHttpRequest !== 'undefined') {\n            xhr = new XMLHttpRequest();\n          } else {\n            const versions = [\n              'MSXML2.XmlHttp.5.0',\n              'MSXML2.XmlHttp.4.0',\n              'MSXML2.XmlHttp.3.0',\n              'MSXML2.XmlHttp.2.0',\n              'Microsoft.XmlHttp',\n            ];\n            for (let i = 0, len = versions.length; i < len; i++) {\n              try {\n                xhr = new ActiveXObject(versions[i]);\n                break;\n              } catch (e) {}\n            }\n          }\n\n          // end for\n          if (xhr === undefined) {\n            return;\n          }\n          xhr.open(method, host + uri, false);\n          xhr.setRequestHeader(\n            'Content-Type',\n            contentType === ''\n              ? 'application/x-www-form-urlencoded'\n              : contentType\n          );\n          xhr.send(body);\n          responseVar.setString(xhr.responseText);\n        } catch (e) {}\n      };\n\n      export const enableMetrics = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        enable: boolean\n      ) {\n        instanceContainer.getGame().enableMetrics(enable);\n      };\n\n      /**\n       * Convert a variable to JSON.\n       * @param variable The variable to convert to JSON\n       * @returns The JSON string representing the variable\n       *\n       * @deprecated Use `JSON.stringify(variable.toJSObject())` instead.\n       */\n      export const variableStructureToJSON = function (\n        variable: gdjs.Variable\n      ): string {\n        return JSON.stringify(variable.toJSObject());\n      };\n\n      /**\n       * @deprecated Use `JSON.stringify(variable.toJSObject())` instead.\n       */\n      export const objectVariableStructureToJSON = function (\n        object: gdjs.RuntimeObject,\n        variable: gdjs.Variable\n      ): string {\n        return JSON.stringify(variable.toJSObject());\n      };\n\n      /**\n       * @deprecated Use `variable.fromJSObject` instead.\n       */\n      export const _objectToVariable = function (\n        obj: any,\n        variable: gdjs.Variable\n      ) {\n        variable.fromJSObject(obj);\n      };\n\n      /**\n       * Parse the given JSON and fill the content of the variable with it.\n       *\n       * @param jsonStr The JSON string\n       * @param variable The variable where to put the parsed JSON\n       * @returns true if JSON was properly parsed\n       *\n       * @deprecated Use `variable.fromJSON` instead.\n       */\n      export const jsonToVariableStructure = function (\n        jsonStr: string,\n        variable: gdjs.Variable\n      ): void {\n        variable.fromJSON(jsonStr);\n      };\n\n      /**\n       * @deprecated Use `variable.fromJSON` instead.\n       */\n      export const jsonToObjectVariableStructure = function (\n        jsonStr: string,\n        object: gdjs.RuntimeObject,\n        variable: gdjs.Variable\n      ) {\n        variable.fromJSON(jsonStr);\n      };\n    }\n  }\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CACS,GAAU,GAAV,UAAU,EAAV,CACE,GAAU,GAAV,UAAU,EAAV,CAcE,AAAM,mBAAmB,SAC9B,EACA,EACA,EACA,EACA,EACA,EACA,CACA,KAAM,GAAU,AAAC,GAAQ,CACvB,AACE,YAAe,gBACf,EAAI,eACJ,EAAI,wBAAyB,iBAC7B,EAAI,cAAc,SAAW,EAE7B,EAAS,UAAU,oBAEnB,EAAS,UAAU,GAAK,IAG5B,GAAI,CACF,KAAM,GAAU,GAAI,gBACpB,EAAQ,QAAU,EAClB,EAAQ,UAAY,EACpB,EAAQ,QAAU,EAClB,EAAQ,mBAAqB,IAAM,CAEjC,AAAI,EAAQ,aAAe,GACrB,GAAQ,QAAU,KACpB,EAAQ,GAAK,EAAQ,QAEvB,EAAY,UAAU,EAAQ,gBAGlC,EAAQ,KAAK,EAAQ,GACrB,EAAQ,iBACN,eACA,IAAgB,GACZ,oCACA,GAEN,EAAQ,KAAK,SACN,EAAP,CACA,EAAQ,KAIC,4BAA4B,CACvC,EACA,EACA,EACA,EACA,EACA,IAEO,GAAI,GAAK,YACd,MAAM,EAAK,CACT,KAAM,IAAW,MAAQ,EAAO,OAChC,SACA,QAAS,CACP,eACE,GAAe,uCAElB,KACD,KAAO,IAAa,CAClB,KAAM,GAAS,KAAM,GAAS,OAC9B,AAAI,EAAS,QAAU,KACrB,EAAS,UAAU,GAAK,EAAS,QAEnC,EAAY,UAAU,IAExB,AAAC,GAAU,CACT,EAAS,UAAU,GAAK,MASnB,mCAAmC,SAC9C,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAI,CACF,GAAI,GACJ,GAAI,MAAO,iBAAmB,YAC5B,EAAM,GAAI,oBACL,CACL,KAAM,GAAW,CACf,qBACA,qBACA,qBACA,qBACA,qBAEF,OAAS,GAAI,EAAG,EAAM,EAAS,OAAQ,EAAI,EAAK,IAC9C,GAAI,CACF,EAAM,GAAI,eAAc,EAAS,IACjC,WACA,GAKN,GAAI,IAAQ,OACV,OAEF,EAAI,KAAK,EAAQ,EAAO,EAAK,IAC7B,EAAI,iBACF,eACA,IAAgB,GACZ,oCACA,GAEN,EAAI,KAAK,GACT,EAAY,UAAU,EAAI,mBAC1B,IAGS,gBAAgB,SAC3B,EACA,EACA,CACA,EAAkB,UAAU,cAAc,IAU/B,0BAA0B,SACrC,EACQ,CACR,MAAO,MAAK,UAAU,EAAS,eAMpB,gCAAgC,SAC3C,EACA,EACQ,CACR,MAAO,MAAK,UAAU,EAAS,eAMpB,oBAAoB,SAC/B,EACA,EACA,CACA,EAAS,aAAa,IAYX,0BAA0B,SACrC,EACA,EACM,CACN,EAAS,SAAS,IAMP,gCAAgC,SAC3C,EACA,EACA,EACA,CACA,EAAS,SAAS,MA3ML,+BADF,iCADT",
  "names": []
}
