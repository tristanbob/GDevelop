{
  "version": 3,
  "sources": ["../../../../../../GDJS/Runtime/events-tools/cameratools.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2016 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\nnamespace gdjs {\n  export namespace evtTools {\n    export namespace camera {\n      export const setCameraX = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        x: float,\n        layer: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        instanceContainer.getLayer(layer).setCameraX(x, cameraId);\n      };\n\n      export const setCameraY = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        y: float,\n        layer: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        instanceContainer.getLayer(layer).setCameraY(y, cameraId);\n      };\n\n      export const getCameraX = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraX();\n      };\n\n      export const getCameraY = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraY();\n      };\n\n      export const getCameraWidth = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraWidth();\n      };\n\n      export const getCameraHeight = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraHeight();\n      };\n\n      export const getCameraBorderLeft = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return (\n          getCameraX(instanceContainer, layer, cameraId) -\n          getCameraWidth(instanceContainer, layer, cameraId) / 2\n        );\n      };\n\n      export const getCameraBorderRight = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return (\n          getCameraX(instanceContainer, layer, cameraId) +\n          getCameraWidth(instanceContainer, layer, cameraId) / 2\n        );\n      };\n\n      export const getCameraBorderTop = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return (\n          getCameraY(instanceContainer, layer, cameraId) -\n          getCameraHeight(instanceContainer, layer, cameraId) / 2\n        );\n      };\n\n      export const getCameraBorderBottom = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return (\n          getCameraY(instanceContainer, layer, cameraId) +\n          getCameraHeight(instanceContainer, layer, cameraId) / 2\n        );\n      };\n\n      export const showLayer = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer.getLayer(layer).show(true);\n      };\n\n      export const hideLayer = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer.getLayer(layer).show(false);\n      };\n\n      export const layerIsVisible = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string\n      ): boolean {\n        return (\n          instanceContainer.hasLayer(layer) &&\n          instanceContainer.getLayer(layer).isVisible()\n        );\n      };\n\n      export const setCameraRotation = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        rotation: float,\n        layer: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setCameraRotation(rotation, cameraId);\n      };\n\n      export const getCameraRotation = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraRotation(cameraId);\n      };\n\n      export const getCameraZoom = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        cameraId: integer\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getCameraZoom(cameraId);\n      };\n\n      export const setCameraZoom = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        newZoom: float,\n        layer: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setCameraZoom(newZoom, cameraId);\n      };\n\n      export const centerCamera = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        object: gdjs.RuntimeObject | null,\n        anticipateMove: boolean,\n        layerName: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layerName) || object == null) {\n          return;\n        }\n        let xOffset = 0;\n        let yOffset = 0;\n        if (anticipateMove && !object.hasNoForces()) {\n          const objectAverageForce = object.getAverageForce();\n          const elapsedTimeInSeconds =\n            object.getElapsedTime(instanceContainer) / 1000;\n          xOffset = objectAverageForce.getX() * elapsedTimeInSeconds;\n          yOffset = objectAverageForce.getY() * elapsedTimeInSeconds;\n        }\n        const layer = instanceContainer.getLayer(layerName);\n        layer.setCameraX(object.getCenterXInScene() + xOffset, cameraId);\n        layer.setCameraY(object.getCenterYInScene() + yOffset, cameraId);\n      };\n\n      /**\n       * @deprecated prefer using centerCamera and clampCamera.\n       */\n      export const centerCameraWithinLimits = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        object: gdjs.RuntimeObject | null,\n        left: number,\n        top: number,\n        right: number,\n        bottom: number,\n        anticipateMove: boolean,\n        layerName: string,\n        cameraId: integer\n      ) {\n        centerCamera(\n          instanceContainer,\n          object,\n          anticipateMove,\n          layerName,\n          cameraId\n        );\n        clampCamera(\n          instanceContainer,\n          left,\n          top,\n          right,\n          bottom,\n          layerName,\n          cameraId\n        );\n      };\n\n      export const clampCamera = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        left: float,\n        top: float,\n        right: float,\n        bottom: float,\n        layerName: string,\n        cameraId: integer\n      ) {\n        if (!instanceContainer.hasLayer(layerName)) {\n          return;\n        }\n        const layer = instanceContainer.getLayer(layerName);\n        const cameraHalfWidth = layer.getCameraWidth(cameraId) / 2;\n        const cameraHalfHeight = layer.getCameraHeight(cameraId) / 2;\n\n        const centerLeftBound = left + cameraHalfWidth;\n        const centerRightBound = right - cameraHalfWidth;\n        const centerTopBound = top + cameraHalfHeight;\n        const centerBottomBound = bottom - cameraHalfHeight;\n\n        const cameraX =\n          centerLeftBound < centerRightBound\n            ? gdjs.evtTools.common.clamp(\n                layer.getCameraX(cameraId),\n                centerLeftBound,\n                centerRightBound\n              )\n            : // Center on the bounds when they are too small to fit the viewport.\n              (centerLeftBound + centerRightBound) / 2;\n        const cameraY =\n          centerTopBound < centerBottomBound\n            ? gdjs.evtTools.common.clamp(\n                layer.getCameraY(cameraId),\n                centerTopBound,\n                centerBottomBound\n              )\n            : // Center on the bounds when they are too small to fit the viewport.\n              (centerTopBound + centerBottomBound) / 2;\n\n        layer.setCameraX(cameraX, cameraId);\n        layer.setCameraY(cameraY, cameraId);\n      };\n\n      /**\n       * Update a layer effect parameter (with a number).\n       * @param instanceContainer the container owning the layer\n       * @param layer The name of the layer\n       * @param effect The name of the effect\n       * @param parameter The parameter to update\n       * @param value The new value\n       */\n      export const setLayerEffectDoubleParameter = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        effect: string,\n        parameter: string,\n        value: float\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setEffectDoubleParameter(effect, parameter, value);\n      };\n\n      /**\n       * Update a layer effect parameter (with a string).\n       * @param instanceContainer the container owning the layer\n       * @param layer The name of the layer\n       * @param effect The name of the effect\n       * @param parameter The parameter to update\n       * @param value The new value\n       */\n      export const setLayerEffectStringParameter = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        effect: string,\n        parameter: string,\n        value: string\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setEffectStringParameter(effect, parameter, value);\n      };\n\n      /**\n       * Enable or disable a layer effect parameter (boolean).\n       * @param instanceContainer the container owning the layer\n       * @param layer The name of the layer\n       * @param effect The name of the effect\n       * @param parameter The parameter to update\n       * @param value The new value\n       */\n      export const setLayerEffectBooleanParameter = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        effect: string,\n        parameter: string,\n        value: boolean\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setEffectBooleanParameter(effect, parameter, value);\n      };\n\n      /**\n       * Enable, or disable, an effect of a layer.\n       * @param instanceContainer the container owning the layer\n       * @param layer The name of the layer\n       * @param effect The name of the effect\n       * @param enabled true to enable, false to disable.\n       */\n      export const enableLayerEffect = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        effect: string,\n        enabled: boolean\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        instanceContainer.getLayer(layer).enableEffect(effect, enabled);\n      };\n\n      /**\n       * Check if an effect is enabled.\n       * @param instanceContainer the container owning the layer\n       * @param layer The name of the layer\n       * @param effect The name of the effect\n       * @return true if the effect is enabled, false otherwise.\n       */\n      export const layerEffectEnabled = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        effect: string\n      ): boolean {\n        if (!instanceContainer.hasLayer(layer)) {\n          return true;\n        }\n        return instanceContainer.getLayer(layer).isEffectEnabled(effect);\n      };\n\n      export const setLayerTimeScale = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        timeScale: float\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer.getLayer(layer).setTimeScale(timeScale);\n      };\n\n      export const getLayerTimeScale = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 1;\n        }\n        return instanceContainer.getLayer(layer).getTimeScale();\n      };\n\n      export const setLayerDefaultZOrder = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string,\n        defaultZOrder: integer\n      ) {\n        if (!instanceContainer.hasLayer(layer)) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layer)\n          .setDefaultZOrder(defaultZOrder);\n      };\n\n      export const getLayerDefaultZOrder = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layer: string\n      ): number {\n        if (!instanceContainer.hasLayer(layer)) {\n          return 0;\n        }\n        return instanceContainer.getLayer(layer).getDefaultZOrder();\n      };\n\n      /**\n       * @param instanceContainer the container owning the layer\n       * @param layerName The lighting layer with the ambient color.\n       * @param rgbColor The color, in RGB format (\"128;200;255\").\n       */\n      export const setLayerAmbientLightColor = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        layerName: string,\n        rgbColor: string\n      ) {\n        if (\n          !instanceContainer.hasLayer(layerName) ||\n          !instanceContainer.getLayer(layerName).isLightingLayer()\n        ) {\n          return;\n        }\n        const colors = rgbColor.split(';');\n        if (colors.length < 3) {\n          return;\n        }\n        return instanceContainer\n          .getLayer(layerName)\n          .setClearColor(\n            parseInt(colors[0], 10),\n            parseInt(colors[1], 10),\n            parseInt(colors[2], 10)\n          );\n      };\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
