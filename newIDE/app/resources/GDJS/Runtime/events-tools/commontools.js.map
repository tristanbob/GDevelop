{
  "version": 3,
  "sources": ["../../../../../../GDJS/Runtime/events-tools/commontools.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2016 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\nnamespace gdjs {\n  export namespace evtTools {\n    export namespace common {\n      /**\n       * Convert a string to a number.\n       * @param str String to convert.\n       * @returns The parsed number, or NaN if invalid.\n       */\n      export const toNumber = function (str: string): number {\n        return parseFloat(str);\n      };\n\n      /**\n       * Convert a number to a string.\n       * @param num Value to convert to a string.\n       * @returns The value as a string.\n       */\n      export const toString = function (num: number): string {\n        //Using String literal is fastest than using toString according to\n        //http://jsperf.com/number-to-string/2 and http://jsben.ch/#/ghQYR\n        return '' + num;\n      };\n\n      /**\n       * Negate the boolean.\n       * @param bool The boolean to negate.\n       * @returns The negated value.\n       */\n      export const logicalNegation = function (bool: boolean): boolean {\n        return !bool;\n      };\n\n      /**\n       * Normalize a value between `min` and `max` to a value between 0 and 1.\n       * @param {number} val The value to normalize\n       * @param {number} min The minimum\n       * @param {number} max The maximum\n       * @returns The normalized value between 0 and 1\n       */\n      export const normalize = function (\n        val: float,\n        min: float,\n        max: float\n      ): number {\n        return min === max ? max : (val - min) / (max - min);\n      };\n\n      /**\n       * Limit a value to a range.\n       * @param x Value.\n       * @param min The minimum value.\n       * @param max The  maximum value.\n       * @returns The new value.\n       */\n      export const clamp = function (x: float, min: float, max: float): float {\n        return Math.min(Math.max(x, min), max);\n      };\n\n      /**\n       * Hyperbolic arc-cosine\n       * @param arg Value.\n       * @returns The hyperbolic arc-cosine for the value.\n       */\n      export const acosh = function (arg: integer): number {\n        // http://kevin.vanzonneveld.net\n        // +   original by: Onno Marsman\n        return Math.log(arg + Math.sqrt(arg * arg - 1));\n      };\n\n      /**\n       * Hyperbolic arcsine\n       * @param arg Value.\n       * @returns The hyperbolic arcsine for the value.\n       */\n      export const asinh = function (arg: integer): number {\n        // http://kevin.vanzonneveld.net\n        // +   original by: Onno Marsman\n        return Math.log(arg + Math.sqrt(arg * arg + 1));\n      };\n\n      /**\n       * Hyperbolic arctangent\n       * @param arg Value.\n       * @returns The hyperbolic arctangent for the value.\n       */\n      export const atanh = function (arg: integer): number {\n        // http://kevin.vanzonneveld.net\n        // +   original by: Onno Marsman\n        return 0.5 * Math.log((1 + arg) / (1 - arg));\n      };\n\n      /**\n       * Hyperbolic cosine\n       * @param arg Value.\n       * @returns The hyperbolic cosine for the value.\n       */\n      export const cosh = function (arg: integer): number {\n        return (Math.exp(arg) + Math.exp(-arg)) / 2;\n      };\n\n      /**\n       * Hyperbolic sine\n       * @param arg Value.\n       * @returns The hyperbolic sine for the value.\n       */\n      export const sinh = function (arg: integer): number {\n        return (Math.exp(arg) - Math.exp(-arg)) / 2;\n      };\n\n      /**\n       * Hyperbolic tangent\n       * @param arg Value.\n       * @returns The hyperbolic tangent for the value.\n       */\n      export const tanh = function (arg: integer): number {\n        return (\n          (Math.exp(arg) - Math.exp(-arg)) / (Math.exp(arg) + Math.exp(-arg))\n        );\n      };\n\n      /**\n       * Cotangent\n       * @param arg Value.\n       * @returns The cotangent for the value.\n       */\n      export const cot = function (arg: integer): number {\n        return 1 / Math.tan(arg);\n      };\n\n      /**\n       * Cosecant\n       * @param arg Value.\n       * @returns The cosecant for the value.\n       */\n      export const csc = function (arg: integer): number {\n        return 1 / Math.sin(arg);\n      };\n\n      /**\n       * Secant\n       * @param arg Value.\n       * @returns The secant for the value.\n       */\n      export const sec = function (arg: integer): number {\n        return 1 / Math.cos(arg);\n      };\n\n      /**\n       * Base-10 logarithm\n       * @param arg Value.\n       * @returns The base-10 logarithm for the value.\n       */\n      export const log10 = function (arg: integer): number {\n        return Math.log(arg) / Math.LN10;\n      };\n\n      /**\n       * Base-2 logarithm\n       * @param arg Value.\n       * @returns The base-2 logarithm for the value.\n       */\n      export const log2 = function (arg: integer): number {\n        return Math.log(arg) / Math.LN2;\n      };\n\n      /**\n       * Returns the sign of the number. This checks if the value is positive, negative or zero.\n       * @param arg Value.\n       * @returns Return the sign for the value (1, -1 or 0).\n       */\n      export const sign = function (arg: integer): number {\n        if (arg === 0) {\n          return 0;\n        }\n        return arg > 0 ? +1 : -1;\n      };\n\n      /**\n       * Cube root\n       * @param x Value.\n       * @returns Return the cube root for the value.\n       */\n      export const cbrt = function (x: float): number {\n        return Math.pow(x, 1 / 3);\n      };\n\n      /**\n       * N-th root\n       * @param x Base value.\n       * @param n Exponent value.\n       * @returns Return the n-th root for the value.\n       */\n      export const nthroot = function (x: float, n: number): number {\n        return Math.pow(x, 1 / n);\n      };\n\n      /**\n       * Modulo operation (the remainder after dividing one number by another)\n       * @param x Dividend value.\n       * @param y Divisor value.\n       * @returns Return the remainder for the values.\n       */\n      export const mod = function (x: float, y: float): number {\n        return x - y * Math.floor(x / y);\n      };\n\n      /**\n       * Returns the difference between two angles, in degrees.\n       * @param angle1 First angle, in degrees.\n       * @param angle2 Second angle, in degrees.\n       * @returns Return the difference of the angles, in degrees.\n       */\n      export const angleDifference = function (\n        angle1: number,\n        angle2: number\n      ): number {\n        return (\n          gdjs.evtTools.common.mod(\n            gdjs.evtTools.common.mod(angle1 - angle2, 360.0) + 180.0,\n            360.0\n          ) - 180.0\n        );\n      };\n\n      /**\n       * Returns the angle, in degrees, between two positions.\n       * @param x1 First point X position.\n       * @param y1 First point Y position.\n       * @param x2 Second point X position.\n       * @param y2 Second point Y position.\n       * @returns The angle between the positions, in degrees.\n       */\n      export const angleBetweenPositions = function (\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number\n      ): number {\n        return (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n      };\n\n      /**\n       * Returns the distance, in pixels, between two positions.\n       * @param x1 First point X position.\n       * @param y1 First point Y position.\n       * @param x2 Second point X position.\n       * @param y2 Second point Y position.\n       * @returns The distance between the positions, in pixels.\n       */\n      export const distanceBetweenPositions = function (\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number\n      ): number {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      };\n\n      /**\n       * Runs a linear interpolation between a and b.\n       * @param a Start value.\n       * @param b End value.\n       * @param x The interpolation value between 0 and 1.\n       * @returns The interpolated value, now between a and b.\n       */\n      export const lerp = function (a: number, b: integer, x: float): number {\n        return a + (b - a) * x;\n      };\n\n      /**\n       * Truncate a number.\n       * @param x Value.\n       * @returns Return the value with all decimal places dropped.\n       */\n      export const trunc = function (x: float): number {\n        return x | 0;\n      };\n\n      /**\n       * Compute the X position when given an angle and distance relative to the origin (0;0).\n       * This is also known as getting the cartesian coordinates of a 2D vector, using its polar coordinates.\n       * @param angle The angle, in degrees.\n       * @param distance The distance from the object, in pixels.\n       */\n      export const getXFromAngleAndDistance = function (\n        angle: float,\n        distance: float\n      ): number {\n        return distance * Math.cos(gdjs.toRad(angle));\n      };\n\n      /**\n       * Compute the Y position when given an angle and distance relative to the origin (0;0).\n       * This is also known as getting the cartesian coordinates of a 2D vector, using its polar coordinates.\n       * @param angle The angle, in degrees.\n       * @param distance The distance from the object, in pixels.\n       */\n      export const getYFromAngleAndDistance = function (\n        angle: float,\n        distance: float\n      ): number {\n        return distance * Math.sin(gdjs.toRad(angle));\n      };\n\n      /**\n       * Rounds a number to the Nth decimal place\n       * @param {float} value\n       * @param {number} decimalPlace\n       * @returns the rounded value\n       */\n      export const roundTo = function (\n        value: float,\n        decimalPlace: number\n      ): number {\n        if (!decimalPlace || !Number.isInteger(decimalPlace))\n          return Math.round(value);\n        return (\n          Math.round(value * Math.pow(10, decimalPlace)) /\n          Math.pow(10, decimalPlace)\n        );\n      };\n\n      /**\n       * Rounds down a number to the Nth decimal place\n       * @param {float} value\n       * @param {number} decimalPlace\n       * @returns the rounded value\n       */\n      export const floorTo = function (\n        value: float,\n        decimalPlace: number\n      ): number {\n        if (!decimalPlace || !Number.isInteger(decimalPlace))\n          return Math.floor(value);\n        return (\n          Math.floor(value * Math.pow(10, decimalPlace)) /\n          Math.pow(10, decimalPlace)\n        );\n      };\n\n      /**\n       * Rounds up a number to the Nth decimal place\n       * @param {float} value\n       * @param {number} decimalPlace\n       * @returns the rounded value\n       */\n      export const ceilTo = function (\n        value: float,\n        decimalPlace: number\n      ): number {\n        if (!decimalPlace || !Number.isInteger(decimalPlace))\n          return Math.ceil(value);\n        return (\n          Math.ceil(value * Math.pow(10, decimalPlace)) /\n          Math.pow(10, decimalPlace)\n        );\n      };\n\n      /**\n       * Pi 3.1415...\n       * @returns the Pi number\n       */\n      export const pi = function (): number {\n        return Math.PI;\n      };\n\n      /**\n       * Linearly interpolates between two angles (in degrees) by taking the shortest direction around the circle.\n       * @param angle1 Starting angle, in degrees.\n       * @param angle2 Destination angle, in degrees.\n       * @param x The interpolation value between 0 and 1.\n       * @returns Return the interpolated angle, in degrees.\n       */\n      export const lerpAngle = function (\n        angle1: float,\n        angle2: float,\n        x: float\n      ): float {\n        return (\n          angle1 + gdjs.evtTools.common.angleDifference(angle2, angle1) * x\n        );\n      };\n\n      export const resolveAsyncEventsFunction = (\n        eventsFunctionContext: EventsFunctionContext\n      ) => {\n        if (\n          !!eventsFunctionContext &&\n          !!eventsFunctionContext.task &&\n          !!eventsFunctionContext.task.resolve\n        )\n          eventsFunctionContext.task.resolve();\n      };\n\n      const checkIsMobile = (): boolean => {\n        if (typeof cc !== 'undefined' && cc.sys) {\n          return cc.sys.isMobile;\n        }\n        // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'Cocoon'.\n        else if (typeof Cocoon !== 'undefined' && Cocoon.App) {\n          return true;\n        } else if (typeof window !== 'undefined' && (window as any).cordova) {\n          return true;\n        } else if (typeof window !== 'undefined') {\n          // Try to detect mobile device browsers.\n          if (\n            /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n              navigator.userAgent\n            ) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n              navigator.userAgent.substr(0, 4)\n            )\n          ) {\n            return true;\n          }\n\n          // Try to detect iOS\n          if (/iPad|iPhone|iPod/.test(navigator.platform)) {\n            return true;\n          } else {\n            if (/MacIntel/.test(navigator.platform)) {\n              // Work around for recent iPads that are \"desktop-class browsing\".\n              // We can still detect them using their touchscreen, but this is a hack.\n              // If mac laptops start to support touchscreens, this won't work anymore. Hence it's better\n              // to test for the presence of a touchscreen if needed rather than checking if the device\n              // is \"mobile\".\n              return !!navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n            }\n          }\n        }\n\n        return false;\n      };\n\n      let cachedIsMobile: boolean | null = null;\n      /**\n       * Check if the game runs on a mobile device (iPhone, iPad, Android).\n       * Note that the distinction between what is a mobile device and what is not\n       * is becoming blurry. If you use this for mobile controls,\n       * prefer to check if the device has touchscreen support.\n       */\n      export const isMobile = (): boolean => {\n        if (cachedIsMobile !== null) {\n          return cachedIsMobile;\n        }\n        return (cachedIsMobile = checkIsMobile());\n      };\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
