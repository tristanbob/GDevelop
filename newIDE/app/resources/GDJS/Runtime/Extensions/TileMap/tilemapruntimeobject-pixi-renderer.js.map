{
  "version": 3,
  "sources": ["../../../../../../../Extensions/TileMap/tilemapruntimeobject-pixi-renderer.ts"],
  "sourcesContent": ["/// <reference path=\"helper/TileMapHelper.d.ts\" />\n/// <reference path=\"pixi-tilemap/dist/pixi-tilemap.d.ts\" />\nnamespace gdjs {\n  /**\n   * The PIXI.js renderer for the Tile map runtime object.\n   *\n   * @class TileMapRuntimeObjectPixiRenderer\n   */\n  export class TileMapRuntimeObjectPixiRenderer {\n    private _object: any;\n    private _tileMap: TileMapHelper.EditableTileMap | null = null;\n\n    private _pixiObject: PIXI.tilemap.CompositeTilemap;\n\n    /**\n     * @param runtimeObject The object to render\n     * @param instanceContainer The gdjs.RuntimeScene in which the object is\n     */\n    constructor(\n      runtimeObject: gdjs.TileMapRuntimeObject,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ) {\n      this._object = runtimeObject;\n\n      // This setting allows tile maps with more than 16K tiles.\n      PIXI.tilemap.settings.use32bitIndex = true;\n\n      // Load (or reset)\n      this._pixiObject = new PIXI.tilemap.CompositeTilemap();\n      this._pixiObject.tileAnim = [0, 0];\n\n      instanceContainer\n        .getLayer('')\n        .getRenderer()\n        .addRendererObject(this._pixiObject, runtimeObject.getZOrder());\n      this.updateAngle();\n      this.updateOpacity();\n      this.updatePosition();\n    }\n\n    getRendererObject() {\n      return this._pixiObject;\n    }\n\n    incrementAnimationFrameX(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      this._pixiObject.tileAnim[0] += 1;\n    }\n\n    updatePixiTileMap(\n      tileMap: TileMapHelper.EditableTileMap,\n      textureCache: TileMapHelper.TileTextureCache\n    ) {\n      this._tileMap = tileMap;\n      TileMapHelper.PixiTileMapHelper.updatePixiTileMap(\n        this._pixiObject,\n        tileMap,\n        textureCache,\n        this._object._displayMode,\n        this._object._layerIndex\n      );\n    }\n\n    updatePosition(): void {\n      this._pixiObject.pivot.x = this.getTileMapWidth() / 2;\n      this._pixiObject.pivot.y = this.getTileMapHeight() / 2;\n      this._pixiObject.position.x = this._object.x + this.getWidth() / 2;\n      this._pixiObject.position.y = this._object.y + this.getHeight() / 2;\n    }\n\n    updateAngle(): void {\n      this._pixiObject.rotation = gdjs.toRad(this._object.angle);\n    }\n\n    updateOpacity(): void {\n      this._pixiObject.alpha = this._object._opacity / 255;\n    }\n\n    getTileMapWidth() {\n      const tileMap = this._tileMap;\n      return tileMap ? tileMap.getWidth() : 20;\n    }\n\n    getTileMapHeight() {\n      const tileMap = this._tileMap;\n      return tileMap ? tileMap.getHeight() : 20;\n    }\n\n    setWidth(width: float): void {\n      this._pixiObject.scale.x = width / this.getTileMapWidth();\n      this._pixiObject.position.x = this._object.x + width / 2;\n    }\n\n    setHeight(height: float): void {\n      this._pixiObject.scale.y = height / this.getTileMapHeight();\n      this._pixiObject.position.y = this._object.y + height / 2;\n    }\n\n    setScaleX(scaleX: float): void {\n      this._pixiObject.scale.x = scaleX;\n      const width = scaleX * this.getTileMapWidth();\n      this._pixiObject.position.x = this._object.x + width / 2;\n    }\n\n    setScaleY(scaleY: float): void {\n      this._pixiObject.scale.y = scaleY;\n      const height = scaleY * this.getTileMapHeight();\n      this._pixiObject.position.y = this._object.y + height / 2;\n    }\n\n    getWidth(): float {\n      return this.getTileMapWidth() * this._pixiObject.scale.x;\n    }\n\n    getHeight(): float {\n      return this.getTileMapHeight() * this._pixiObject.scale.y;\n    }\n\n    getScaleX(): float {\n      return this._pixiObject.scale.x;\n    }\n\n    getScaleY(): float {\n      return this._pixiObject.scale.y;\n    }\n  }\n  export const TileMapRuntimeObjectRenderer =\n    gdjs.TileMapRuntimeObjectPixiRenderer;\n  export type TileMapRuntimeObjectRenderer = gdjs.TileMapRuntimeObjectPixiRenderer;\n}\n"],
  "mappings": "AAEA,GAAU,MAAV,UAAU,EAAV,CAMS,OAAuC,CAU5C,YACE,EACA,EACA,CAXM,cAAiD,KAYvD,KAAK,QAAU,EAGf,KAAK,QAAQ,SAAS,cAAgB,GAGtC,KAAK,YAAc,GAAI,MAAK,QAAQ,iBACpC,KAAK,YAAY,SAAW,CAAC,EAAG,GAEhC,EACG,SAAS,IACT,cACA,kBAAkB,KAAK,YAAa,EAAc,aACrD,KAAK,cACL,KAAK,gBACL,KAAK,iBAGP,mBAAoB,CAClB,MAAO,MAAK,YAGd,yBAAyB,EAAkD,CACzE,KAAK,YAAY,SAAS,IAAM,EAGlC,kBACE,EACA,EACA,CACA,KAAK,SAAW,EAChB,cAAc,kBAAkB,kBAC9B,KAAK,YACL,EACA,EACA,KAAK,QAAQ,aACb,KAAK,QAAQ,aAIjB,gBAAuB,CACrB,KAAK,YAAY,MAAM,EAAI,KAAK,kBAAoB,EACpD,KAAK,YAAY,MAAM,EAAI,KAAK,mBAAqB,EACrD,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,KAAK,WAAa,EACjE,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,KAAK,YAAc,EAGpE,aAAoB,CAClB,KAAK,YAAY,SAAW,EAAK,MAAM,KAAK,QAAQ,OAGtD,eAAsB,CACpB,KAAK,YAAY,MAAQ,KAAK,QAAQ,SAAW,IAGnD,iBAAkB,CAChB,KAAM,GAAU,KAAK,SACrB,MAAO,GAAU,EAAQ,WAAa,GAGxC,kBAAmB,CACjB,KAAM,GAAU,KAAK,SACrB,MAAO,GAAU,EAAQ,YAAc,GAGzC,SAAS,EAAoB,CAC3B,KAAK,YAAY,MAAM,EAAI,EAAQ,KAAK,kBACxC,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAQ,EAGzD,UAAU,EAAqB,CAC7B,KAAK,YAAY,MAAM,EAAI,EAAS,KAAK,mBACzC,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAS,EAG1D,UAAU,EAAqB,CAC7B,KAAK,YAAY,MAAM,EAAI,EAC3B,KAAM,GAAQ,EAAS,KAAK,kBAC5B,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAQ,EAGzD,UAAU,EAAqB,CAC7B,KAAK,YAAY,MAAM,EAAI,EAC3B,KAAM,GAAS,EAAS,KAAK,mBAC7B,KAAK,YAAY,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAS,EAG1D,UAAkB,CAChB,MAAO,MAAK,kBAAoB,KAAK,YAAY,MAAM,EAGzD,WAAmB,CACjB,MAAO,MAAK,mBAAqB,KAAK,YAAY,MAAM,EAG1D,WAAmB,CACjB,MAAO,MAAK,YAAY,MAAM,EAGhC,WAAmB,CACjB,MAAO,MAAK,YAAY,MAAM,GAlH3B,EAAM,mCAqHA,+BACX,EAAK,mCA5HC",
  "names": []
}
