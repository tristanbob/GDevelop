{
  "version": 3,
  "sources": ["../../../../../../../Extensions/AdvancedWindow/electron-advancedwindowtools.ts"],
  "sourcesContent": ["namespace gdjs {\n  /**\n   * Tools to manipulate the game window positioning and\n   * interactions with the operating system.\n   * @author arthuro555\n   */\n  export namespace evtTools {\n    export namespace advancedWindow {\n      const getElectronBrowserWindow = (runtimeScene: gdjs.RuntimeScene) => {\n        const electronRemote = runtimeScene\n          .getGame()\n          .getRenderer()\n          .getElectronRemote();\n        if (electronRemote) {\n          return electronRemote.getCurrentWindow();\n        }\n\n        return null;\n      };\n\n      export const focus = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          if (activate) {\n            electronBrowserWindow.focus();\n          } else {\n            electronBrowserWindow.blur();\n          }\n        }\n      };\n\n      export const isFocused = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isFocused();\n        }\n        return false;\n      };\n\n      export const show = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          if (activate) {\n            electronBrowserWindow.showInactive();\n          } else {\n            electronBrowserWindow.hide();\n          }\n        }\n      };\n\n      export const isVisible = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isVisible();\n        }\n        return false;\n      };\n\n      export const maximize = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          if (activate) {\n            electronBrowserWindow.maximize();\n          } else {\n            electronBrowserWindow.unmaximize();\n          }\n        }\n      };\n\n      export const isMaximized = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isMaximized();\n        }\n        return false;\n      };\n\n      export const minimize = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          if (activate) {\n            electronBrowserWindow.minimize();\n          } else {\n            electronBrowserWindow.restore();\n          }\n        }\n      };\n\n      export const isMinimized = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isMinimized();\n        }\n        return false;\n      };\n\n      export const enable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setEnabled(activate);\n        }\n      };\n\n      export const isEnabled = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isEnabled();\n        }\n        return false;\n      };\n\n      export const setResizable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setResizable(activate);\n        }\n      };\n\n      export const isResizable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isResizable();\n        }\n        return false;\n      };\n\n      export const setMovable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setMovable(activate);\n        }\n      };\n\n      export const isMovable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isMovable();\n        }\n        return false;\n      };\n\n      export const setMaximizable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setMaximizable(activate);\n        }\n      };\n\n      export const isMaximizable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isMaximizable();\n        }\n        return false;\n      };\n\n      export const setMinimizable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setMinimizable(activate);\n        }\n      };\n\n      export const isMinimizable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isMinimizable();\n        }\n        return false;\n      };\n\n      export const setFullScreenable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setFullScreenable(activate);\n        }\n      };\n\n      export const isFullScreenable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isFullScreenable();\n        }\n        return false;\n      };\n\n      export const setClosable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setClosable(activate);\n        }\n      };\n\n      export const isClosable = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isClosable();\n        }\n        return false;\n      };\n\n      export const setAlwaysOnTop = function (\n        activate: boolean,\n        level:\n          | 'normal'\n          | 'floating'\n          | 'torn-off-menu'\n          | 'modal-panel'\n          | 'main-menu'\n          | 'status'\n          | 'pop-up-menu'\n          | 'screen-saver',\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setAlwaysOnTop(activate, level);\n        }\n      };\n\n      export const isAlwaysOnTop = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isAlwaysOnTop();\n        }\n        return false;\n      };\n\n      export const setPosition = function (\n        x: float,\n        y: float,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          // Convert x and y to (32 bit) integers to avoid Electron errors.\n          electronBrowserWindow.setPosition(~~x, ~~y);\n        }\n      };\n\n      export const getPositionX = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): number {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.getPosition()[0];\n        }\n        return 0;\n      };\n\n      export const getPositionY = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): number {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.getPosition()[1];\n        }\n        return 0;\n      };\n\n      export const setKiosk = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setKiosk(activate);\n        }\n      };\n\n      export const isKiosk = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.isKiosk();\n        }\n        return false;\n      };\n\n      export const flash = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.flashFrame(activate);\n        }\n      };\n\n      export const setHasShadow = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setHasShadow(activate);\n        }\n      };\n\n      export const hasShadow = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): boolean {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.hasShadow();\n        }\n        return false;\n      };\n\n      export const setOpacity = function (\n        opacity: float,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setOpacity(opacity);\n        }\n      };\n\n      export const getOpacity = function (\n        runtimeScene: gdjs.RuntimeScene\n      ): number {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          return electronBrowserWindow.getOpacity();\n        }\n        return 1;\n      };\n\n      export const setContentProtection = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setContentProtection(activate);\n        }\n      };\n\n      export const setFocusable = function (\n        activate: boolean,\n        runtimeScene: gdjs.RuntimeScene\n      ) {\n        const electronBrowserWindow = getElectronBrowserWindow(runtimeScene);\n        if (electronBrowserWindow) {\n          electronBrowserWindow.setFocusable(activate);\n        }\n      };\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
