{
  "version": 3,
  "sources": ["../../../../../../../Extensions/PanelSpriteObject/panelspriteruntimeobject.ts"],
  "sourcesContent": ["/*\n *  GDevelop JS Platform\n *  2013 Florian Rival (Florian.Rival@gmail.com)\n */\nnamespace gdjs {\n  export type PanelSpriteObjectDataType = {\n    /** The right margin */\n    rightMargin: number;\n    /** The left margin */\n    leftMargin: number;\n    /** The top margin */\n    topMargin: number;\n    /** The bottom margin */\n    bottomMargin: number;\n    /** Are the central part and borders tiled? */\n    tiled: boolean;\n    /** The object width */\n    width: number;\n    /** The object height */\n    height: number;\n    /** The name of the resource containing the texture to use */\n    texture: string;\n  };\n\n  export type PanelSpriteObjectData = ObjectData & PanelSpriteObjectDataType;\n\n  /**\n   * The PanelSpriteRuntimeObject displays a tiled texture.\n   */\n  export class PanelSpriteRuntimeObject extends gdjs.RuntimeObject {\n    _rBorder: integer;\n    _lBorder: integer;\n    _tBorder: integer;\n    _bBorder: integer;\n    _tiled: boolean;\n    opacity: float = 255;\n\n    // Width and height can be stored because they do not depend on the\n    // size of the texture being used (contrary to most objects).\n    _width: float;\n    _height: float;\n\n    _renderer: gdjs.PanelSpriteRuntimeObjectRenderer;\n\n    /**\n     * @param instanceContainer The container the object belongs to.\n     * @param panelSpriteObjectData The initial properties of the object\n     */\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      panelSpriteObjectData: PanelSpriteObjectData\n    ) {\n      super(instanceContainer, panelSpriteObjectData);\n      this._rBorder = panelSpriteObjectData.rightMargin;\n      this._lBorder = panelSpriteObjectData.leftMargin;\n      this._tBorder = panelSpriteObjectData.topMargin;\n      this._bBorder = panelSpriteObjectData.bottomMargin;\n      this._tiled = panelSpriteObjectData.tiled;\n      this._width = panelSpriteObjectData.width;\n      this._height = panelSpriteObjectData.height;\n      this._renderer = new gdjs.PanelSpriteRuntimeObjectRenderer(\n        this,\n        instanceContainer,\n        panelSpriteObjectData.texture,\n        panelSpriteObjectData.tiled\n      );\n\n      // *ALWAYS* call `this.onCreated()` at the very end of your object constructor.\n      this.onCreated();\n    }\n\n    updateFromObjectData(\n      oldObjectData: PanelSpriteObjectData,\n      newObjectData: PanelSpriteObjectData\n    ): boolean {\n      if (oldObjectData.width !== newObjectData.width) {\n        this.setWidth(newObjectData.width);\n      }\n      if (oldObjectData.height !== newObjectData.height) {\n        this.setHeight(newObjectData.height);\n      }\n      let updateTexture = false;\n      if (oldObjectData.rightMargin !== newObjectData.rightMargin) {\n        this._rBorder = newObjectData.rightMargin;\n        updateTexture = true;\n      }\n      if (oldObjectData.leftMargin !== newObjectData.leftMargin) {\n        this._lBorder = newObjectData.leftMargin;\n        updateTexture = true;\n      }\n      if (oldObjectData.topMargin !== newObjectData.topMargin) {\n        this._tBorder = newObjectData.topMargin;\n        updateTexture = true;\n      }\n      if (oldObjectData.bottomMargin !== newObjectData.bottomMargin) {\n        this._bBorder = newObjectData.bottomMargin;\n        updateTexture = true;\n      }\n      if (oldObjectData.texture !== newObjectData.texture) {\n        updateTexture = true;\n      }\n      if (updateTexture) {\n        this.setTexture(newObjectData.texture, this.getRuntimeScene());\n      }\n      if (oldObjectData.tiled !== newObjectData.tiled) {\n        return false;\n      }\n      return true;\n    }\n\n    getRendererObject() {\n      return this._renderer.getRendererObject();\n    }\n\n    onDestroyFromScene(instanceContainer: gdjs.RuntimeInstanceContainer): void {\n      super.onDestroyFromScene(instanceContainer);\n      // @ts-ignore\n      if (this._renderer.onDestroy) {\n        // @ts-ignore\n        this._renderer.onDestroy();\n      }\n    }\n\n    update(instanceContainer: gdjs.RuntimeInstanceContainer): void {\n      this._renderer.ensureUpToDate();\n    }\n\n    /**\n     * Initialize the extra parameters that could be set for an instance.\n     */\n    extraInitializationFromInitialInstance(initialInstanceData: InstanceData) {\n      if (initialInstanceData.customSize) {\n        this.setWidth(initialInstanceData.width);\n        this.setHeight(initialInstanceData.height);\n      }\n    }\n\n    /**\n     * Set the x position of the panel sprite.\n     * @param x The new x position in pixels.\n     */\n    setX(x: float): void {\n      super.setX(x);\n      this._renderer.updatePosition();\n    }\n\n    /**\n     * Set the y position of the panel sprite.\n     * @param y The new y position in pixels.\n     */\n    setY(y: float): void {\n      super.setY(y);\n      this._renderer.updatePosition();\n    }\n\n    /**\n     * Set the texture of the panel sprite.\n     * @param textureName The name of the texture.\n     * @param instanceContainer The container the object lives in.\n     */\n    setTexture(\n      textureName: string,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ): void {\n      this._renderer.setTexture(textureName, instanceContainer);\n    }\n\n    /**\n     * Set the angle of the panel sprite.\n     * @param angle The new angle in degrees.\n     */\n    setAngle(angle: float): void {\n      super.setAngle(angle);\n      this._renderer.updateAngle();\n    }\n\n    /**\n     * Get the width of the panel sprite in pixels\n     * @return The width in pixels\n     */\n    getWidth(): float {\n      return this._width;\n    }\n\n    /**\n     * Get the height of the panel sprite in pixels\n     * @return The height in pixels\n     */\n    getHeight(): float {\n      return this._height;\n    }\n\n    /**\n     * Set the width of the panel sprite.\n     * @param width The new width in pixels.\n     */\n    setWidth(width: float): void {\n      if (this._width === width) return;\n\n      this._width = width;\n      this._renderer.updateWidth();\n      this.invalidateHitboxes();\n    }\n\n    /**\n     * Set the height of the panel sprite.\n     * @param height The new height in pixels.\n     */\n    setHeight(height: float): void {\n      if (this._height === height) return;\n\n      this._height = height;\n      this._renderer.updateHeight();\n      this.invalidateHitboxes();\n    }\n\n    /**\n     * Change the transparency of the object.\n     * @param opacity The new opacity, between 0 (transparent) and 255 (opaque).\n     */\n    setOpacity(opacity: float): void {\n      if (opacity < 0) {\n        opacity = 0;\n      }\n      if (opacity > 255) {\n        opacity = 255;\n      }\n      this.opacity = opacity;\n      this._renderer.updateOpacity();\n    }\n\n    /**\n     * Get the transparency of the object.\n     * @return The opacity, between 0 (transparent) and 255 (opaque).\n     */\n    getOpacity(): number {\n      return this.opacity;\n    }\n\n    /**\n     * Change the tint of the panel sprite object.\n     *\n     * @param rgbColor The color, in RGB format (\"128;200;255\").\n     */\n    setColor(rgbColor: string): void {\n      this._renderer.setColor(rgbColor);\n    }\n\n    /**\n     * Get the tint of the panel sprite object.\n     *\n     * @returns The color, in RGB format (\"128;200;255\").\n     */\n    getColor(): string {\n      return this._renderer.getColor();\n    }\n\n    // Implement support for get/set scale:\n\n    /**\n     * Get scale of the tiled sprite object.\n     */\n    getScale(): float {\n      return (this.getScaleX() + this.getScaleY()) / 2.0;\n    }\n\n    /**\n     * Get x-scale of the tiled sprite object.\n     */\n    getScaleX(): float {\n      return this._width / this._renderer.getTextureWidth();\n    }\n\n    /**\n     * Get y-scale of the tiled sprite object.\n     */\n    getScaleY(): float {\n      return this._height / this._renderer.getTextureHeight();\n    }\n\n    /**\n     * Set the tiled sprite object scale.\n     * @param newScale The new scale for the tiled sprite object.\n     */\n    setScale(newScale: float): void {\n      this.setWidth(this._renderer.getTextureWidth() * newScale);\n      this.setHeight(this._renderer.getTextureHeight() * newScale);\n    }\n\n    /**\n     * Set the tiled sprite object x-scale.\n     * @param newScale The new x-scale for the tiled sprite object.\n     */\n    setScaleX(newScale: float): void {\n      this.setWidth(this._renderer.getTextureWidth() * newScale);\n    }\n\n    /**\n     * Set the tiled sprite object y-scale.\n     * @param newScale The new y-scale for the tiled sprite object.\n     */\n    setScaleY(newScale: float): void {\n      this.setHeight(this._renderer.getTextureHeight() * newScale);\n    }\n  }\n  gdjs.registerObject(\n    'PanelSpriteObject::PanelSprite',\n    gdjs.PanelSpriteRuntimeObject\n  );\n}\n"],
  "mappings": "AAIA,GAAU,MAAV,UAAU,EAAV,CAyBS,eAAuC,GAAK,aAAc,CAmB/D,YACE,EACA,EACA,CACA,MAAM,EAAmB,GAjB3B,aAAiB,IAkBf,KAAK,SAAW,EAAsB,YACtC,KAAK,SAAW,EAAsB,WACtC,KAAK,SAAW,EAAsB,UACtC,KAAK,SAAW,EAAsB,aACtC,KAAK,OAAS,EAAsB,MACpC,KAAK,OAAS,EAAsB,MACpC,KAAK,QAAU,EAAsB,OACrC,KAAK,UAAY,GAAI,GAAK,iCACxB,KACA,EACA,EAAsB,QACtB,EAAsB,OAIxB,KAAK,YAGP,qBACE,EACA,EACS,CACT,AAAI,EAAc,QAAU,EAAc,OACxC,KAAK,SAAS,EAAc,OAE1B,EAAc,SAAW,EAAc,QACzC,KAAK,UAAU,EAAc,QAE/B,GAAI,GAAgB,GAuBpB,MAtBI,GAAc,cAAgB,EAAc,aAC9C,MAAK,SAAW,EAAc,YAC9B,EAAgB,IAEd,EAAc,aAAe,EAAc,YAC7C,MAAK,SAAW,EAAc,WAC9B,EAAgB,IAEd,EAAc,YAAc,EAAc,WAC5C,MAAK,SAAW,EAAc,UAC9B,EAAgB,IAEd,EAAc,eAAiB,EAAc,cAC/C,MAAK,SAAW,EAAc,aAC9B,EAAgB,IAEd,EAAc,UAAY,EAAc,SAC1C,GAAgB,IAEd,GACF,KAAK,WAAW,EAAc,QAAS,KAAK,mBAE1C,EAAc,QAAU,EAAc,MAM5C,mBAAoB,CAClB,MAAO,MAAK,UAAU,oBAGxB,mBAAmB,EAAwD,CACzE,MAAM,mBAAmB,GAErB,KAAK,UAAU,WAEjB,KAAK,UAAU,YAInB,OAAO,EAAwD,CAC7D,KAAK,UAAU,iBAMjB,uCAAuC,EAAmC,CACxE,AAAI,EAAoB,YACtB,MAAK,SAAS,EAAoB,OAClC,KAAK,UAAU,EAAoB,SAQvC,KAAK,EAAgB,CACnB,MAAM,KAAK,GACX,KAAK,UAAU,iBAOjB,KAAK,EAAgB,CACnB,MAAM,KAAK,GACX,KAAK,UAAU,iBAQjB,WACE,EACA,EACM,CACN,KAAK,UAAU,WAAW,EAAa,GAOzC,SAAS,EAAoB,CAC3B,MAAM,SAAS,GACf,KAAK,UAAU,cAOjB,UAAkB,CAChB,MAAO,MAAK,OAOd,WAAmB,CACjB,MAAO,MAAK,QAOd,SAAS,EAAoB,CAC3B,AAAI,KAAK,SAAW,GAEpB,MAAK,OAAS,EACd,KAAK,UAAU,cACf,KAAK,sBAOP,UAAU,EAAqB,CAC7B,AAAI,KAAK,UAAY,GAErB,MAAK,QAAU,EACf,KAAK,UAAU,eACf,KAAK,sBAOP,WAAW,EAAsB,CAC/B,AAAI,EAAU,GACZ,GAAU,GAER,EAAU,KACZ,GAAU,KAEZ,KAAK,QAAU,EACf,KAAK,UAAU,gBAOjB,YAAqB,CACnB,MAAO,MAAK,QAQd,SAAS,EAAwB,CAC/B,KAAK,UAAU,SAAS,GAQ1B,UAAmB,CACjB,MAAO,MAAK,UAAU,WAQxB,UAAkB,CAChB,MAAQ,MAAK,YAAc,KAAK,aAAe,EAMjD,WAAmB,CACjB,MAAO,MAAK,OAAS,KAAK,UAAU,kBAMtC,WAAmB,CACjB,MAAO,MAAK,QAAU,KAAK,UAAU,mBAOvC,SAAS,EAAuB,CAC9B,KAAK,SAAS,KAAK,UAAU,kBAAoB,GACjD,KAAK,UAAU,KAAK,UAAU,mBAAqB,GAOrD,UAAU,EAAuB,CAC/B,KAAK,SAAS,KAAK,UAAU,kBAAoB,GAOnD,UAAU,EAAuB,CAC/B,KAAK,UAAU,KAAK,UAAU,mBAAqB,IAjRhD,EAAM,2BAoRb,EAAK,eACH,iCACA,EAAK,4BA/SC",
  "names": []
}
