{
  "version": 3,
  "sources": ["../../../../../../../Extensions/PanelSpriteObject/panelspriteruntimeobject-pixi-renderer.ts"],
  "sourcesContent": ["namespace gdjs {\n  import PIXI = GlobalPIXIModule.PIXI;\n  class PanelSpriteRuntimeObjectPixiRenderer {\n    _object: gdjs.PanelSpriteRuntimeObject;\n    /**\n     * The _wrapperContainer must be considered as the main container of this object\n     * All transformations are applied on this container\n     * See updateOpacity for more info why.\n     */\n    _wrapperContainer: PIXI.Container;\n    /**\n     * The _spritesContainer is used to create the sprites and apply cacheAsBitmap only.\n     */\n    _spritesContainer: PIXI.Container;\n    _centerSprite: PIXI.Sprite | PIXI.TilingSprite;\n    _borderSprites: Array<PIXI.Sprite | PIXI.TilingSprite>;\n    _wasRendered: boolean = false;\n    _textureWidth = 0;\n    _textureHeight = 0;\n\n    constructor(\n      runtimeObject: gdjs.PanelSpriteRuntimeObject,\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      textureName: string,\n      tiled: boolean\n    ) {\n      this._object = runtimeObject;\n      const texture = (instanceContainer\n        .getGame()\n        .getImageManager() as gdjs.PixiImageManager).getPIXITexture(\n        textureName\n      );\n      const StretchedSprite = !tiled ? PIXI.Sprite : PIXI.TilingSprite;\n      this._spritesContainer = new PIXI.Container();\n      this._wrapperContainer = new PIXI.Container();\n      this._centerSprite = new StretchedSprite(\n        new PIXI.Texture(texture.baseTexture)\n      );\n      this._borderSprites = [\n        // Right\n        new StretchedSprite(new PIXI.Texture(texture.baseTexture)),\n        // Top-Right\n        new PIXI.Sprite(texture),\n        // Top\n        new StretchedSprite(new PIXI.Texture(texture.baseTexture)),\n        // Top-Left\n        new PIXI.Sprite(texture),\n        // Left\n        new StretchedSprite(new PIXI.Texture(texture.baseTexture)),\n        // Bottom-Left\n        new PIXI.Sprite(texture),\n        // Bottom\n        new StretchedSprite(new PIXI.Texture(texture.baseTexture)),\n        new PIXI.Sprite(texture),\n      ];\n\n      //Bottom-Right\n      this.setTexture(textureName, instanceContainer);\n      this._spritesContainer.removeChildren();\n      this._spritesContainer.addChild(this._centerSprite);\n      for (let i = 0; i < this._borderSprites.length; ++i) {\n        this._spritesContainer.addChild(this._borderSprites[i]);\n      }\n      this._wrapperContainer.addChild(this._spritesContainer);\n      instanceContainer\n        .getLayer('')\n        .getRenderer()\n        .addRendererObject(this._wrapperContainer, runtimeObject.getZOrder());\n    }\n\n    getRendererObject() {\n      return this._wrapperContainer;\n    }\n\n    ensureUpToDate() {\n      if (this._spritesContainer.visible && this._wasRendered) {\n        // PIXI uses PIXI.SCALE_MODES.LINEAR for the cached image:\n        // this._spritesContainer._cacheData.sprite._texture.baseTexture.scaleMode\n        // There seems to be no way to configure this so the optimization is disabled.\n        if (\n          this._centerSprite.texture.baseTexture.scaleMode !==\n          PIXI.SCALE_MODES.NEAREST\n        ) {\n          // Cache the rendered sprites as a bitmap to speed up rendering when\n          // lots of panel sprites are on the scene.\n          // Sadly, because of this, we need a wrapper container to workaround\n          // a PixiJS issue with alpha (see updateOpacity).\n          this._spritesContainer.cacheAsBitmap = true;\n        }\n      }\n      this._wasRendered = true;\n    }\n\n    updateOpacity(): void {\n      // The alpha is updated on a wrapper around the sprite because a known bug\n      // in Pixi will create a flicker when cacheAsBitmap is set to true.\n      // (see https://github.com/pixijs/pixijs/issues/4610)\n      this._wrapperContainer.alpha = this._object.opacity / 255;\n    }\n\n    updateAngle(): void {\n      this._wrapperContainer.rotation = gdjs.toRad(this._object.angle);\n    }\n\n    updatePosition(): void {\n      this._wrapperContainer.position.x =\n        this._object.x + this._object._width / 2;\n      this._wrapperContainer.position.y =\n        this._object.y + this._object._height / 2;\n    }\n\n    _updateLocalPositions() {\n      const obj = this._object;\n      this._centerSprite.position.x = obj._lBorder;\n      this._centerSprite.position.y = obj._tBorder;\n\n      //Right\n      this._borderSprites[0].position.x = obj._width - obj._rBorder;\n      this._borderSprites[0].position.y = obj._tBorder;\n\n      //Top-right\n      this._borderSprites[1].position.x =\n        obj._width - this._borderSprites[1].width;\n      this._borderSprites[1].position.y = 0;\n\n      //Top\n      this._borderSprites[2].position.x = obj._lBorder;\n      this._borderSprites[2].position.y = 0;\n\n      //Top-Left\n      this._borderSprites[3].position.x = 0;\n      this._borderSprites[3].position.y = 0;\n\n      //Left\n      this._borderSprites[4].position.x = 0;\n      this._borderSprites[4].position.y = obj._tBorder;\n\n      //Bottom-Left\n      this._borderSprites[5].position.x = 0;\n      this._borderSprites[5].position.y =\n        obj._height - this._borderSprites[5].height;\n\n      //Bottom\n      this._borderSprites[6].position.x = obj._lBorder;\n      this._borderSprites[6].position.y = obj._height - obj._bBorder;\n\n      //Bottom-Right\n      this._borderSprites[7].position.x =\n        obj._width - this._borderSprites[7].width;\n      this._borderSprites[7].position.y =\n        obj._height - this._borderSprites[7].height;\n    }\n\n    _updateSpritesAndTexturesSize() {\n      const obj = this._object;\n      this._centerSprite.width = Math.max(\n        obj._width - obj._rBorder - obj._lBorder,\n        0\n      );\n      this._centerSprite.height = Math.max(\n        obj._height - obj._tBorder - obj._bBorder,\n        0\n      );\n\n      //Right\n      this._borderSprites[0].width = obj._rBorder;\n      this._borderSprites[0].height = Math.max(\n        obj._height - obj._tBorder - obj._bBorder,\n        0\n      );\n\n      //Top\n      this._borderSprites[2].height = obj._tBorder;\n      this._borderSprites[2].width = Math.max(\n        obj._width - obj._rBorder - obj._lBorder,\n        0\n      );\n\n      //Left\n      this._borderSprites[4].width = obj._lBorder;\n      this._borderSprites[4].height = Math.max(\n        obj._height - obj._tBorder - obj._bBorder,\n        0\n      );\n\n      //Bottom\n      this._borderSprites[6].height = obj._bBorder;\n      this._borderSprites[6].width = Math.max(\n        obj._width - obj._rBorder - obj._lBorder,\n        0\n      );\n      this._wasRendered = true;\n      this._spritesContainer.cacheAsBitmap = false;\n    }\n\n    setTexture(\n      textureName: string,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ): void {\n      const obj = this._object;\n      const texture = instanceContainer\n        .getGame()\n        .getImageManager()\n        .getPIXITexture(textureName).baseTexture;\n      this._textureWidth = texture.width;\n      this._textureHeight = texture.height;\n\n      function makeInsideTexture(rect) {\n        //TODO\n        if (rect.width < 0) {\n          rect.width = 0;\n        }\n        if (rect.height < 0) {\n          rect.height = 0;\n        }\n        if (rect.x < 0) {\n          rect.x = 0;\n        }\n        if (rect.y < 0) {\n          rect.y = 0;\n        }\n        if (rect.x > texture.width) {\n          rect.x = texture.width;\n        }\n        if (rect.y > texture.height) {\n          rect.y = texture.height;\n        }\n        if (rect.x + rect.width > texture.width) {\n          rect.width = texture.width - rect.x;\n        }\n        if (rect.y + rect.height > texture.height) {\n          rect.height = texture.height - rect.y;\n        }\n        return rect;\n      }\n      this._centerSprite.texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            obj._lBorder,\n            obj._tBorder,\n            texture.width - obj._lBorder - obj._rBorder,\n            texture.height - obj._tBorder - obj._bBorder\n          )\n        )\n      );\n\n      //Top, Bottom, Right, Left borders:\n      this._borderSprites[0].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            texture.width - obj._rBorder,\n            obj._tBorder,\n            obj._rBorder,\n            texture.height - obj._tBorder - obj._bBorder\n          )\n        )\n      );\n      this._borderSprites[2].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            obj._lBorder,\n            0,\n            texture.width - obj._lBorder - obj._rBorder,\n            obj._tBorder\n          )\n        )\n      );\n      this._borderSprites[4].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            0,\n            obj._tBorder,\n            obj._lBorder,\n            texture.height - obj._tBorder - obj._bBorder\n          )\n        )\n      );\n      this._borderSprites[6].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            obj._lBorder,\n            texture.height - obj._bBorder,\n            texture.width - obj._lBorder - obj._rBorder,\n            obj._bBorder\n          )\n        )\n      );\n      this._borderSprites[1].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            texture.width - obj._rBorder,\n            0,\n            obj._rBorder,\n            obj._tBorder\n          )\n        )\n      );\n      this._borderSprites[3].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(new PIXI.Rectangle(0, 0, obj._lBorder, obj._tBorder))\n      );\n      this._borderSprites[5].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            0,\n            texture.height - obj._bBorder,\n            obj._lBorder,\n            obj._bBorder\n          )\n        )\n      );\n      this._borderSprites[7].texture = new PIXI.Texture(\n        texture,\n        makeInsideTexture(\n          new PIXI.Rectangle(\n            texture.width - obj._rBorder,\n            texture.height - obj._bBorder,\n            obj._rBorder,\n            obj._bBorder\n          )\n        )\n      );\n      this._updateSpritesAndTexturesSize();\n      this._updateLocalPositions();\n      this.updatePosition();\n      this._wrapperContainer.pivot.x = this._object._width / 2;\n      this._wrapperContainer.pivot.y = this._object._height / 2;\n    }\n\n    updateWidth(): void {\n      this._wrapperContainer.pivot.x = this._object._width / 2;\n      this._updateSpritesAndTexturesSize();\n      this._updateLocalPositions();\n      this.updatePosition();\n    }\n\n    updateHeight(): void {\n      this._wrapperContainer.pivot.y = this._object._height / 2;\n      this._updateSpritesAndTexturesSize();\n      this._updateLocalPositions();\n      this.updatePosition();\n    }\n\n    setColor(rgbColor): void {\n      const colors = rgbColor.split(';');\n      if (colors.length < 3) {\n        return;\n      }\n      this._centerSprite.tint = gdjs.rgbToHexNumber(\n        parseInt(colors[0], 10),\n        parseInt(colors[1], 10),\n        parseInt(colors[2], 10)\n      );\n      for (\n        let borderCounter = 0;\n        borderCounter < this._borderSprites.length;\n        borderCounter++\n      ) {\n        this._borderSprites[borderCounter].tint = gdjs.rgbToHexNumber(\n          parseInt(colors[0], 10),\n          parseInt(colors[1], 10),\n          parseInt(colors[2], 10)\n        );\n      }\n      this._spritesContainer.cacheAsBitmap = false;\n    }\n\n    getColor() {\n      const rgb = PIXI.utils.hex2rgb(this._centerSprite.tint);\n      return (\n        Math.floor(rgb[0] * 255) +\n        ';' +\n        Math.floor(rgb[1] * 255) +\n        ';' +\n        Math.floor(rgb[2] * 255)\n      );\n    }\n\n    getTextureWidth() {\n      return this._textureWidth;\n    }\n\n    getTextureHeight() {\n      return this._textureHeight;\n    }\n  }\n\n  export const PanelSpriteRuntimeObjectRenderer = PanelSpriteRuntimeObjectPixiRenderer;\n  export type PanelSpriteRuntimeObjectRenderer = PanelSpriteRuntimeObjectPixiRenderer;\n}\n"],
  "mappings": "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",
  "names": []
}
