{
  "version": 3,
  "sources": ["../../../../../../../../Extensions/PlatformBehavior/benchmarks/platformerobjectruntimebehavior.benchmark.js"],
  "sourcesContent": ["describe('gdjs.PlatformerObjectRuntimeBehavior Benchmark', function () {\n  let runtimeScene;\n  let objects;\n  const duplicateCount = 60;\n  const stepCount = 6000;\n\n  beforeEach(function () {\n    runtimeScene = makePlatformerTestRuntimeScene();\n\n    objects = new Array(duplicateCount);\n    for (let i = 0; i < duplicateCount; ++i) {\n      // Put a platformer object on a platform\n      object = new gdjs.RuntimeObject(runtimeScene, {\n        name: 'obj1',\n        type: '',\n        behaviors: [\n          {\n            type: 'PlatformBehavior::PlatformerObjectBehavior',\n            name: 'auto1',\n            gravity: 1500,\n            maxFallingSpeed: 1500,\n            acceleration: 500,\n            deceleration: 1500,\n            maxSpeed: 500,\n            jumpSpeed: 900,\n            canGrabPlatforms: true,\n            ignoreDefaultControls: true,\n            slopeMaxAngle: 60,\n            jumpSustainTime: 0.2,\n            roundCoordinates: true,\n          },\n        ],\n      });\n      object.getWidth = function () {\n        return 10;\n      };\n      object.getHeight = function () {\n        return 20;\n      };\n      runtimeScene.addObject(object);\n      object.setPosition(100 * i + 60 * 5, 400 * i - 32);\n      objects[i] = object;\n\n      // Put a platform.\n      for (let p = 0; p < 10; ++p) {\n        const platform = addPlatformObject(runtimeScene);\n        platform.setPosition(100 * i + p * platform.getWidth(), 400 * i - 10);\n      }\n    }\n  });\n\n  it('benchmark', function () {\n    this.timeout(30000);\n\n    for (let b = 0; b < 10; ++b) {\n      const benchmarkSuite = makeBenchmarkSuite({\n        benchmarksCount: 1,\n        iterationsCount: stepCount,\n      });\n      benchmarkSuite.add('jump in loop', (t) => {\n        for (let i = 0; i < duplicateCount; ++i) {\n          const object = objects[i];\n          if (t % 60 == i % 60) {\n            object.getBehavior('auto1').simulateJumpKey();\n          }\n          if (t + (i % 61) < 31) {\n            object.getBehavior('auto1').simulateRightKey();\n          }\n          if (t + (i % 61) >= 31) {\n            object.getBehavior('auto1').simulateLeftKey();\n          }\n        }\n        runtimeScene.renderAndStep(1000 / 60);\n      });\n      console.log(benchmarkSuite.run());\n    }\n  });\n});\n"],
  "mappings": "AAAA,SAAS,iDAAkD,UAAY,CACrE,GAAI,GACA,EACJ,KAAM,GAAiB,GACjB,EAAY,IAElB,WAAW,UAAY,CACrB,EAAe,iCAEf,EAAU,GAAI,OAAM,GACpB,OAAS,GAAI,EAAG,EAAI,EAAgB,EAAE,EAAG,CAEvC,OAAS,GAAI,MAAK,cAAc,EAAc,CAC5C,KAAM,OACN,KAAM,GACN,UAAW,CACT,CACE,KAAM,6CACN,KAAM,QACN,QAAS,KACT,gBAAiB,KACjB,aAAc,IACd,aAAc,KACd,SAAU,IACV,UAAW,IACX,iBAAkB,GAClB,sBAAuB,GACvB,cAAe,GACf,gBAAiB,GACjB,iBAAkB,OAIxB,OAAO,SAAW,UAAY,CAC5B,MAAO,KAET,OAAO,UAAY,UAAY,CAC7B,MAAO,KAET,EAAa,UAAU,QACvB,OAAO,YAAY,IAAM,EAAI,GAAK,EAAG,IAAM,EAAI,IAC/C,EAAQ,GAAK,OAGb,OAAS,GAAI,EAAG,EAAI,GAAI,EAAE,EAAG,CAC3B,KAAM,GAAW,kBAAkB,GACnC,EAAS,YAAY,IAAM,EAAI,EAAI,EAAS,WAAY,IAAM,EAAI,QAKxE,GAAG,YAAa,UAAY,CAC1B,KAAK,QAAQ,KAEb,OAAS,GAAI,EAAG,EAAI,GAAI,EAAE,EAAG,CAC3B,KAAM,GAAiB,mBAAmB,CACxC,gBAAiB,EACjB,gBAAiB,IAEnB,EAAe,IAAI,eAAgB,AAAC,GAAM,CACxC,OAAS,GAAI,EAAG,EAAI,EAAgB,EAAE,EAAG,CACvC,KAAM,GAAS,EAAQ,GACvB,AAAI,EAAI,IAAM,EAAI,IAChB,EAAO,YAAY,SAAS,kBAE1B,EAAK,EAAI,GAAM,IACjB,EAAO,YAAY,SAAS,mBAE1B,EAAK,EAAI,IAAO,IAClB,EAAO,YAAY,SAAS,kBAGhC,EAAa,cAAc,IAAO,MAEpC,QAAQ,IAAI,EAAe",
  "names": []
}
