{
  "version": 3,
  "sources": ["../../../../../../../Extensions/PlatformBehavior/platformruntimebehavior.ts"],
  "sourcesContent": ["/*\nGDevelop - Platform Behavior Extension\nCopyright (c) 2013-2016 Florian Rival (Florian.Rival@gmail.com)\n */\nnamespace gdjs {\n  declare var rbush: any;\n  type SearchArea = { minX: float; minY: float; maxX: float; maxY: float };\n\n  /**\n   * Manages the common objects shared by objects having a\n   * platform behavior: in particular, the platforms behaviors are required to\n   * declare themselves (see PlatformObjectsManager.addPlatform) to the manager\n   * of their associated container (see PlatformRuntimeBehavior.getManager).\n   */\n  export class PlatformObjectsManager {\n    private _platformRBush: any;\n\n    constructor(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      this._platformRBush = new rbush();\n    }\n\n    /**\n     * Get the platforms manager of an instance container.\n     */\n    static getManager(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      // @ts-ignore\n      if (!instanceContainer.platformsObjectsManager) {\n        //Create the shared manager if necessary.\n        // @ts-ignore\n        instanceContainer.platformsObjectsManager = new gdjs.PlatformObjectsManager(\n          instanceContainer\n        );\n      }\n      // @ts-ignore\n      return instanceContainer.platformsObjectsManager;\n    }\n\n    /**\n     * Add a platform to the list of existing platforms.\n     */\n    addPlatform(platformBehavior: gdjs.PlatformRuntimeBehavior) {\n      if (platformBehavior.currentRBushAABB)\n        platformBehavior.currentRBushAABB.updateAABBFromOwner();\n      else\n        platformBehavior.currentRBushAABB = new gdjs.BehaviorRBushAABB(\n          platformBehavior\n        );\n      this._platformRBush.insert(platformBehavior.currentRBushAABB);\n    }\n\n    /**\n     * Remove a platform from the list of existing platforms. Be sure that the platform was\n     * added before.\n     */\n    removePlatform(platformBehavior: gdjs.PlatformRuntimeBehavior) {\n      this._platformRBush.remove(platformBehavior.currentRBushAABB);\n    }\n\n    /**\n     * Returns all the platforms around the specified object.\n     * @param maxMovementLength The maximum distance, in pixels, the object is going to do.\n     * @return An array with all platforms near the object.\n     */\n    getAllPlatformsAround(\n      object: gdjs.RuntimeObject,\n      maxMovementLength: number,\n      result: PlatformRuntimeBehavior[]\n    ): any {\n      // TODO: This would better be done using the object AABB (getAABB), as (`getCenterX`;`getCenterY`) point\n      // is not necessarily in the middle of the object (for sprites for example).\n      const ow = object.getWidth();\n      const oh = object.getHeight();\n      const x = object.getDrawableX() + object.getCenterX();\n      const y = object.getDrawableY() + object.getCenterY();\n      const searchArea: SearchArea = gdjs.staticObject(\n        PlatformObjectsManager.prototype.getAllPlatformsAround\n      ) as SearchArea;\n      searchArea.minX = x - ow / 2 - maxMovementLength;\n      searchArea.minY = y - oh / 2 - maxMovementLength;\n      searchArea.maxX = x + ow / 2 + maxMovementLength;\n      searchArea.maxY = y + oh / 2 + maxMovementLength;\n      const nearbyPlatforms: gdjs.BehaviorRBushAABB<\n        PlatformRuntimeBehavior\n      >[] = this._platformRBush.search(searchArea);\n\n      result.length = 0;\n\n      // Extra check on the platform owner AABB\n      // TODO: PR https://github.com/4ian/GDevelop/pull/2602 should remove the need\n      // for this extra check once merged.\n      for (let i = 0; i < nearbyPlatforms.length; i++) {\n        const platform = nearbyPlatforms[i].behavior;\n        const platformAABB = platform.owner.getAABB();\n        const platformIsStillAround =\n          platformAABB.min[0] <= searchArea.maxX &&\n          platformAABB.min[1] <= searchArea.maxY &&\n          platformAABB.max[0] >= searchArea.minX &&\n          platformAABB.max[1] >= searchArea.minY;\n        // Filter platforms that are not in the searched area anymore.\n        // This can happen because platforms are not updated in the RBush before that\n        // characters movement are being processed.\n        if (platformIsStillAround) {\n          result.push(platform);\n        }\n      }\n    }\n  }\n\n  /**\n   * PlatformRuntimeBehavior represents a behavior allowing objects to be\n   * considered as a platform by objects having PlatformerObject Behavior.\n   */\n  export class PlatformRuntimeBehavior extends gdjs.RuntimeBehavior {\n    //Load the platform type\n    _platformType: integer;\n    _canBeGrabbed: boolean;\n    _yGrabOffset: float;\n\n    //Note that we can't use getX(), getWidth()... of owner here: The owner is not fully constructed.\n    _oldX: float = 0;\n    _oldY: float = 0;\n    _oldWidth: float = 0;\n    _oldHeight: float = 0;\n    _oldAngle: float = 0;\n    currentRBushAABB: gdjs.BehaviorRBushAABB<\n      PlatformRuntimeBehavior\n    > | null = null;\n    _manager: gdjs.PlatformObjectsManager;\n    _registeredInManager: boolean = false;\n\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      behaviorData,\n      owner: gdjs.RuntimeObject\n    ) {\n      super(instanceContainer, behaviorData, owner);\n      this._platformType = behaviorData.platformType;\n      if (behaviorData.platformType === 'Ladder') {\n        this._platformType = PlatformRuntimeBehavior.LADDER;\n      } else if (behaviorData.platformType === 'Jumpthru') {\n        this._platformType = PlatformRuntimeBehavior.JUMPTHRU;\n      } else {\n        this._platformType = PlatformRuntimeBehavior.NORMALPLAFTORM;\n      }\n      this._canBeGrabbed = behaviorData.canBeGrabbed || false;\n      this._yGrabOffset = behaviorData.yGrabOffset || 0;\n      this._manager = PlatformObjectsManager.getManager(instanceContainer);\n    }\n\n    updateFromBehaviorData(oldBehaviorData, newBehaviorData): boolean {\n      if (oldBehaviorData.platformType !== newBehaviorData.platformType) {\n        this.changePlatformType(newBehaviorData.platformType);\n      }\n      if (oldBehaviorData.canBeGrabbed !== newBehaviorData.canBeGrabbed) {\n        this._canBeGrabbed = newBehaviorData.canBeGrabbed;\n      }\n      if (oldBehaviorData.yGrabOffset !== newBehaviorData.yGrabOffset) {\n        this._yGrabOffset = newBehaviorData.yGrabOffset;\n      }\n      return true;\n    }\n\n    onDestroy() {\n      if (this._manager && this._registeredInManager) {\n        this._manager.removePlatform(this);\n      }\n    }\n\n    doStepPreEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      //Scene change is not supported\n      /*if ( parentScene != &scene ) //Parent scene has changed\n            {\n                if ( sceneManager ) //Remove the object from any old scene manager.\n                    sceneManager->RemovePlatform(this);\n                parentScene = &scene;\n                sceneManager = parentScene ? &ScenePlatformObjectsManager::managers[&scene] : NULL;\n                registeredInManager = false;\n            }*/\n\n      //Make sure the platform is or is not in the platforms manager.\n      if (!this.activated() && this._registeredInManager) {\n        this._manager.removePlatform(this);\n        this._registeredInManager = false;\n      } else {\n        if (this.activated() && !this._registeredInManager) {\n          this._manager.addPlatform(this);\n          this._registeredInManager = true;\n        }\n      }\n\n      //Track changes in size or position\n      if (\n        this._oldX !== this.owner.getX() ||\n        this._oldY !== this.owner.getY() ||\n        this._oldWidth !== this.owner.getWidth() ||\n        this._oldHeight !== this.owner.getHeight() ||\n        this._oldAngle !== this.owner.getAngle()\n      ) {\n        if (this._registeredInManager) {\n          this._manager.removePlatform(this);\n          this._manager.addPlatform(this);\n        }\n        this._oldX = this.owner.getX();\n        this._oldY = this.owner.getY();\n        this._oldWidth = this.owner.getWidth();\n        this._oldHeight = this.owner.getHeight();\n        this._oldAngle = this.owner.getAngle();\n      }\n    }\n\n    doStepPostEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {}\n\n    onActivate() {\n      if (this._registeredInManager) {\n        return;\n      }\n      this._manager.addPlatform(this);\n      this._registeredInManager = true;\n    }\n\n    onDeActivate() {\n      if (!this._registeredInManager) {\n        return;\n      }\n      this._manager.removePlatform(this);\n      this._registeredInManager = false;\n    }\n\n    changePlatformType(platformType: string) {\n      if (platformType === 'Ladder') {\n        this._platformType = PlatformRuntimeBehavior.LADDER;\n      } else if (platformType === 'Jumpthru') {\n        this._platformType = PlatformRuntimeBehavior.JUMPTHRU;\n      } else {\n        this._platformType = PlatformRuntimeBehavior.NORMALPLAFTORM;\n      }\n    }\n\n    getPlatformType() {\n      return this._platformType;\n    }\n\n    canBeGrabbed() {\n      return this._canBeGrabbed;\n    }\n\n    getYGrabOffset() {\n      return this._yGrabOffset;\n    }\n\n    static NORMALPLAFTORM = 0;\n    static JUMPTHRU = 1;\n    static LADDER = 2;\n\n    static isOnPlatformTest(\n      object1: gdjs.RuntimeObject,\n      object2: gdjs.RuntimeObject,\n      behaviorName: string\n    ): boolean {\n      const behavior1 = object1.getBehavior(\n        behaviorName\n      ) as PlatformerObjectRuntimeBehavior;\n      return behavior1.isOnFloorObject(object2);\n    }\n  }\n  gdjs.registerBehavior(\n    'PlatformBehavior::PlatformBehavior',\n    gdjs.PlatformRuntimeBehavior\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
