var gdjs;(function(d){let C;(function(E){let D;(function(n){const P=e=>typeof e=="object"&&e!==null&&typeof e.eventName=="string"&&typeof e.data=="string";class N{constructor(t,s){this.data="";this.sender="";this.data=t,this.sender=s}}class k{constructor(){this.data=[];this.dataloss=!1}isTriggered(){return this.data.length>0}pushData(t){this.dataloss&&this.data.length>0?this.data[0]=t:this.data.push(t)}popData(){this.data.shift()}getData(){return this.data.length===0?"":this.data[0].data}getSender(){return this.data.length===0?"":this.data[0].sender}}let u=null,o={debug:1},r=null;const a=new Map,f=new Map;let b=!1,h=!1,S="";const i=[],c=[],v=()=>{r===null&&(u!==null?r=new Peer(u,o):r=new Peer(o),r.on("open",()=>{b=!0}),r.on("error",e=>{h=!0,S=e.message}),r.on("connection",e=>{e.on("open",()=>{m(e),c.push(e.peer)})}),r.on("close",()=>{r=null,v()}),r.on("disconnected",r.reconnect))},m=e=>{a.set(e.peer,e),e.on("data",t=>{P(t)&&n.getEvent(t.eventName).pushData(new N(t.data,e.peer))}),e.on("error",()=>{x(e.peer)}),e.on("close",()=>{x(e.peer)}),function t(){e.peerConnection.connectionState==="failed"||e.peerConnection.connectionState==="disconnected"||e.peerConnection.connectionState==="closed"?x(e.peer):setTimeout(t,1e3)}()},x=e=>{!a.has(e)||(i.push(e),a.delete(e))};n.getEvent=e=>{let t=f.get(e);return t||f.set(e,t=new k),t},n.connect=e=>{if(r===null)return;const t=r.connect(e);t.on("open",()=>{m(t)})},n.disconnectFromPeer=e=>{const t=a.get(e);t&&t.close()},n.disconnectFromAllPeers=()=>{for(const e of a.values())e.close()},n.disconnectFromAll=()=>{r&&(r.destroy(),r=null)},n.disconnectFromBroker=()=>{r&&(r.disconnect(),r=null)},n.onEvent=(e,t)=>{const s=n.getEvent(e);return s.dataloss=t,s.isTriggered()},n.sendDataTo=(e,t,s)=>{const l=a.get(e);l&&l.send({eventName:t,data:s})},n.sendDataToAll=(e,t)=>{for(const s of a.values())s.send({eventName:e,data:t})},n.sendVariableTo=(e,t,s)=>{n.sendDataTo(e,t,JSON.stringify(s.toJSObject()))},n.sendVariableToAll=(e,t)=>{n.sendDataToAll(e,JSON.stringify(t.toJSObject()))},n.getEventData=e=>n.getEvent(e).getData(),n.getEventSender=e=>n.getEvent(e).getSender(),n.getEventVariable=(e,t)=>{t.fromJSON(n.getEventData(e))},n.useCustomBrokerServer=(e,t,s,l,J)=>{Object.assign(o,{host:e,port:t,path:s,secure:J,key:l.length===0?"peerjs":l}),v()},n.useDefaultBrokerServer=v,n.useCustomICECandidate=(e,t,s)=>{o.config=o.config||{},o.config.iceServers=o.config.iceServers||[],o.config.iceServers.push({urls:e,username:t,credential:s})},n.overrideId=e=>{u=e},n.getCurrentId=()=>r==null?"":r.id||"",n.isReady=()=>b,n.onError=()=>{const e=h;return h=!1,e},n.getLastError=()=>S,n.onDisconnect=()=>i.length>0,n.getDisconnectedPeer=()=>i[0]||"",n.onConnection=()=>c.length>0,n.getConnectedPeer=()=>c[0]||"",n.getConnectionInstance=e=>a.get(e),d.callbacksRuntimeScenePostEvents.push(()=>{for(const e of f.values())e.popData();i.length>0&&i.shift(),c.length>0&&c.shift()})})(D=E.p2p||(E.p2p={}))})(C=d.evtTools||(d.evtTools={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=B_p2ptools.js.map
