{
  "version": 3,
  "sources": ["../../../../../../../Extensions/Effects/crt-pixi-filter.ts"],
  "sourcesContent": ["// @ts-nocheck - TODO: fix typings in this file\n\nnamespace gdjs {\n  gdjs.PixiFiltersTools.registerFilterCreator(\n    'CRT',\n    new (class extends gdjs.PixiFiltersTools.PixiFilterCreator {\n      makePIXIFilter(layer, effectData) {\n        const crtFilter = new PIXI.filters.CRTFilter();\n        crtFilter._animationTimer = 0;\n        return crtFilter;\n      }\n      updatePreRender(filter, target) {\n        if (filter.animationSpeed !== 0) {\n          // Multiply by 10 so that the default value is a sensible speed\n          filter.time +=\n            (target.getElapsedTime() / 1000) * 10 * filter.animationSpeed;\n        }\n        if (filter.animationFrequency !== 0) {\n          filter._animationTimer += target.getElapsedTime() / 1000;\n          if (filter._animationTimer >= 1 / filter.animationFrequency) {\n            filter.seed = Math.random();\n            filter._animationTimer = 0;\n          }\n        }\n      }\n      updateDoubleParameter(filter, parameterName, value) {\n        if (parameterName === 'lineWidth') {\n          filter.lineWidth = value;\n        } else if (parameterName === 'lineContrast') {\n          filter.lineContrast = value;\n        } else if (parameterName === 'noise') {\n          filter.noise = value;\n        } else if (parameterName === 'curvature') {\n          filter.curvature = value;\n        } else if (parameterName === 'noiseSize') {\n          filter.noiseSize = value;\n        } else if (parameterName === 'vignetting') {\n          filter.vignetting = value;\n        } else if (parameterName === 'vignettingAlpha') {\n          filter.vignettingAlpha = value;\n        } else if (parameterName === 'vignettingBlur') {\n          filter.vignettingBlur = value;\n        } else if (parameterName === 'animationSpeed') {\n          filter.animationSpeed = value;\n        } else if (parameterName === 'animationFrequency') {\n          filter.animationFrequency = value;\n        } else if (parameterName === 'padding') {\n          filter.padding = value;\n        }\n      }\n      updateStringParameter(filter, parameterName, value) {}\n      updateBooleanParameter(filter, parameterName, value) {\n        if (parameterName === 'verticalLine') {\n          filter.verticalLine = value;\n        }\n      }\n    })()\n  );\n}\n"],
  "mappings": "AAEA,GAAU,MAAV,UAAU,EAAV,CACE,EAAK,iBAAiB,sBACpB,MACA,GAAK,cAAc,GAAK,iBAAiB,iBAAkB,CACzD,eAAe,EAAO,EAAY,CAChC,KAAM,GAAY,GAAI,MAAK,QAAQ,UACnC,SAAU,gBAAkB,EACrB,EAET,gBAAgB,EAAQ,EAAQ,CAC9B,AAAI,EAAO,iBAAmB,GAE5B,GAAO,MACJ,EAAO,iBAAmB,IAAQ,GAAK,EAAO,gBAE/C,EAAO,qBAAuB,GAChC,GAAO,iBAAmB,EAAO,iBAAmB,IAChD,EAAO,iBAAmB,EAAI,EAAO,oBACvC,GAAO,KAAO,KAAK,SACnB,EAAO,gBAAkB,IAI/B,sBAAsB,EAAQ,EAAe,EAAO,CAClD,AAAI,IAAkB,YACpB,EAAO,UAAY,EACd,AAAI,IAAkB,eAC3B,EAAO,aAAe,EACjB,AAAI,IAAkB,QAC3B,EAAO,MAAQ,EACV,AAAI,IAAkB,YAC3B,EAAO,UAAY,EACd,AAAI,IAAkB,YAC3B,EAAO,UAAY,EACd,AAAI,IAAkB,aAC3B,EAAO,WAAa,EACf,AAAI,IAAkB,kBAC3B,EAAO,gBAAkB,EACpB,AAAI,IAAkB,iBAC3B,EAAO,eAAiB,EACnB,AAAI,IAAkB,iBAC3B,EAAO,eAAiB,EACnB,AAAI,IAAkB,qBAC3B,EAAO,mBAAqB,EACnB,IAAkB,WAC3B,GAAO,QAAU,GAGrB,sBAAsB,EAAQ,EAAe,EAAO,EACpD,uBAAuB,EAAQ,EAAe,EAAO,CACnD,AAAI,IAAkB,gBACpB,GAAO,aAAe,QAnDtB",
  "names": []
}
