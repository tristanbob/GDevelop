{
  "version": 3,
  "sources": ["../../../../../../../Extensions/Effects/reflection-pixi-filter.ts"],
  "sourcesContent": ["// @ts-nocheck - TODO: fix typings in this file\n\nnamespace gdjs {\n  gdjs.PixiFiltersTools.registerFilterCreator(\n    'Reflection',\n    new (class extends gdjs.PixiFiltersTools.PixiFilterCreator {\n      makePIXIFilter(layer, effectData) {\n        let time = 0;\n        const reflectionFilter = new PIXI.filters.ReflectionFilter(\n          effectData.booleanParameters.mirror,\n          effectData.doubleParameters.boundary,\n          [\n            effectData.doubleParameters.amplitudeStart,\n            effectData.doubleParameters.amplitudeEnding,\n          ],\n          [\n            effectData.doubleParameters.waveLengthStart,\n            effectData.doubleParameters.waveLengthEnding,\n          ],\n          [\n            effectData.doubleParameters.alphaStart,\n            effectData.doubleParameters.alphaEnding,\n          ],\n          time\n        );\n        return reflectionFilter;\n      }\n      updatePreRender(filter, target) {\n        if (filter.animationSpeed !== 0) {\n          filter.time +=\n            (target.getElapsedTime() / 1000) * filter.animationSpeed;\n        }\n      }\n      updateDoubleParameter(filter, parameterName, value) {\n        if (parameterName === 'boundary') {\n          filter.boundary = value;\n        }\n        if (parameterName === 'amplitudeStart') {\n          filter.amplitude[0] = value;\n        }\n        if (parameterName === 'amplitudeEnding') {\n          filter.amplitude[1] = value;\n        }\n        if (parameterName === 'waveLengthStart') {\n          filter.waveLength[0] = value;\n        }\n        if (parameterName === 'waveLengthEnding') {\n          filter.waveLength[1] = value;\n        }\n        if (parameterName === 'alphaStart') {\n          filter.alpha[0] = value;\n        }\n        if (parameterName === 'alphaEnding') {\n          filter.alpha[1] = value;\n        }\n        if (parameterName === 'animationSpeed') {\n          filter.animationSpeed = value;\n        }\n      }\n      updateStringParameter(filter, parameterName, value) {}\n      updateBooleanParameter(filter, parameterName, value) {\n        if (parameterName === 'mirror') {\n          filter.mirror = value;\n        }\n      }\n    })()\n  );\n}\n"],
  "mappings": "AAEA,GAAU,MAAV,UAAU,EAAV,CACE,EAAK,iBAAiB,sBACpB,aACA,GAAK,cAAc,GAAK,iBAAiB,iBAAkB,CACzD,eAAe,EAAO,EAAY,CAChC,GAAI,GAAO,EAkBX,MAjByB,IAAI,MAAK,QAAQ,iBACxC,EAAW,kBAAkB,OAC7B,EAAW,iBAAiB,SAC5B,CACE,EAAW,iBAAiB,eAC5B,EAAW,iBAAiB,iBAE9B,CACE,EAAW,iBAAiB,gBAC5B,EAAW,iBAAiB,kBAE9B,CACE,EAAW,iBAAiB,WAC5B,EAAW,iBAAiB,aAE9B,GAIJ,gBAAgB,EAAQ,EAAQ,CAC9B,AAAI,EAAO,iBAAmB,GAC5B,GAAO,MACJ,EAAO,iBAAmB,IAAQ,EAAO,gBAGhD,sBAAsB,EAAQ,EAAe,EAAO,CAClD,AAAI,IAAkB,YACpB,GAAO,SAAW,GAEhB,IAAkB,kBACpB,GAAO,UAAU,GAAK,GAEpB,IAAkB,mBACpB,GAAO,UAAU,GAAK,GAEpB,IAAkB,mBACpB,GAAO,WAAW,GAAK,GAErB,IAAkB,oBACpB,GAAO,WAAW,GAAK,GAErB,IAAkB,cACpB,GAAO,MAAM,GAAK,GAEhB,IAAkB,eACpB,GAAO,MAAM,GAAK,GAEhB,IAAkB,kBACpB,GAAO,eAAiB,GAG5B,sBAAsB,EAAQ,EAAe,EAAO,EACpD,uBAAuB,EAAQ,EAAe,EAAO,CACnD,AAAI,IAAkB,UACpB,GAAO,OAAS,QA5DhB",
  "names": []
}
