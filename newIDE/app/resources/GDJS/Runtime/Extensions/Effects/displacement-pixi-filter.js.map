{
  "version": 3,
  "sources": ["../../../../../../../Extensions/Effects/displacement-pixi-filter.ts"],
  "sourcesContent": ["namespace gdjs {\n  import PIXI = GlobalPIXIModule.PIXI;\n  gdjs.PixiFiltersTools.registerFilterCreator(\n    'Displacement',\n    new (class extends gdjs.PixiFiltersTools.PixiFilterCreator {\n      makePIXIFilter(target, effectData) {\n        const displacementMapTexture = target\n          .getRuntimeScene()\n          .getGame()\n          .getImageManager()\n          .getPIXITexture(effectData.stringParameters.displacementMapTexture);\n        displacementMapTexture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n        const displacementSprite = new PIXI.Sprite(displacementMapTexture);\n        const displacementFilter = new PIXI.filters.DisplacementFilter(\n          displacementSprite\n        );\n        return displacementFilter;\n      }\n      updatePreRender(filter, target) {}\n      updateDoubleParameter(filter, parameterName, value) {\n        // @ts-ignore - unsure why PIXI.filters is not recognised.\n        const displacementFilter = (filter as unknown) as PIXI.filters.DisplacementFilter;\n        if (parameterName === 'scaleX') {\n          displacementFilter.scale.x = value;\n        }\n        if (parameterName === 'scaleY') {\n          displacementFilter.scale.y = value;\n        }\n      }\n      updateStringParameter(filter, parameterName, value) {}\n      updateBooleanParameter(filter, parameterName, value) {}\n    })()\n  );\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACE,KAAO,GAAO,iBAAiB,KAC/B,EAAK,iBAAiB,sBACpB,eACA,GAAK,cAAc,GAAK,iBAAiB,iBAAkB,CACzD,eAAe,EAAQ,EAAY,CACjC,KAAM,GAAyB,EAC5B,kBACA,UACA,kBACA,eAAe,EAAW,iBAAiB,wBAC9C,EAAuB,YAAY,SAAW,EAAK,WAAW,OAC9D,KAAM,GAAqB,GAAI,GAAK,OAAO,GAI3C,MAH2B,IAAI,GAAK,QAAQ,mBAC1C,GAIJ,gBAAgB,EAAQ,EAAQ,EAChC,sBAAsB,EAAQ,EAAe,EAAO,CAElD,KAAM,GAAsB,EAC5B,AAAI,IAAkB,UACpB,GAAmB,MAAM,EAAI,GAE3B,IAAkB,UACpB,GAAmB,MAAM,EAAI,GAGjC,sBAAsB,EAAQ,EAAe,EAAO,EACpD,uBAAuB,EAAQ,EAAe,EAAO,OA9BjD",
  "names": []
}
