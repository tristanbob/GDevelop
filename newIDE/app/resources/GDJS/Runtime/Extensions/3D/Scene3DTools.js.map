{
  "version": 3,
  "sources": ["../../../../../../../Extensions/3D/Scene3DTools.ts"],
  "sourcesContent": ["namespace gdjs {\n  export namespace scene3d {\n    const assumedFovIn2D = 45;\n\n    export namespace camera {\n      export const getCameraZ = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n        const threeCamera = layerRenderer.getThreeCamera();\n        const fov = threeCamera ? threeCamera.fov : assumedFovIn2D;\n        return layer.getCameraZ(fov, cameraIndex);\n      };\n\n      export const setCameraZ = (\n        runtimeScene: RuntimeScene,\n        z: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n        const threeCamera = layerRenderer.getThreeCamera();\n        const fov = threeCamera ? threeCamera.fov : assumedFovIn2D;\n        layer.setCameraZ(z, fov, cameraIndex);\n      };\n\n      export const getCameraRotationX = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return 0;\n        return gdjs.toDegrees(threeCamera.rotation.x);\n      };\n\n      export const setCameraRotationX = (\n        runtimeScene: RuntimeScene,\n        angle: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        threeCamera.rotation.x = gdjs.toRad(angle);\n      };\n\n      export const getCameraRotationY = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return 0;\n        return gdjs.toDegrees(threeCamera.rotation.y);\n      };\n\n      export const setCameraRotationY = (\n        runtimeScene: RuntimeScene,\n        angle: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        threeCamera.rotation.y = gdjs.toRad(angle);\n      };\n\n      export const turnCameraTowardObject = (\n        runtimeScene: RuntimeScene,\n        object: gdjs.RuntimeObject,\n        layerName: string,\n        cameraIndex: integer,\n        isStandingOnY: boolean\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        if (isStandingOnY) {\n          threeCamera.up.set(0, 1, 0);\n        } else {\n          threeCamera.up.set(0, 0, 1);\n        }\n        threeCamera.lookAt(\n          object.getCenterXInScene(),\n          -object.getCenterYInScene(),\n          //@ts-ignore\n          object.getZ ? object.getZ() : 0\n        );\n        // The layer angle takes over the 3D camera Z rotation.\n        layer.setCameraRotation(gdjs.toDegrees(-threeCamera.rotation.z));\n      };\n\n      export const turnCameraTowardPosition = (\n        runtimeScene: RuntimeScene,\n        x: float,\n        y: float,\n        z: float,\n        layerName: string,\n        cameraIndex: integer,\n        isStandingOnY: boolean\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        if (isStandingOnY) {\n          threeCamera.up.set(0, 1, 0);\n        } else {\n          threeCamera.up.set(0, 0, 1);\n        }\n        threeCamera.lookAt(x, -y, z);\n        // The layer angle takes over the 3D camera Z rotation.\n        layer.setCameraRotation(gdjs.toDegrees(-threeCamera.rotation.z));\n      };\n\n      export const getNearPlane = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return 0;\n        return threeCamera.near;\n      };\n\n      export const setNearPlane = (\n        runtimeScene: RuntimeScene,\n        distance: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        threeCamera.near = Math.min(\n          // 0 is not a valid value for three js perspective camera:\n          // https://threejs.org/docs/#api/en/cameras/PerspectiveCamera.\n          Math.max(distance, 0.0001),\n          // Near value cannot exceed far value.\n          threeCamera.far\n        );\n        layerRenderer.setThreeCameraDirty(true);\n      };\n\n      export const getFarPlane = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return 0;\n        return threeCamera.far;\n      };\n\n      export const setFarPlane = (\n        runtimeScene: RuntimeScene,\n        distance: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        // Far value cannot be lower than near value\n        threeCamera.far = Math.max(distance, threeCamera.near);\n        layerRenderer.setThreeCameraDirty(true);\n      };\n\n      export const getFov = (\n        runtimeScene: RuntimeScene,\n        layerName: string,\n        cameraIndex: integer\n      ): float => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return 45;\n        return threeCamera.fov;\n      };\n\n      export const setFov = (\n        runtimeScene: RuntimeScene,\n        angle: float,\n        layerName: string,\n        cameraIndex: integer\n      ) => {\n        const layer = runtimeScene.getLayer(layerName);\n        const layerRenderer = layer.getRenderer();\n\n        const threeCamera = layerRenderer.getThreeCamera();\n        if (!threeCamera) return;\n\n        threeCamera.fov = Math.min(Math.max(angle, 0), 180);\n        layerRenderer.setThreeCameraDirty(true);\n      };\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
