{
  "version": 3,
  "sources": ["../../../../../../../Extensions/DeviceSensors/devicesensortools.ts"],
  "sourcesContent": ["namespace gdjs {\n  export namespace deviceSensors {\n    export namespace orientation {\n      let _isActive = false;\n      let _absolute = 0;\n      let _alpha = 0;\n      let _beta = 0;\n      let _gamma = 0;\n\n      /**\n       * Activate the orientation sensor's listener.\n       */\n      export const _activateOrientationListener = function () {\n        window.addEventListener(\n          'deviceorientation',\n          gdjs.deviceSensors.orientation._handleOrientation,\n          true\n        );\n        _isActive = true;\n      };\n\n      /**\n       * Deactivate the orientation sensor's listener.\n       */\n      export const _deactivateOrientationListener = function () {\n        window.removeEventListener(\n          'deviceorientation',\n          gdjs.deviceSensors.orientation._handleOrientation,\n          true\n        );\n        _isActive = false;\n      };\n\n      /**\n       * Orientation sensor event callback function.\n       */\n      export const _handleOrientation = function (event) {\n        _absolute = event.absolute ? event.absolute : 0;\n        _alpha = event.alpha ? event.alpha : 0;\n        _beta = event.beta ? event.beta : 0;\n        _gamma = event.gamma ? event.gamma : 0;\n      };\n\n      /**\n       * Activate the orientation sensor\n       */\n      export const activateOrientationSensor = function () {\n        gdjs.deviceSensors.orientation._activateOrientationListener();\n      };\n\n      /**\n       * Deactivate the orientation sensor\n       */\n      export const deactivateOrientationSensor = function () {\n        gdjs.deviceSensors.orientation._deactivateOrientationListener();\n      };\n\n      /**\n       * Check if the orientation sensor is currently active\n       * @return The activation state of the orientation sensor\n       */\n      export const isActive = function (): boolean {\n        return _isActive;\n      };\n\n      /**\n       * Get the value of the device orientation's absolute as a number\n       * @return The device orientation's absolute value\n       */\n      export const getOrientationAbsolute = function (): number {\n        return _absolute;\n      };\n\n      /**\n       * Get the value of the device orientation's alpha as a number (Range: 0 to 360)\n       * @return The device orientation's alpha value\n       */\n      export const getOrientationAlpha = function (): number {\n        return _alpha;\n      };\n\n      /**\n       * Get the value of the device orientation's beta as a number (Range: -180 to 180)\n       * @return The device orientation's beta value\n       */\n      export const getOrientationBeta = function (): number {\n        return _beta;\n      };\n\n      /**\n       * Get the value of the device orientation's gamma as a number (Range: -90 to 90)\n       * @return The device orientation's gamma value\n       */\n      export const getOrientationGamma = function (): number {\n        return _gamma;\n      };\n    }\n\n    export namespace motion {\n      let _isActive = false;\n      let _rotationAlpha = 0;\n      let _rotationBeta = 0;\n      let _rotationGamma = 0;\n      let _accelerationX = 0;\n      let _accelerationY = 0;\n      let _accelerationZ = 0;\n\n      /**\n       * Activate the motion sensor's listener.\n       */\n      export const _activateMotionListener = function () {\n        window.addEventListener(\n          'devicemotion',\n          gdjs.deviceSensors.motion._handleMotion,\n          true\n        );\n        _isActive = true;\n      };\n\n      /**\n       * Deactivate the motion sensor's listener.\n       */\n      export const _deactivateMotionListener = function () {\n        window.removeEventListener(\n          'devicemotion',\n          gdjs.deviceSensors.motion._handleMotion,\n          true\n        );\n        _isActive = false;\n      };\n\n      /**\n       * Motion sensor event callback function.\n       */\n      export const _handleMotion = function (event) {\n        if (event.accelerationIncludingGravity) {\n          _accelerationX = event.accelerationIncludingGravity.x\n            ? event.accelerationIncludingGravity.x\n            : 0;\n          _accelerationY = event.accelerationIncludingGravity.y\n            ? event.accelerationIncludingGravity.y\n            : 0;\n          _accelerationZ = event.accelerationIncludingGravity.z\n            ? event.accelerationIncludingGravity.z\n            : 0;\n        }\n        if (event.rotationRate) {\n          _rotationAlpha = event.rotationRate.alpha\n            ? event.rotationRate.alpha\n            : 0;\n          _rotationBeta = event.rotationRate.beta ? event.rotationRate.beta : 0;\n          _rotationGamma = event.rotationRate.gamma\n            ? event.rotationRate.gamma\n            : 0;\n        }\n      };\n\n      /**\n       * Activate the motion sensor\n       */\n      export const activateMotionSensor = function () {\n        gdjs.deviceSensors.motion._activateMotionListener();\n      };\n\n      /**\n       * Deactivate the motion sensor\n       */\n      export const deactivateMotionSensor = function () {\n        gdjs.deviceSensors.motion._deactivateMotionListener();\n      };\n\n      /**\n       * Check if the motion sensor is currently active\n       * @return The activation state of the motion sensor\n       */\n      export const isActive = function (): boolean {\n        return _isActive;\n      };\n\n      /**\n       * Get the alpha rotation rate as a number\n       * @return The rotation alpha value\n       */\n      export const getRotationAlpha = function (): number {\n        return _rotationAlpha;\n      };\n\n      /**\n       * Get the beta rotation rate as a number\n       * @return The rotation beta value\n       */\n      export const getRotationBeta = function (): number {\n        return _rotationBeta;\n      };\n\n      /**\n       * Get the gamma rotation rate as a number\n       * @return The rotation gamma value\n       */\n      export const getRotationGamma = function (): number {\n        return _rotationGamma;\n      };\n\n      /**\n       * Get the acceleration value on the X-axis as a number\n       * @return Acceleration on the X-axis\n       */\n      export const getAccelerationX = function (): number {\n        return _accelerationX;\n      };\n\n      /**\n       * Get the acceleration value on the Y-axis as a number\n       * @return Acceleration on the Y-axis\n       */\n      export const getAccelerationY = function (): number {\n        return _accelerationY;\n      };\n\n      /**\n       * Get the acceleration value on the Z-axis as a number\n       * @return Acceleration on the Z-axis\n       */\n      export const getAccelerationZ = function (): number {\n        return _accelerationZ;\n      };\n    }\n  }\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACS,GAAU,GAAV,UAAU,EAAV,CACE,GAAU,GAAV,UAAU,EAAV,CACL,GAAI,GAAY,GACZ,EAAY,EACZ,EAAS,EACT,EAAQ,EACR,EAAS,EAKN,AAAM,+BAA+B,UAAY,CACtD,OAAO,iBACL,oBACA,EAAK,cAAc,YAAY,mBAC/B,IAEF,EAAY,IAMD,iCAAiC,UAAY,CACxD,OAAO,oBACL,oBACA,EAAK,cAAc,YAAY,mBAC/B,IAEF,EAAY,IAMD,qBAAqB,SAAU,EAAO,CACjD,EAAY,EAAM,SAAW,EAAM,SAAW,EAC9C,EAAS,EAAM,MAAQ,EAAM,MAAQ,EACrC,EAAQ,EAAM,KAAO,EAAM,KAAO,EAClC,EAAS,EAAM,MAAQ,EAAM,MAAQ,GAM1B,4BAA4B,UAAY,CACnD,EAAK,cAAc,YAAY,gCAMpB,8BAA8B,UAAY,CACrD,EAAK,cAAc,YAAY,kCAOpB,WAAW,UAAqB,CAC3C,MAAO,IAOI,yBAAyB,UAAoB,CACxD,MAAO,IAOI,sBAAsB,UAAoB,CACrD,MAAO,IAOI,qBAAqB,UAAoB,CACpD,MAAO,IAOI,sBAAsB,UAAoB,CACrD,MAAO,MA5FM,qCAgGV,GAAU,GAAV,UAAU,EAAV,CACL,GAAI,GAAY,GACZ,EAAiB,EACjB,EAAgB,EAChB,EAAiB,EACjB,EAAiB,EACjB,EAAiB,EACjB,EAAiB,EAKd,AAAM,0BAA0B,UAAY,CACjD,OAAO,iBACL,eACA,EAAK,cAAc,OAAO,cAC1B,IAEF,EAAY,IAMD,4BAA4B,UAAY,CACnD,OAAO,oBACL,eACA,EAAK,cAAc,OAAO,cAC1B,IAEF,EAAY,IAMD,gBAAgB,SAAU,EAAO,CAC5C,AAAI,EAAM,8BACR,GAAiB,EAAM,6BAA6B,EAChD,EAAM,6BAA6B,EACnC,EACJ,EAAiB,EAAM,6BAA6B,EAChD,EAAM,6BAA6B,EACnC,EACJ,EAAiB,EAAM,6BAA6B,EAChD,EAAM,6BAA6B,EACnC,GAEF,EAAM,cACR,GAAiB,EAAM,aAAa,MAChC,EAAM,aAAa,MACnB,EACJ,EAAgB,EAAM,aAAa,KAAO,EAAM,aAAa,KAAO,EACpE,EAAiB,EAAM,aAAa,MAChC,EAAM,aAAa,MACnB,IAOK,uBAAuB,UAAY,CAC9C,EAAK,cAAc,OAAO,2BAMf,yBAAyB,UAAY,CAChD,EAAK,cAAc,OAAO,6BAOf,WAAW,UAAqB,CAC3C,MAAO,IAOI,mBAAmB,UAAoB,CAClD,MAAO,IAOI,kBAAkB,UAAoB,CACjD,MAAO,IAOI,mBAAmB,UAAoB,CAClD,MAAO,IAOI,mBAAmB,UAAoB,CAClD,MAAO,IAOI,mBAAmB,UAAoB,CAClD,MAAO,IAOI,mBAAmB,UAAoB,CAClD,MAAO,MA9HM,6BAjGF,2CADT",
  "names": []
}
