{
  "version": 3,
  "sources": ["../../../../../../../Extensions/DestroyOutsideBehavior/destroyoutsideruntimebehavior.ts"],
  "sourcesContent": ["/*\nGDevelop - DestroyOutside Behavior Extension\nCopyright (c) 2013-2016 Florian Rival (Florian.Rival@gmail.com)\n */\n\nnamespace gdjs {\n  /**\n   * The DestroyOutsideRuntimeBehavior represents a behavior allowing objects to be\n   * moved using the mouse.\n   */\n  export class DestroyOutsideRuntimeBehavior extends gdjs.RuntimeBehavior {\n    _extraBorder: any;\n\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      behaviorData,\n      owner\n    ) {\n      super(instanceContainer, behaviorData, owner);\n      this._extraBorder = behaviorData.extraBorder || 0;\n    }\n\n    updateFromBehaviorData(oldBehaviorData, newBehaviorData): boolean {\n      if (oldBehaviorData.extraBorder !== newBehaviorData.extraBorder) {\n        this._extraBorder = newBehaviorData.extraBorder;\n      }\n      return true;\n    }\n\n    doStepPostEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      // TODO: This would better be done using the object AABB (getAABB), as (`getCenterX`;`getCenterY`) point\n      // is not necessarily in the middle of the object (for sprites for example).\n      const ow = this.owner.getWidth();\n      const oh = this.owner.getHeight();\n      const ocx = this.owner.getDrawableX() + this.owner.getCenterX();\n      const ocy = this.owner.getDrawableY() + this.owner.getCenterY();\n      const layer = instanceContainer.getLayer(this.owner.getLayer());\n      const boundingCircleRadius = Math.sqrt(ow * ow + oh * oh) / 2.0;\n      if (\n        ocx + boundingCircleRadius + this._extraBorder <\n          layer.getCameraX() - layer.getCameraWidth() / 2 ||\n        ocx - boundingCircleRadius - this._extraBorder >\n          layer.getCameraX() + layer.getCameraWidth() / 2 ||\n        ocy + boundingCircleRadius + this._extraBorder <\n          layer.getCameraY() - layer.getCameraHeight() / 2 ||\n        ocy - boundingCircleRadius - this._extraBorder >\n          layer.getCameraY() + layer.getCameraHeight() / 2\n      ) {\n        //We are outside the camera area.\n        this.owner.deleteFromScene(instanceContainer);\n      }\n    }\n\n    /**\n     * Set an additional border to the camera viewport as a buffer before the object gets destroyed.\n     * @param val Border in pixels.\n     */\n    setExtraBorder(val: number): void {\n      this._extraBorder = val;\n    }\n\n    /**\n     * Get the additional border of the camera viewport buffer which triggers the destruction of an object.\n     * @return The additional border around the camera viewport in pixels\n     */\n    getExtraBorder(): number {\n      return this._extraBorder;\n    }\n  }\n  gdjs.registerBehavior(\n    'DestroyOutsideBehavior::DestroyOutside',\n    gdjs.DestroyOutsideRuntimeBehavior\n  );\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CAKS,eAA4C,GAAK,eAAgB,CAGtE,YACE,EACA,EACA,EACA,CACA,MAAM,EAAmB,EAAc,GACvC,KAAK,aAAe,EAAa,aAAe,EAGlD,uBAAuB,EAAiB,EAA0B,CAChE,MAAI,GAAgB,cAAgB,EAAgB,aAClD,MAAK,aAAe,EAAgB,aAE/B,GAGT,iBAAiB,EAAkD,CAGjE,KAAM,GAAK,KAAK,MAAM,WAChB,EAAK,KAAK,MAAM,YAChB,EAAM,KAAK,MAAM,eAAiB,KAAK,MAAM,aAC7C,EAAM,KAAK,MAAM,eAAiB,KAAK,MAAM,aAC7C,EAAQ,EAAkB,SAAS,KAAK,MAAM,YAC9C,EAAuB,KAAK,KAAK,EAAK,EAAK,EAAK,GAAM,EAC5D,AACE,GAAM,EAAuB,KAAK,aAChC,EAAM,aAAe,EAAM,iBAAmB,GAChD,EAAM,EAAuB,KAAK,aAChC,EAAM,aAAe,EAAM,iBAAmB,GAChD,EAAM,EAAuB,KAAK,aAChC,EAAM,aAAe,EAAM,kBAAoB,GACjD,EAAM,EAAuB,KAAK,aAChC,EAAM,aAAe,EAAM,kBAAoB,IAGjD,KAAK,MAAM,gBAAgB,GAQ/B,eAAe,EAAmB,CAChC,KAAK,aAAe,EAOtB,gBAAyB,CACvB,MAAO,MAAK,cAxDT,EAAM,gCA2Db,EAAK,iBACH,yCACA,EAAK,iCAlEC",
  "names": []
}
