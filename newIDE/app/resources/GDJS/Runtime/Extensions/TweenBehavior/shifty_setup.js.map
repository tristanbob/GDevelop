{
  "version": 3,
  "sources": ["../../../../../../../Extensions/TweenBehavior/shifty_setup.ts"],
  "sourcesContent": ["// Callbacks called to pause/resume Shifty scene when a gdjs.RuntimeScene\n// is paused/resumed\nnamespace gdjs {\n  export interface RuntimeScene {\n    shiftyJsScene: shifty.Scene;\n  }\n}\n\nlet currentTweenTime: number = 0;\n\n/**\n * Stop and \"destroy\" all the tweens when a scene is unloaded.\n */\ngdjs.registerRuntimeSceneUnloadedCallback(function (runtimeScene) {\n  const shiftyJsScene = runtimeScene.shiftyJsScene;\n  if (!shiftyJsScene) return;\n\n  // Stop and explicitly remove all tweenables to be sure to drop\n  // all references to the tweenables of the scene.\n  shiftyJsScene.stop(false);\n  shiftyJsScene.empty();\n});\n\n/**\n * When a scene is paused, pause all the tweens of this scene.\n */\ngdjs.registerRuntimeScenePausedCallback(function (runtimeScene) {\n  const shiftyJsScene = runtimeScene.shiftyJsScene;\n  if (shiftyJsScene) shiftyJsScene.pause();\n});\n\n/**\n * When a scene is paused, resume all the tweens of this scene.\n */\ngdjs.registerRuntimeSceneResumedCallback(function (runtimeScene) {\n  const shiftyJsScene = runtimeScene.shiftyJsScene;\n  if (!shiftyJsScene) return;\n\n  // It is important to set immediately the current Shifty time back to the\n  // time of the scene, as the call `resume` will process the tweens.\n  // (If not done, tweens will be resumed with the time of the previous\n  // scene, that could create weird result/make tweens act as if not paused).\n  currentTweenTime = runtimeScene.getTimeManager().getTimeFromStart();\n\n  // Note that per the invariant of shiftyJsScene, shiftyJsScene will only\n  // contains tweenables that should be playing (so calling resume is safe).\n  shiftyJsScene.resume();\n});\n\n// Handle Shifty.js updates (the time and the \"tick\" of tweens\n// is controlled by the behavior)\ngdjs.registerRuntimeScenePreEventsCallback(function (runtimeScene) {\n  currentTweenTime = runtimeScene.getTimeManager().getTimeFromStart();\n  shifty.processTweens();\n});\n\n// Set up Shifty.js so that the processing (\"tick\"/updates) is handled\n// by the behavior, once per frame. See above.\nshifty.Tweenable.setScheduleFunction(function () {\n  /* Do nothing, we'll call processTweens manually. */\n});\n\n// Set up Shifty.js so that the time is handled by the behavior.\n// It will be set to be the time of the current scene, and should be updated\n// before any tween processing (processTweens, resume).\nshifty.Tweenable.now = function () {\n  return currentTweenTime;\n};\n"],
  "mappings": "AAQA,GAAI,kBAA2B,EAK/B,KAAK,qCAAqC,SAAU,EAAc,CAChE,KAAM,GAAgB,EAAa,cACnC,AAAI,CAAC,GAIL,GAAc,KAAK,IACnB,EAAc,WAMhB,KAAK,mCAAmC,SAAU,EAAc,CAC9D,KAAM,GAAgB,EAAa,cACnC,AAAI,GAAe,EAAc,UAMnC,KAAK,oCAAoC,SAAU,EAAc,CAC/D,KAAM,GAAgB,EAAa,cACnC,AAAI,CAAC,GAML,kBAAmB,EAAa,iBAAiB,mBAIjD,EAAc,YAKhB,KAAK,sCAAsC,SAAU,EAAc,CACjE,iBAAmB,EAAa,iBAAiB,mBACjD,OAAO,kBAKT,OAAO,UAAU,oBAAoB,UAAY,IAOjD,OAAO,UAAU,IAAM,UAAY,CACjC,MAAO",
  "names": []
}
