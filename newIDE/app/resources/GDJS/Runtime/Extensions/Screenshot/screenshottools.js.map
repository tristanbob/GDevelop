{
  "version": 3,
  "sources": ["../../../../../../../Extensions/Screenshot/screenshottools.ts"],
  "sourcesContent": ["namespace gdjs {\n  export namespace screenshot {\n    const logger = new gdjs.Logger('Screenshot');\n\n    /**\n     * Save a screenshot of the game.\n     * @param instanceContainer The container\n     * @param savePath The path where to save the screenshot\n     */\n    export const takeScreenshot = function (\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      savePath: string\n    ) {\n      const fs = typeof require !== 'undefined' ? require('fs') : null;\n      if (fs) {\n        const canvas = instanceContainer.getGame().getRenderer().getCanvas();\n        if (canvas) {\n          const content = canvas\n            .toDataURL('image/png')\n            .replace('data:image/png;base64,', '');\n          if (savePath.toLowerCase().indexOf('.png') == -1) {\n            savePath += '.png';\n          }\n          fs.writeFile(savePath, content, 'base64', (err) => {\n            if (err) {\n              logger.error(\n                'Unable to save the screenshot at path: ' + savePath\n              );\n            }\n          });\n        } else {\n          logger.error(\n            'Screenshot are not supported on rendering engines without canvas.'\n          );\n        }\n      }\n    };\n  }\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACS,GAAU,GAAV,UAAU,EAAV,CACL,KAAM,GAAS,GAAI,GAAK,OAAO,cAOxB,AAAM,iBAAiB,SAC5B,EACA,EACA,CACA,KAAM,GAAK,MAAO,UAAY,YAAc,QAAQ,MAAQ,KAC5D,GAAI,EAAI,CACN,KAAM,GAAS,EAAkB,UAAU,cAAc,YACzD,GAAI,EAAQ,CACV,KAAM,GAAU,EACb,UAAU,aACV,QAAQ,yBAA0B,IACrC,AAAI,EAAS,cAAc,QAAQ,SAAW,IAC5C,IAAY,QAEd,EAAG,UAAU,EAAU,EAAS,SAAU,AAAC,GAAQ,CACjD,AAAI,GACF,EAAO,MACL,0CAA4C,SAKlD,GAAO,MACL,yEA/BO,qCADT",
  "names": []
}
