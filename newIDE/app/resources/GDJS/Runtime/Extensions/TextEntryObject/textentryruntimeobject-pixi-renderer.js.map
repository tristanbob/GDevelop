{
  "version": 3,
  "sources": ["../../../../../../../Extensions/TextEntryObject/textentryruntimeobject-pixi-renderer.ts"],
  "sourcesContent": ["namespace gdjs {\n  class TextEntryRuntimeObjectPixiRenderer {\n    _object: gdjs.TextEntryRuntimeObject;\n    _pressHandler: any;\n    _upHandler: any;\n    _downHandler: any;\n\n    constructor(runtimeObject: gdjs.TextEntryRuntimeObject) {\n      this._object = runtimeObject;\n      this._pressHandler = function (evt) {\n        if (!runtimeObject.isActivated()) {\n          return;\n        }\n        evt = evt || window.event;\n        const charCode = evt.which || evt.keyCode;\n        const charTyped = String.fromCharCode(charCode);\n        if (\n          charTyped !== undefined &&\n          //Skip some non displayable characters\n          charCode !== 8\n        ) {\n          //On Firefox, backspace is considered as a character\n          runtimeObject.setString(runtimeObject.getString() + charTyped);\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        return false;\n      };\n      this._upHandler = function (evt) {\n        if (!runtimeObject.isActivated()) {\n          return;\n        }\n        evt = evt || window.event;\n        const charCode = evt.which || evt.keyCode;\n        if (charCode === 8) {\n          //Backspace\n          runtimeObject.setString(runtimeObject.getString().slice(0, -1));\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        return false;\n      };\n      // @ts-expect-error ts-migrate(7030) FIXME: Not all code paths return a value.\n      this._downHandler = function (evt) {\n        evt = evt || window.event;\n        const charCode = evt.which || evt.keyCode;\n\n        //Prevent backspace from going to the previous page\n        if (charCode === 8) {\n          if (evt.preventDefault) {\n            evt.preventDefault();\n          }\n          return false;\n        }\n      };\n      document.addEventListener('keypress', this._pressHandler);\n      document.addEventListener('keyup', this._upHandler);\n      document.addEventListener('keydown', this._downHandler);\n    }\n\n    onDestroy() {\n      document.removeEventListener('keypress', this._pressHandler);\n      document.removeEventListener('keyup', this._upHandler);\n      document.removeEventListener('keydown', this._downHandler);\n    }\n\n    updateString(): void {\n      //Nothing to do.\n    }\n\n    activate(enable) {\n      //Nothing to do.\n    }\n  }\n\n  export const TextEntryRuntimeObjectRenderer = TextEntryRuntimeObjectPixiRenderer;\n  export type TextEntryRuntimeObjectRenderer = TextEntryRuntimeObjectPixiRenderer;\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACE,OAAyC,CAMvC,YAAY,EAA4C,CACtD,KAAK,QAAU,EACf,KAAK,cAAgB,SAAU,EAAK,CAClC,GAAI,CAAC,EAAc,cACjB,OAEF,EAAM,GAAO,OAAO,MACpB,KAAM,GAAW,EAAI,OAAS,EAAI,QAC5B,EAAY,OAAO,aAAa,GACtC,MACE,KAAc,QAEd,IAAa,GAGb,EAAc,UAAU,EAAc,YAAc,GAElD,EAAI,gBACN,EAAI,iBAEC,IAET,KAAK,WAAa,SAAU,EAAK,CAC/B,MAAK,GAAc,cAGnB,GAAM,GAAO,OAAO,MAEhB,AADa,GAAI,OAAS,EAAI,WACjB,GAEf,EAAc,UAAU,EAAc,YAAY,MAAM,EAAG,KAEzD,EAAI,gBACN,EAAI,iBAEC,IAXL,QAcJ,KAAK,aAAe,SAAU,EAAK,CAKjC,GAJA,EAAM,GAAO,OAAO,MAIhB,AAHa,GAAI,OAAS,EAAI,WAGjB,EACf,MAAI,GAAI,gBACN,EAAI,iBAEC,IAGX,SAAS,iBAAiB,WAAY,KAAK,eAC3C,SAAS,iBAAiB,QAAS,KAAK,YACxC,SAAS,iBAAiB,UAAW,KAAK,cAG5C,WAAY,CACV,SAAS,oBAAoB,WAAY,KAAK,eAC9C,SAAS,oBAAoB,QAAS,KAAK,YAC3C,SAAS,oBAAoB,UAAW,KAAK,cAG/C,cAAqB,EAIrB,SAAS,EAAQ,GAKZ,AAAM,iCAAiC,IA7EtC",
  "names": []
}
