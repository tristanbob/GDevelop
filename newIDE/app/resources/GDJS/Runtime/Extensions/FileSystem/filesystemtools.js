var gdjs;(function(g){const c=new g.Logger("Filesystem");let u;(function(n){const p=typeof require!="undefined"?require("path"):null,s=typeof require!="undefined"?require("fs"):null,l=typeof require!="undefined"?require("fs/promises"):null;s||c.warn("Filesystem is not supported on this platform! Only PC builds support filesystem access."),n.getDirectoryName=function(r){return p?p.dirname(r):""},n.getFileName=function(r){return p?p.basename(r):""},n.getExtensionName=function(r){return p?p.extname(r):""},n.getDesktopPath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("desktop")||""},n.getDocumentsPath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("documents")||""},n.getPicturesPath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("pictures")||""},n.getExecutablePath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("exe")||""},n.getExecutableFolderPath=function(r){const e=n.getExecutablePath(r);return p?p.dirname(e):""},n.getUserdataPath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("userData")||""},n.getUserHomePath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("home")||""},n.getTempPath=function(r){const e=r.getGame().getRenderer().getElectronRemote(),t=e?e.app:null;return t&&t.getPath("temp")||""},n.getPathDelimiter=function(){return p&&p.sep||"/"},n.makeDirectory=function(r,e){let t="error";if(s)try{s.mkdirSync(r),t="ok"}catch(o){c.error("Unable to create directory at: '"+r+"': ",o)}e.setString(t)},n.makeDirectoryAsync=(r,e)=>l?new g.PromiseTask(l.mkdir(r,{recursive:!0}).then(()=>{e.setString("ok")}).catch(t=>{e.setString("error"),c.error("Unable to create directory at: '"+r+"': ",t)})):(e.setString("error"),new g.ResolveTask),n.saveStringToFileAsync=function(r,e,t){s&&s.writeFile(e,r,"utf8",o=>{t.setString("ok"),o&&(c.error("Unable to save the text to path: '"+e+"': ",o),t.setString("error"))})},n.saveStringToFileAsyncTask=(r,e,t)=>l?new g.PromiseTask(l.writeFile(e,r,{encoding:"utf8"}).then(()=>{t.setString("ok")}).catch(o=>{t.setString("error"),c.error("Unable to save the text to path: '"+e+"': ",o)})):(t.setString("error"),new g.ResolveTask),n.saveStringToFile=function(r,e,t){let o="error";if(s)try{s.writeFileSync(e,r,"utf8"),o="ok"}catch(i){c.error("Unable to save the text to path: '"+e+"': ",i)}t.setString(o)},n.saveVariableToJSONFile=function(r,e,t){let o="error";if(s)try{s.writeFileSync(e,JSON.stringify(r.toJSObject()),"utf8"),o="ok"}catch(i){c.error("Unable to save the variable to path: '"+e+"': ",i)}t.setString(o)},n.saveVariableToJSONFileAsync=function(r,e,t){s&&s.writeFile(e,JSON.stringify(r.toJSObject()),"utf8",o=>{t.setString("ok"),o&&(c.error("Unable to save the variable to path: '"+e+"': ",o),t.setString("error"))})},n.saveVariableToJSONFileAsyncTask=(r,e,t)=>l?new g.PromiseTask(l.writeFile(e,JSON.stringify(r.toJSObject()),{encoding:"utf8"}).then(()=>{t.setString("ok")}).catch(o=>{t.setString("error"),c.error("Unable to save the text to path: '"+e+"': ",o)})):(t.setString("error"),new g.ResolveTask),n.loadStringFromFile=function(r,e,t,o){let i="error";if(s)try{const a=s.readFileSync(e,"utf8");a&&(r.setString(o?a.replace(/\r/g,""):a),i="ok")}catch(a){c.error("Unable to load the file at path: '"+e+"': ",a)}t.setString(i)},n.loadVariableFromJSONFile=function(r,e,t,o){let i="error";if(s)try{const a=s.readFileSync(e,"utf8");a&&(r.fromJSON(o?a.replace(/\r/g,""):a),i="ok")}catch(a){c.error("Unable to load variable from the file at path: '"+e+"': ",a)}t.setString(i)},n.loadVariableFromJSONFileAsync=function(r,e,t,o){s&&s.readFile(e,"utf8",(i,a)=>{a&&(r.fromJSON(o?a.replace(/\r/g,""):a),t.setString("ok")),i&&(c.error("Unable to load variable from the file at path: '"+e+"': ",i),t.setString("error"))})},n.loadVariableFromJSONFileAsyncTask=(r,e,t,o)=>l?new g.PromiseTask(l.readFile(e,{encoding:"utf8"}).then(i=>{i&&r.fromJSON(o?i.replace(/\r/g,""):i),t.setString("ok")}).catch(i=>{t.setString("error"),c.error("Unable to load the JSON file from path: '"+e+"': ",i)})):(t.setString("error"),new g.ResolveTask),n.loadStringFromFileAsync=function(r,e,t,o){s&&s.readFile(e,"utf8",(i,a)=>{a&&(r.setString(o?a.replace(/\r/g,""):a),t.setString("ok")),i&&(c.error("Unable to load the file at path: '"+e+"': ",i),t.setString("error"))})},n.loadStringFromFileAsyncTask=(r,e,t,o)=>l?new g.PromiseTask(l.readFile(e,{encoding:"utf8"}).then(i=>{i&&r.setString(o?i.replace(/\r/g,""):i),t.setString("ok")}).catch(i=>{t.setString("error"),c.error("Unable to load the text file from path: '"+e+"': ",i)})):(t.setString("error"),new g.ResolveTask),n.deleteFile=function(r,e){let t="error";if(s)try{s.unlinkSync(r),t="ok"}catch(o){c.error("Unable to delete the file: '"+r+"': ",o),t="error"}e.setString(t)},n.deleteFileAsync=function(r,e){s&&s.unlink(r,t=>{e.setString("ok"),t&&(c.error("Unable to delete the file: '"+r+"': ",t),e.setString("error"))})},n.deleteFileAsyncTask=(r,e)=>l?new g.PromiseTask(l.rm(r,{recursive:!0}).then(()=>{e.setString("ok")}).catch(t=>{e.setString("error"),c.error("Unable to delete the file: '"+r+"': ",t)})):(e.setString("error"),new g.ResolveTask),n.pathExists=function(r){return s?s.existsSync(r):!1}})(u=g.fileSystem||(g.fileSystem={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=filesystemtools.js.map
