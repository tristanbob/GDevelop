var gdjs;(function(o){const l=new o.Logger("Dummy effect"),i=GlobalPIXIModule.PIXI,a=function(){var e=null,r=["precision mediump float;","","varying vec2 vTextureCoord;","uniform sampler2D uSampler;","uniform float opacity;","","void main(void)","{","   mat3 nightMatrix = mat3(0.6, 0, 0, 0, 0.7, 0, 0, 0, 1.3);","   gl_FragColor = texture2D(uSampler, vTextureCoord);","   gl_FragColor.rgb = mix(gl_FragColor.rgb, nightMatrix * gl_FragColor.rgb, opacity);","}"].join(`
`),t={opacity:{type:"1f",value:1}};i.Filter.call(this,e,r,t)};a.prototype=Object.create(i.Filter.prototype),a.prototype.constructor=a,o.PixiFiltersTools.registerFilterCreator("MyDummyExtension::DummyEffect",new class extends o.PixiFiltersTools.PixiFilterCreator{makePIXIFilter(e,r){const t=new a;return l.info("The PIXI texture found for the Dummy Effect (not actually used):",e.getRuntimeScene().getGame().getImageManager().getPIXITexture(r.stringParameters.someImage)),t}updatePreRender(e,r){}updateDoubleParameter(e,r,t){r==="opacity"&&(e.uniforms.opacity=o.PixiFiltersTools.clampValue(t,0,1))}updateStringParameter(e,r,t){}updateBooleanParameter(e,r,t){}})})(gdjs||(gdjs={}));
//# sourceMappingURL=dummyeffect.js.map
