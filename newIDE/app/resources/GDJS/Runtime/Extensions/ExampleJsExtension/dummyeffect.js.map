{
  "version": 3,
  "sources": ["../../../../../../../Extensions/ExampleJsExtension/dummyeffect.ts"],
  "sourcesContent": ["//A simple PIXI filter doing some color changes\nnamespace gdjs {\n  const logger = new gdjs.Logger('Dummy effect');\n  import PIXI = GlobalPIXIModule.PIXI;\n\n  const DummyPixiFilter = function () {\n    var vertexShader = null;\n    var fragmentShader = [\n      'precision mediump float;',\n      '',\n      'varying vec2 vTextureCoord;',\n      'uniform sampler2D uSampler;',\n      'uniform float opacity;',\n      '',\n      'void main(void)',\n      '{',\n      '   mat3 nightMatrix = mat3(0.6, 0, 0, 0, 0.7, 0, 0, 0, 1.3);',\n      '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n      '   gl_FragColor.rgb = mix(gl_FragColor.rgb, nightMatrix * gl_FragColor.rgb, opacity);',\n      '}',\n    ].join('\\n');\n    var uniforms = {\n      opacity: { type: '1f', value: 1 },\n    };\n\n    PIXI.Filter.call(this, vertexShader, fragmentShader, uniforms);\n  };\n  DummyPixiFilter.prototype = Object.create(PIXI.Filter.prototype);\n  DummyPixiFilter.prototype.constructor = DummyPixiFilter;\n\n  // Register the effect type and associate it with a \"filter creator\" object, containing\n  // functions to create and manipulate the filter.\n  // Don't forget your extension name in the effect type!\n  gdjs.PixiFiltersTools.registerFilterCreator(\n    'MyDummyExtension::DummyEffect',\n    new (class extends gdjs.PixiFiltersTools.PixiFilterCreator {\n      // MakePIXIFilter should return a PIXI.Filter, that will be applied on the PIXI.Container (for layers)\n      // or the PIXI.DisplayObject (for objects).\n      makePIXIFilter(layer, effectData) {\n        const filter = new DummyPixiFilter();\n\n        // If you need to store the time or some state, you can set it up now:\n        // filter._time = 0;\n        // But be careful about the existing member of the filter (consider\n        // updating the filter uniforms directly).\n\n        // You can also access to the effect parameters, classified by type:\n        // `effectData.doubleParameters.opacity`\n        // `effectData.stringParameters.someImage`\n        // `effectData.stringParameters.someColor`\n        // `effectData.booleanParameters.someBoolean`\n        logger.info(\n          'The PIXI texture found for the Dummy Effect (not actually used):',\n          (layer\n            .getRuntimeScene()\n            .getGame()\n            .getImageManager() as gdjs.PixiImageManager).getPIXITexture(\n            effectData.stringParameters.someImage\n          )\n        );\n        return filter;\n      }\n      // Function called at every frame, after events and before the frame is rendered.\n      updatePreRender(filter, layer) {\n        // If your filter depends on the time, you can get the elapsed time\n        // with `layer.getElapsedTime()`.\n        // You can update the uniforms or other state of the filter.\n      }\n      // Function that will be called to update a (number) parameter of the PIXI filter with a new value\n      updateDoubleParameter(filter, parameterName, value) {\n        if (parameterName === 'opacity') {\n          filter.uniforms.opacity = gdjs.PixiFiltersTools.clampValue(\n            value,\n            0,\n            1\n          );\n        }\n      }\n      // Function that will be called to update a (string) parameter of the PIXI filter with a new value\n      updateStringParameter(filter, parameterName, value) {}\n      // Function that will be called to update a (boolean) parameter of the PIXI filter with a new value\n      updateBooleanParameter(filter, parameterName, value) {}\n    })()\n  );\n}\n"],
  "mappings": "AACA,GAAU,MAAV,UAAU,EAAV,CACE,KAAM,GAAS,GAAI,GAAK,OAAO,gBACxB,EAAO,iBAAiB,KAEzB,EAAkB,UAAY,CAClC,GAAI,GAAe,KACf,EAAiB,CACnB,2BACA,GACA,8BACA,8BACA,yBACA,GACA,kBACA,IACA,+DACA,wDACA,wFACA,KACA,KAAK;AAAA,GACH,EAAW,CACb,QAAS,CAAE,KAAM,KAAM,MAAO,IAGhC,EAAK,OAAO,KAAK,KAAM,EAAc,EAAgB,IAEvD,EAAgB,UAAY,OAAO,OAAO,EAAK,OAAO,WACtD,EAAgB,UAAU,YAAc,EAKxC,EAAK,iBAAiB,sBACpB,gCACA,GAAK,cAAc,GAAK,iBAAiB,iBAAkB,CAGzD,eAAe,EAAO,EAAY,CAChC,KAAM,GAAS,GAAI,GAYnB,SAAO,KACL,mEACC,EACE,kBACA,UACA,kBAA4C,eAC7C,EAAW,iBAAiB,YAGzB,EAGT,gBAAgB,EAAQ,EAAO,EAM/B,sBAAsB,EAAQ,EAAe,EAAO,CAClD,AAAI,IAAkB,WACpB,GAAO,SAAS,QAAU,EAAK,iBAAiB,WAC9C,EACA,EACA,IAKN,sBAAsB,EAAQ,EAAe,EAAO,EAEpD,uBAAuB,EAAQ,EAAe,EAAO,OAhFjD",
  "names": []
}
