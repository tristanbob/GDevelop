{
  "version": 3,
  "sources": ["../../../../../../../Extensions/Inventory/inventorytools.ts"],
  "sourcesContent": ["namespace gdjs {\n  export interface RuntimeGame {\n    inventories: { [name: string]: gdjs.Inventory };\n  }\n  export class InventoryManager {\n    static get(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      name: string\n    ): gdjs.Inventory {\n      const game = instanceContainer.getGame();\n      if (!game.inventories) {\n        game.inventories = {};\n      }\n      let inventory = game.inventories[name];\n      if (!inventory) {\n        inventory = game.inventories[name] = new gdjs.Inventory();\n      }\n      return inventory;\n    }\n  }\n\n  export namespace evtTools {\n    export namespace inventory {\n      export const add = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).add(name);\n      };\n\n      export const remove = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).remove(\n          name\n        );\n      };\n\n      export const count = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).count(\n          name\n        );\n      };\n\n      export const maximum = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).maximum(\n          name\n        );\n      };\n\n      export const has = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).has(name);\n      };\n\n      export const setMaximum = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string,\n        maxCount: number\n      ) {\n        return InventoryManager.get(\n          instanceContainer,\n          inventoryName\n        ).setMaximum(name, maxCount);\n      };\n\n      export const setUnlimited = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string,\n        enable: boolean\n      ) {\n        return InventoryManager.get(\n          instanceContainer,\n          inventoryName\n        ).setUnlimited(name, enable);\n      };\n\n      export const isFull = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).isFull(\n          name\n        );\n      };\n\n      export const equip = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string,\n        equip: boolean\n      ) {\n        return InventoryManager.get(instanceContainer, inventoryName).equip(\n          name,\n          equip\n        );\n      };\n\n      export const isEquipped = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        name: string\n      ) {\n        return InventoryManager.get(\n          instanceContainer,\n          inventoryName\n        ).isEquipped(name);\n      };\n\n      export const serializeToVariable = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        variable: gdjs.Variable\n      ) {\n        const allItems = gdjs.InventoryManager.get(\n          instanceContainer,\n          inventoryName\n        ).getAllItems();\n        for (const name in allItems) {\n          const item = allItems[name];\n          const serializedItem = variable.getChild(name);\n          serializedItem.getChild('count').setNumber(item.count);\n          serializedItem.getChild('maxCount').setNumber(item.maxCount);\n          serializedItem.getChild('unlimited').setBoolean(item.unlimited);\n          serializedItem.getChild('equipped').setBoolean(item.equipped);\n        }\n      };\n\n      export const unserializeFromVariable = function (\n        instanceContainer: gdjs.RuntimeInstanceContainer,\n        inventoryName: string,\n        variable: gdjs.Variable\n      ) {\n        const inventory = gdjs.InventoryManager.get(\n          instanceContainer,\n          inventoryName\n        );\n        inventory.clear();\n\n        const children = variable.getAllChildren();\n        for (const name in children) {\n          const serializedItem = children[name];\n          inventory.setCount(\n            name,\n            serializedItem.getChild('count').getAsNumber()\n          );\n          inventory.setMaximum(\n            name,\n            serializedItem.getChild('maxCount').getAsNumber()\n          );\n          inventory.setUnlimited(\n            name,\n            serializedItem.getChild('unlimited').getAsBoolean()\n          );\n          inventory.equip(\n            name,\n            serializedItem.getChild('equipped').getAsBoolean()\n          );\n        }\n      };\n    }\n  }\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CAIS,OAAuB,OACrB,KACL,EACA,EACgB,CAChB,KAAM,GAAO,EAAkB,UAC/B,AAAK,EAAK,aACR,GAAK,YAAc,IAErB,GAAI,GAAY,EAAK,YAAY,GACjC,MAAK,IACH,GAAY,EAAK,YAAY,GAAQ,GAAI,GAAK,WAEzC,GAbJ,EAAM,mBAiBN,GAAU,GAAV,UAAU,EAAV,CACE,GAAU,GAAV,UAAU,EAAV,CACE,AAAM,MAAM,SACjB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,IAAI,IAGvD,SAAS,SACpB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,OAC5D,IAIS,QAAQ,SACnB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,MAC5D,IAIS,UAAU,SACrB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,QAC5D,IAIS,MAAM,SACjB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,IAAI,IAGvD,aAAa,SACxB,EACA,EACA,EACA,EACA,CACA,MAAO,GAAiB,IACtB,EACA,GACA,WAAW,EAAM,IAGR,eAAe,SAC1B,EACA,EACA,EACA,EACA,CACA,MAAO,GAAiB,IACtB,EACA,GACA,aAAa,EAAM,IAGV,SAAS,SACpB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,OAC5D,IAIS,QAAQ,SACnB,EACA,EACA,EACA,EACA,CACA,MAAO,GAAiB,IAAI,EAAmB,GAAe,MAC5D,EACA,IAIS,aAAa,SACxB,EACA,EACA,EACA,CACA,MAAO,GAAiB,IACtB,EACA,GACA,WAAW,IAGF,sBAAsB,SACjC,EACA,EACA,EACA,CACA,KAAM,GAAW,EAAK,iBAAiB,IACrC,EACA,GACA,cACF,SAAW,KAAQ,GAAU,CAC3B,KAAM,GAAO,EAAS,GAChB,EAAiB,EAAS,SAAS,GACzC,EAAe,SAAS,SAAS,UAAU,EAAK,OAChD,EAAe,SAAS,YAAY,UAAU,EAAK,UACnD,EAAe,SAAS,aAAa,WAAW,EAAK,WACrD,EAAe,SAAS,YAAY,WAAW,EAAK,YAI3C,0BAA0B,SACrC,EACA,EACA,EACA,CACA,KAAM,GAAY,EAAK,iBAAiB,IACtC,EACA,GAEF,EAAU,QAEV,KAAM,GAAW,EAAS,iBAC1B,SAAW,KAAQ,GAAU,CAC3B,KAAM,GAAiB,EAAS,GAChC,EAAU,SACR,EACA,EAAe,SAAS,SAAS,eAEnC,EAAU,WACR,EACA,EAAe,SAAS,YAAY,eAEtC,EAAU,aACR,EACA,EAAe,SAAS,aAAa,gBAEvC,EAAU,MACR,EACA,EAAe,SAAS,YAAY,oBAvJ3B,mCADF,iCArBT",
  "names": []
}
