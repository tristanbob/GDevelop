{
  "version": 3,
  "sources": ["../../../../../../../Extensions/PathfindingBehavior/pathfindingobstacleruntimebehavior.ts"],
  "sourcesContent": ["/*\nGDevelop - Pathfinding Behavior Extension\nCopyright (c) 2013-2016 Florian Rival (Florian.Rival@gmail.com)\n */\n\nnamespace gdjs {\n  export interface RuntimeInstanceContainer {\n    pathfindingObstaclesManager: gdjs.PathfindingObstaclesManager;\n  }\n  declare var rbush: any;\n\n  /**\n   * PathfindingObstaclesManager manages the common objects shared by objects\n   * having a pathfinding behavior: In particular, the obstacles behaviors are\n   * required to declare themselves (see\n   * `PathfindingObstaclesManager.addObstacle`) to the manager of their\n   * associated container (see\n   * `gdjs.PathfindingRuntimeBehavior.obstaclesManagers`).\n   */\n  export class PathfindingObstaclesManager {\n    _obstaclesRBush: any;\n\n    constructor(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      this._obstaclesRBush = new rbush();\n    }\n\n    /**\n     * Get the obstacles manager of an instance container.\n     */\n    static getManager(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      if (!instanceContainer.pathfindingObstaclesManager) {\n        //Create the shared manager if necessary.\n        instanceContainer.pathfindingObstaclesManager = new gdjs.PathfindingObstaclesManager(\n          instanceContainer\n        );\n      }\n      return instanceContainer.pathfindingObstaclesManager;\n    }\n\n    /**\n     * Add a obstacle to the list of existing obstacles.\n     */\n    addObstacle(\n      pathfindingObstacleBehavior: PathfindingObstacleRuntimeBehavior\n    ) {\n      if (pathfindingObstacleBehavior.currentRBushAABB)\n        pathfindingObstacleBehavior.currentRBushAABB.updateAABBFromOwner();\n      else\n        pathfindingObstacleBehavior.currentRBushAABB = new gdjs.BehaviorRBushAABB(\n          pathfindingObstacleBehavior\n        );\n\n      this._obstaclesRBush.insert(pathfindingObstacleBehavior.currentRBushAABB);\n    }\n\n    /**\n     * Remove a obstacle from the list of existing obstacles. Be sure that the obstacle was\n     * added before.\n     */\n    removeObstacle(\n      pathfindingObstacleBehavior: PathfindingObstacleRuntimeBehavior\n    ) {\n      this._obstaclesRBush.remove(pathfindingObstacleBehavior.currentRBushAABB);\n    }\n\n    /**\n     * Returns all the platforms around the specified object.\n     * @param maxMovementLength The maximum distance, in pixels, the object is going to do.\n     * @return An array with all platforms near the object.\n     */\n    getAllObstaclesAround(\n      x: float,\n      y: float,\n      radius: float,\n      result: gdjs.PathfindingObstacleRuntimeBehavior[]\n    ): void {\n      const searchArea = gdjs.staticObject(\n        PathfindingObstaclesManager.prototype.getAllObstaclesAround\n      );\n      // @ts-ignore\n      searchArea.minX = x - radius;\n      // @ts-ignore\n      searchArea.minY = y - radius;\n      // @ts-ignore\n      searchArea.maxX = x + radius;\n      // @ts-ignore\n      searchArea.maxY = y + radius;\n      const nearbyObstacles: gdjs.BehaviorRBushAABB<\n        gdjs.PathfindingObstacleRuntimeBehavior\n      >[] = this._obstaclesRBush.search(searchArea);\n      result.length = 0;\n      nearbyObstacles.forEach((nearbyObstacle) =>\n        result.push(nearbyObstacle.behavior)\n      );\n    }\n  }\n\n  /**\n   * PathfindingObstacleRuntimeBehavior represents a behavior allowing objects to be\n   * considered as a obstacle by objects having Pathfinding Behavior.\n   */\n  export class PathfindingObstacleRuntimeBehavior extends gdjs.RuntimeBehavior {\n    _impassable: boolean;\n    _cost: float;\n    _oldX: float = 0;\n    _oldY: float = 0;\n    _oldWidth: float = 0;\n    _oldHeight: float = 0;\n    _manager: PathfindingObstaclesManager;\n    _registeredInManager: boolean = false;\n    currentRBushAABB: gdjs.BehaviorRBushAABB<\n      PathfindingObstacleRuntimeBehavior\n    > | null = null;\n\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      behaviorData,\n      owner: gdjs.RuntimeObject\n    ) {\n      super(instanceContainer, behaviorData, owner);\n      this._impassable = behaviorData.impassable;\n      this._cost = behaviorData.cost;\n      this._manager = PathfindingObstaclesManager.getManager(instanceContainer);\n\n      //Note that we can't use getX(), getWidth()... of owner here:\n      //The owner is not yet fully constructed.\n    }\n\n    updateFromBehaviorData(oldBehaviorData, newBehaviorData): boolean {\n      if (oldBehaviorData.impassable !== newBehaviorData.impassable) {\n        this.setImpassable(newBehaviorData.impassable);\n      }\n      if (oldBehaviorData.cost !== newBehaviorData.cost) {\n        this.setCost(newBehaviorData.cost);\n      }\n      return true;\n    }\n\n    onDestroy() {\n      if (this._manager && this._registeredInManager) {\n        this._manager.removeObstacle(this);\n      }\n    }\n\n    doStepPreEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      //Make sure the obstacle is or is not in the obstacles manager.\n      if (!this.activated() && this._registeredInManager) {\n        this._manager.removeObstacle(this);\n        this._registeredInManager = false;\n      } else {\n        if (this.activated() && !this._registeredInManager) {\n          this._manager.addObstacle(this);\n          this._registeredInManager = true;\n        }\n      }\n\n      //Track changes in size or position\n      if (\n        this._oldX !== this.owner.getX() ||\n        this._oldY !== this.owner.getY() ||\n        this._oldWidth !== this.owner.getWidth() ||\n        this._oldHeight !== this.owner.getHeight()\n      ) {\n        if (this._registeredInManager) {\n          this._manager.removeObstacle(this);\n          this._manager.addObstacle(this);\n        }\n        this._oldX = this.owner.getX();\n        this._oldY = this.owner.getY();\n        this._oldWidth = this.owner.getWidth();\n        this._oldHeight = this.owner.getHeight();\n      }\n    }\n\n    doStepPostEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {}\n\n    getAABB() {\n      return this.owner.getAABB();\n    }\n\n    onActivate() {\n      if (this._registeredInManager) {\n        return;\n      }\n      this._manager.addObstacle(this);\n      this._registeredInManager = true;\n    }\n\n    onDeActivate() {\n      if (!this._registeredInManager) {\n        return;\n      }\n      this._manager.removeObstacle(this);\n      this._registeredInManager = false;\n    }\n\n    getCost() {\n      return this._cost;\n    }\n\n    setCost(cost: float): void {\n      this._cost = cost;\n    }\n\n    isImpassable(): boolean {\n      return this._impassable;\n    }\n\n    setImpassable(impassable: boolean): void {\n      this._impassable = impassable;\n    }\n  }\n  gdjs.registerBehavior(\n    'PathfindingBehavior::PathfindingObstacleBehavior',\n    gdjs.PathfindingObstacleRuntimeBehavior\n  );\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CAcS,OAAkC,CAGvC,YAAY,EAAkD,CAC5D,KAAK,gBAAkB,GAAI,aAMtB,YAAW,EAAkD,CAClE,MAAK,GAAkB,6BAErB,GAAkB,4BAA8B,GAAI,GAAK,4BACvD,IAGG,EAAkB,4BAM3B,YACE,EACA,CACA,AAAI,EAA4B,iBAC9B,EAA4B,iBAAiB,sBAE7C,EAA4B,iBAAmB,GAAI,GAAK,kBACtD,GAGJ,KAAK,gBAAgB,OAAO,EAA4B,kBAO1D,eACE,EACA,CACA,KAAK,gBAAgB,OAAO,EAA4B,kBAQ1D,sBACE,EACA,EACA,EACA,EACM,CACN,KAAM,GAAa,EAAK,aACtB,EAA4B,UAAU,uBAGxC,EAAW,KAAO,EAAI,EAEtB,EAAW,KAAO,EAAI,EAEtB,EAAW,KAAO,EAAI,EAEtB,EAAW,KAAO,EAAI,EACtB,KAAM,GAEA,KAAK,gBAAgB,OAAO,GAClC,EAAO,OAAS,EAChB,EAAgB,QAAQ,AAAC,GACvB,EAAO,KAAK,EAAe,YAzE1B,EAAM,8BAkFN,eAAiD,GAAK,eAAgB,CAa3E,YACE,EACA,EACA,EACA,CACA,MAAM,EAAmB,EAAc,GAfzC,WAAe,EACf,WAAe,EACf,eAAmB,EACnB,gBAAoB,EAEpB,0BAAgC,GAChC,sBAEW,KAQT,KAAK,YAAc,EAAa,WAChC,KAAK,MAAQ,EAAa,KAC1B,KAAK,SAAW,EAA4B,WAAW,GAMzD,uBAAuB,EAAiB,EAA0B,CAChE,MAAI,GAAgB,aAAe,EAAgB,YACjD,KAAK,cAAc,EAAgB,YAEjC,EAAgB,OAAS,EAAgB,MAC3C,KAAK,QAAQ,EAAgB,MAExB,GAGT,WAAY,CACV,AAAI,KAAK,UAAY,KAAK,sBACxB,KAAK,SAAS,eAAe,MAIjC,gBAAgB,EAAkD,CAEhE,AAAI,CAAC,KAAK,aAAe,KAAK,qBAC5B,MAAK,SAAS,eAAe,MAC7B,KAAK,qBAAuB,IAExB,KAAK,aAAe,CAAC,KAAK,sBAC5B,MAAK,SAAS,YAAY,MAC1B,KAAK,qBAAuB,IAM9B,MAAK,QAAU,KAAK,MAAM,QAC1B,KAAK,QAAU,KAAK,MAAM,QAC1B,KAAK,YAAc,KAAK,MAAM,YAC9B,KAAK,aAAe,KAAK,MAAM,cAE3B,MAAK,sBACP,MAAK,SAAS,eAAe,MAC7B,KAAK,SAAS,YAAY,OAE5B,KAAK,MAAQ,KAAK,MAAM,OACxB,KAAK,MAAQ,KAAK,MAAM,OACxB,KAAK,UAAY,KAAK,MAAM,WAC5B,KAAK,WAAa,KAAK,MAAM,aAIjC,iBAAiB,EAAkD,EAEnE,SAAU,CACR,MAAO,MAAK,MAAM,UAGpB,YAAa,CACX,AAAI,KAAK,sBAGT,MAAK,SAAS,YAAY,MAC1B,KAAK,qBAAuB,IAG9B,cAAe,CACb,AAAI,CAAC,KAAK,sBAGV,MAAK,SAAS,eAAe,MAC7B,KAAK,qBAAuB,IAG9B,SAAU,CACR,MAAO,MAAK,MAGd,QAAQ,EAAmB,CACzB,KAAK,MAAQ,EAGf,cAAwB,CACtB,MAAO,MAAK,YAGd,cAAc,EAA2B,CACvC,KAAK,YAAc,GA5GhB,EAAM,qCA+Gb,EAAK,iBACH,mDACA,EAAK,sCAjNC",
  "names": []
}
