{
  "version": 3,
  "sources": ["../../../../../../../Extensions/DeviceVibration/devicevibrationtools.ts"],
  "sourcesContent": ["namespace gdjs {\n  export namespace deviceVibration {\n    /**\n     * Vibrate the mobile device.\n     * @param duration Value in milliseconds.\n     */\n    export const startVibration = function (duration: number) {\n      if (typeof navigator == 'undefined' || !navigator.vibrate) {\n        return;\n      }\n      navigator.vibrate([duration]);\n    };\n\n    /**\n     * Vibrate the mobile device in a pattern.\n     * You can add multiple comma separated values where every second one determines the silence between vibrations.\n     * Example: \"200,1000,500\" (200ms vibration, 1sec silence, 500ms vibration)\n     * @param intervals Comma separated list of values (in ms).\n     */\n    export const startVibrationPattern = function (intervals: string) {\n      const pattern = '^[0-9]+(,[0-9]+)*$';\n      if (typeof navigator == 'undefined' || !navigator.vibrate) {\n        return;\n      }\n      if (intervals.match(pattern)) {\n        navigator.vibrate(\n          intervals.split(',').map((duration) => parseFloat(duration))\n        );\n      }\n    };\n\n    /**\n     * Stop the current vibration on the mobile device.\n     */\n    export const stopVibration = function () {\n      if (typeof navigator == 'undefined' || !navigator.vibrate) {\n        return;\n      }\n      navigator.vibrate([]);\n    };\n  }\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACS,GAAU,GAAV,UAAU,EAAV,CAKE,AAAM,iBAAiB,SAAU,EAAkB,CACxD,AAAI,MAAO,YAAa,aAAe,CAAC,UAAU,SAGlD,UAAU,QAAQ,CAAC,KASR,wBAAwB,SAAU,EAAmB,CAChE,KAAM,GAAU,qBAChB,AAAI,MAAO,YAAa,aAAe,CAAC,UAAU,SAG9C,EAAU,MAAM,IAClB,UAAU,QACR,EAAU,MAAM,KAAK,IAAI,AAAC,GAAa,WAAW,MAQ3C,gBAAgB,UAAY,CACvC,AAAI,MAAO,YAAa,aAAe,CAAC,UAAU,SAGlD,UAAU,QAAQ,OArCL,+CADT",
  "names": []
}
