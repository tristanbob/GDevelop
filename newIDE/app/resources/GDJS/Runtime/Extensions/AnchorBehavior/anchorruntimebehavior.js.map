{
  "version": 3,
  "sources": ["../../../../../../../Extensions/AnchorBehavior/anchorruntimebehavior.ts"],
  "sourcesContent": ["/*\nGDevelop - Anchor Behavior Extension\nCopyright (c) 2013-2016 Florian Rival (Florian.Rival@gmail.com)\n */\n\nnamespace gdjs {\n  export class AnchorRuntimeBehavior extends gdjs.RuntimeBehavior {\n    _relativeToOriginalWindowSize: any;\n    _leftEdgeAnchor: any;\n    _rightEdgeAnchor: any;\n    _topEdgeAnchor: any;\n    _bottomEdgeAnchor: any;\n    _invalidDistances: boolean = true;\n    _leftEdgeDistance: number = 0;\n    _rightEdgeDistance: number = 0;\n    _topEdgeDistance: number = 0;\n    _bottomEdgeDistance: number = 0;\n    _useLegacyBottomAndRightAnchors: boolean = false;\n\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      behaviorData,\n      owner: gdjs.RuntimeObject\n    ) {\n      super(instanceContainer, behaviorData, owner);\n      this._relativeToOriginalWindowSize = !!behaviorData.relativeToOriginalWindowSize;\n      this._leftEdgeAnchor = behaviorData.leftEdgeAnchor;\n      this._rightEdgeAnchor = behaviorData.rightEdgeAnchor;\n      this._topEdgeAnchor = behaviorData.topEdgeAnchor;\n      this._bottomEdgeAnchor = behaviorData.bottomEdgeAnchor;\n      this._useLegacyBottomAndRightAnchors =\n        behaviorData.useLegacyBottomAndRightAnchors === undefined\n          ? true\n          : behaviorData.useLegacyBottomAndRightAnchors;\n    }\n\n    updateFromBehaviorData(oldBehaviorData, newBehaviorData): boolean {\n      if (oldBehaviorData.leftEdgeAnchor !== newBehaviorData.leftEdgeAnchor) {\n        this._leftEdgeAnchor = newBehaviorData.leftEdgeAnchor;\n      }\n      if (oldBehaviorData.rightEdgeAnchor !== newBehaviorData.rightEdgeAnchor) {\n        this._rightEdgeAnchor = newBehaviorData.rightEdgeAnchor;\n      }\n      if (oldBehaviorData.topEdgeAnchor !== newBehaviorData.topEdgeAnchor) {\n        this._topEdgeAnchor = newBehaviorData.topEdgeAnchor;\n      }\n      if (\n        oldBehaviorData.bottomEdgeAnchor !== newBehaviorData.bottomEdgeAnchor\n      ) {\n        this._bottomEdgeAnchor = newBehaviorData.bottomEdgeAnchor;\n      }\n      if (\n        oldBehaviorData.useLegacyTrajectory !==\n        newBehaviorData.useLegacyTrajectory\n      ) {\n        this._useLegacyBottomAndRightAnchors =\n          newBehaviorData.useLegacyBottomAndRightAnchors;\n      }\n      if (\n        oldBehaviorData.relativeToOriginalWindowSize !==\n        newBehaviorData.relativeToOriginalWindowSize\n      ) {\n        return false;\n      }\n      return true;\n    }\n\n    onActivate() {\n      this._invalidDistances = true;\n    }\n\n    doStepPreEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {\n      const workingPoint: FloatPoint = gdjs.staticArray(\n        gdjs.AnchorRuntimeBehavior.prototype.doStepPreEvents\n      ) as FloatPoint;\n      // TODO EBO Make it work with event based objects or hide this behavior for them.\n      const game = instanceContainer.getGame();\n      let rendererWidth = game.getGameResolutionWidth();\n      let rendererHeight = game.getGameResolutionHeight();\n      const layer = instanceContainer.getLayer(this.owner.getLayer());\n      if (this._invalidDistances) {\n        if (this._relativeToOriginalWindowSize) {\n          rendererWidth = game.getOriginalWidth();\n          rendererHeight = game.getOriginalHeight();\n        }\n\n        //Calculate the distances from the window's bounds.\n        const topLeftPixel = layer.convertCoords(\n          this.owner.getDrawableX(),\n          this.owner.getDrawableY(),\n          0,\n          workingPoint\n        );\n\n        //Left edge\n        if (\n          this._leftEdgeAnchor ===\n          AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_LEFT\n        ) {\n          this._leftEdgeDistance = topLeftPixel[0];\n        } else {\n          if (\n            this._leftEdgeAnchor ===\n            AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_RIGHT\n          ) {\n            this._leftEdgeDistance = rendererWidth - topLeftPixel[0];\n          } else {\n            if (\n              this._leftEdgeAnchor ===\n              AnchorRuntimeBehavior.HorizontalAnchor.PROPORTIONAL\n            ) {\n              this._leftEdgeDistance = topLeftPixel[0] / rendererWidth;\n            }\n          }\n        }\n\n        //Top edge\n        if (\n          this._topEdgeAnchor ===\n          AnchorRuntimeBehavior.VerticalAnchor.WINDOW_TOP\n        ) {\n          this._topEdgeDistance = topLeftPixel[1];\n        } else {\n          if (\n            this._topEdgeAnchor ===\n            AnchorRuntimeBehavior.VerticalAnchor.WINDOW_BOTTOM\n          ) {\n            this._topEdgeDistance = rendererHeight - topLeftPixel[1];\n          } else {\n            if (\n              this._topEdgeAnchor ===\n              AnchorRuntimeBehavior.VerticalAnchor.PROPORTIONAL\n            ) {\n              this._topEdgeDistance = topLeftPixel[1] / rendererHeight;\n            }\n          }\n        }\n        // It's fine to reuse workingPoint as topLeftPixel is no longer used.\n        const bottomRightPixel = layer.convertCoords(\n          this.owner.getDrawableX() + this.owner.getWidth(),\n          this.owner.getDrawableY() + this.owner.getHeight(),\n          0,\n          workingPoint\n        );\n\n        //Right edge\n        if (\n          this._rightEdgeAnchor ===\n          AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_LEFT\n        ) {\n          this._rightEdgeDistance = bottomRightPixel[0];\n        } else {\n          if (\n            this._rightEdgeAnchor ===\n            AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_RIGHT\n          ) {\n            this._rightEdgeDistance = rendererWidth - bottomRightPixel[0];\n          } else {\n            if (\n              this._rightEdgeAnchor ===\n              AnchorRuntimeBehavior.HorizontalAnchor.PROPORTIONAL\n            ) {\n              this._rightEdgeDistance = bottomRightPixel[0] / rendererWidth;\n            }\n          }\n        }\n\n        //Bottom edge\n        if (\n          this._bottomEdgeAnchor ===\n          AnchorRuntimeBehavior.VerticalAnchor.WINDOW_TOP\n        ) {\n          this._bottomEdgeDistance = bottomRightPixel[1];\n        } else {\n          if (\n            this._bottomEdgeAnchor ===\n            AnchorRuntimeBehavior.VerticalAnchor.WINDOW_BOTTOM\n          ) {\n            this._bottomEdgeDistance = rendererHeight - bottomRightPixel[1];\n          } else {\n            if (\n              this._bottomEdgeAnchor ===\n              AnchorRuntimeBehavior.VerticalAnchor.PROPORTIONAL\n            ) {\n              this._bottomEdgeDistance = bottomRightPixel[1] / rendererHeight;\n            }\n          }\n        }\n        this._invalidDistances = false;\n      } else {\n        //Move and resize the object if needed\n        let leftPixel = 0;\n        let topPixel = 0;\n        let rightPixel = 0;\n        let bottomPixel = 0;\n\n        //Left edge\n        if (\n          this._leftEdgeAnchor ===\n          AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_LEFT\n        ) {\n          leftPixel = this._leftEdgeDistance;\n        } else {\n          if (\n            this._leftEdgeAnchor ===\n            AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_RIGHT\n          ) {\n            leftPixel = rendererWidth - this._leftEdgeDistance;\n          } else {\n            if (\n              this._leftEdgeAnchor ===\n              AnchorRuntimeBehavior.HorizontalAnchor.PROPORTIONAL\n            ) {\n              leftPixel = this._leftEdgeDistance * rendererWidth;\n            }\n          }\n        }\n\n        //Top edge\n        if (\n          this._topEdgeAnchor ===\n          AnchorRuntimeBehavior.VerticalAnchor.WINDOW_TOP\n        ) {\n          topPixel = this._topEdgeDistance;\n        } else {\n          if (\n            this._topEdgeAnchor ===\n            AnchorRuntimeBehavior.VerticalAnchor.WINDOW_BOTTOM\n          ) {\n            topPixel = rendererHeight - this._topEdgeDistance;\n          } else {\n            if (\n              this._topEdgeAnchor ===\n              AnchorRuntimeBehavior.VerticalAnchor.PROPORTIONAL\n            ) {\n              topPixel = this._topEdgeDistance * rendererHeight;\n            }\n          }\n        }\n\n        //Right edge\n        if (\n          this._rightEdgeAnchor ===\n          AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_LEFT\n        ) {\n          rightPixel = this._rightEdgeDistance;\n        } else {\n          if (\n            this._rightEdgeAnchor ===\n            AnchorRuntimeBehavior.HorizontalAnchor.WINDOW_RIGHT\n          ) {\n            rightPixel = rendererWidth - this._rightEdgeDistance;\n          } else {\n            if (\n              this._rightEdgeAnchor ===\n              AnchorRuntimeBehavior.HorizontalAnchor.PROPORTIONAL\n            ) {\n              rightPixel = this._rightEdgeDistance * rendererWidth;\n            }\n          }\n        }\n\n        //Bottom edge\n        if (\n          this._bottomEdgeAnchor ===\n          AnchorRuntimeBehavior.VerticalAnchor.WINDOW_TOP\n        ) {\n          bottomPixel = this._bottomEdgeDistance;\n        } else {\n          if (\n            this._bottomEdgeAnchor ===\n            AnchorRuntimeBehavior.VerticalAnchor.WINDOW_BOTTOM\n          ) {\n            bottomPixel = rendererHeight - this._bottomEdgeDistance;\n          } else {\n            if (\n              this._bottomEdgeAnchor ===\n              AnchorRuntimeBehavior.VerticalAnchor.PROPORTIONAL\n            ) {\n              bottomPixel = this._bottomEdgeDistance * rendererHeight;\n            }\n          }\n        }\n        // It's fine to reuse workingPoint as topLeftPixel is no longer used.\n        const topLeftCoord = layer.convertInverseCoords(\n          leftPixel,\n          topPixel,\n          0,\n          workingPoint\n        );\n        const left = topLeftCoord[0];\n        const top = topLeftCoord[1];\n\n        const bottomRightCoord = layer.convertInverseCoords(\n          rightPixel,\n          bottomPixel,\n          0,\n          workingPoint\n        );\n        const right = bottomRightCoord[0];\n        const bottom = bottomRightCoord[1];\n\n        // Compatibility with GD <= 5.0.133\n        if (this._useLegacyBottomAndRightAnchors) {\n          //Move and resize the object according to the anchors\n          if (\n            this._rightEdgeAnchor !==\n            AnchorRuntimeBehavior.HorizontalAnchor.NONE\n          ) {\n            this.owner.setWidth(right - left);\n          }\n          if (\n            this._bottomEdgeAnchor !== AnchorRuntimeBehavior.VerticalAnchor.NONE\n          ) {\n            this.owner.setHeight(bottom - top);\n          }\n          if (\n            this._leftEdgeAnchor !== AnchorRuntimeBehavior.HorizontalAnchor.NONE\n          ) {\n            this.owner.setX(\n              left + this.owner.getX() - this.owner.getDrawableX()\n            );\n          }\n          if (\n            this._topEdgeAnchor !== AnchorRuntimeBehavior.VerticalAnchor.NONE\n          ) {\n            this.owner.setY(\n              top + this.owner.getY() - this.owner.getDrawableY()\n            );\n          }\n        }\n        // End of compatibility code\n        else {\n          // Resize if right and left anchors are set\n          if (\n            this._rightEdgeAnchor !==\n              AnchorRuntimeBehavior.HorizontalAnchor.NONE &&\n            this._leftEdgeAnchor !== AnchorRuntimeBehavior.HorizontalAnchor.NONE\n          ) {\n            this.owner.setWidth(right - left);\n            this.owner.setX(left);\n          } else {\n            if (\n              this._leftEdgeAnchor !==\n              AnchorRuntimeBehavior.HorizontalAnchor.NONE\n            ) {\n              this.owner.setX(\n                left + this.owner.getX() - this.owner.getDrawableX()\n              );\n            }\n            if (\n              this._rightEdgeAnchor !==\n              AnchorRuntimeBehavior.HorizontalAnchor.NONE\n            ) {\n              this.owner.setX(\n                right +\n                  this.owner.getX() -\n                  this.owner.getDrawableX() -\n                  this.owner.getWidth()\n              );\n            }\n          }\n          // Resize if top and bottom anchors are set\n          if (\n            this._bottomEdgeAnchor !==\n              AnchorRuntimeBehavior.VerticalAnchor.NONE &&\n            this._topEdgeAnchor !== AnchorRuntimeBehavior.VerticalAnchor.NONE\n          ) {\n            this.owner.setHeight(bottom - top);\n            this.owner.setY(top);\n          } else {\n            if (\n              this._topEdgeAnchor !== AnchorRuntimeBehavior.VerticalAnchor.NONE\n            ) {\n              this.owner.setY(\n                top + this.owner.getY() - this.owner.getDrawableY()\n              );\n            }\n            if (\n              this._bottomEdgeAnchor !==\n              AnchorRuntimeBehavior.VerticalAnchor.NONE\n            ) {\n              this.owner.setY(\n                bottom +\n                  this.owner.getY() -\n                  this.owner.getDrawableY() -\n                  this.owner.getHeight()\n              );\n            }\n          }\n        }\n      }\n    }\n\n    doStepPostEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {}\n\n    static HorizontalAnchor = {\n      NONE: 0,\n      WINDOW_LEFT: 1,\n      WINDOW_RIGHT: 2,\n      PROPORTIONAL: 3,\n    };\n    static VerticalAnchor = {\n      NONE: 0,\n      WINDOW_TOP: 1,\n      WINDOW_BOTTOM: 2,\n      PROPORTIONAL: 3,\n    };\n  }\n  gdjs.registerBehavior(\n    'AnchorBehavior::AnchorBehavior',\n    gdjs.AnchorRuntimeBehavior\n  );\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CACS,qBAAoC,GAAK,eAAgB,CAa9D,YACE,EACA,EACA,EACA,CACA,MAAM,EAAmB,EAAc,GAZzC,uBAA6B,GAC7B,uBAA4B,EAC5B,wBAA6B,EAC7B,sBAA2B,EAC3B,yBAA8B,EAC9B,qCAA2C,GAQzC,KAAK,8BAAgC,CAAC,CAAC,EAAa,6BACpD,KAAK,gBAAkB,EAAa,eACpC,KAAK,iBAAmB,EAAa,gBACrC,KAAK,eAAiB,EAAa,cACnC,KAAK,kBAAoB,EAAa,iBACtC,KAAK,gCACH,EAAa,iCAAmC,OAC5C,GACA,EAAa,+BAGrB,uBAAuB,EAAiB,EAA0B,CAsBhE,MArBI,GAAgB,iBAAmB,EAAgB,gBACrD,MAAK,gBAAkB,EAAgB,gBAErC,EAAgB,kBAAoB,EAAgB,iBACtD,MAAK,iBAAmB,EAAgB,iBAEtC,EAAgB,gBAAkB,EAAgB,eACpD,MAAK,eAAiB,EAAgB,eAGtC,EAAgB,mBAAqB,EAAgB,kBAErD,MAAK,kBAAoB,EAAgB,kBAGzC,EAAgB,sBAChB,EAAgB,qBAEhB,MAAK,gCACH,EAAgB,gCAGlB,EAAgB,+BAChB,EAAgB,6BAOpB,YAAa,CACX,KAAK,kBAAoB,GAG3B,gBAAgB,EAAkD,CAChE,KAAM,GAA2B,EAAK,YACpC,EAAK,sBAAsB,UAAU,iBAGjC,EAAO,EAAkB,UAC/B,GAAI,GAAgB,EAAK,yBACrB,EAAiB,EAAK,0BAC1B,KAAM,GAAQ,EAAkB,SAAS,KAAK,MAAM,YACpD,GAAI,KAAK,kBAAmB,CAC1B,AAAI,KAAK,+BACP,GAAgB,EAAK,mBACrB,EAAiB,EAAK,qBAIxB,KAAM,GAAe,EAAM,cACzB,KAAK,MAAM,eACX,KAAK,MAAM,eACX,EACA,GAIF,AACE,KAAK,kBACL,EAAsB,iBAAiB,YAEvC,KAAK,kBAAoB,EAAa,GAEtC,AACE,KAAK,kBACL,EAAsB,iBAAiB,aAEvC,KAAK,kBAAoB,EAAgB,EAAa,GAGpD,KAAK,kBACL,EAAsB,iBAAiB,cAEvC,MAAK,kBAAoB,EAAa,GAAK,GAMjD,AACE,KAAK,iBACL,EAAsB,eAAe,WAErC,KAAK,iBAAmB,EAAa,GAErC,AACE,KAAK,iBACL,EAAsB,eAAe,cAErC,KAAK,iBAAmB,EAAiB,EAAa,GAGpD,KAAK,iBACL,EAAsB,eAAe,cAErC,MAAK,iBAAmB,EAAa,GAAK,GAKhD,KAAM,GAAmB,EAAM,cAC7B,KAAK,MAAM,eAAiB,KAAK,MAAM,WACvC,KAAK,MAAM,eAAiB,KAAK,MAAM,YACvC,EACA,GAIF,AACE,KAAK,mBACL,EAAsB,iBAAiB,YAEvC,KAAK,mBAAqB,EAAiB,GAE3C,AACE,KAAK,mBACL,EAAsB,iBAAiB,aAEvC,KAAK,mBAAqB,EAAgB,EAAiB,GAGzD,KAAK,mBACL,EAAsB,iBAAiB,cAEvC,MAAK,mBAAqB,EAAiB,GAAK,GAMtD,AACE,KAAK,oBACL,EAAsB,eAAe,WAErC,KAAK,oBAAsB,EAAiB,GAE5C,AACE,KAAK,oBACL,EAAsB,eAAe,cAErC,KAAK,oBAAsB,EAAiB,EAAiB,GAG3D,KAAK,oBACL,EAAsB,eAAe,cAErC,MAAK,oBAAsB,EAAiB,GAAK,GAIvD,KAAK,kBAAoB,OACpB,CAEL,GAAI,GAAY,EACZ,EAAW,EACX,EAAa,EACb,EAAc,EAGlB,AACE,KAAK,kBACL,EAAsB,iBAAiB,YAEvC,EAAY,KAAK,kBAEjB,AACE,KAAK,kBACL,EAAsB,iBAAiB,aAEvC,EAAY,EAAgB,KAAK,kBAG/B,KAAK,kBACL,EAAsB,iBAAiB,cAEvC,GAAY,KAAK,kBAAoB,GAM3C,AACE,KAAK,iBACL,EAAsB,eAAe,WAErC,EAAW,KAAK,iBAEhB,AACE,KAAK,iBACL,EAAsB,eAAe,cAErC,EAAW,EAAiB,KAAK,iBAG/B,KAAK,iBACL,EAAsB,eAAe,cAErC,GAAW,KAAK,iBAAmB,GAMzC,AACE,KAAK,mBACL,EAAsB,iBAAiB,YAEvC,EAAa,KAAK,mBAElB,AACE,KAAK,mBACL,EAAsB,iBAAiB,aAEvC,EAAa,EAAgB,KAAK,mBAGhC,KAAK,mBACL,EAAsB,iBAAiB,cAEvC,GAAa,KAAK,mBAAqB,GAM7C,AACE,KAAK,oBACL,EAAsB,eAAe,WAErC,EAAc,KAAK,oBAEnB,AACE,KAAK,oBACL,EAAsB,eAAe,cAErC,EAAc,EAAiB,KAAK,oBAGlC,KAAK,oBACL,EAAsB,eAAe,cAErC,GAAc,KAAK,oBAAsB,GAK/C,KAAM,GAAe,EAAM,qBACzB,EACA,EACA,EACA,GAEI,EAAO,EAAa,GACpB,EAAM,EAAa,GAEnB,EAAmB,EAAM,qBAC7B,EACA,EACA,EACA,GAEI,EAAQ,EAAiB,GACzB,EAAS,EAAiB,GAGhC,AAAI,KAAK,gCAGL,MAAK,mBACL,EAAsB,iBAAiB,MAEvC,KAAK,MAAM,SAAS,EAAQ,GAG5B,KAAK,oBAAsB,EAAsB,eAAe,MAEhE,KAAK,MAAM,UAAU,EAAS,GAG9B,KAAK,kBAAoB,EAAsB,iBAAiB,MAEhE,KAAK,MAAM,KACT,EAAO,KAAK,MAAM,OAAS,KAAK,MAAM,gBAIxC,KAAK,iBAAmB,EAAsB,eAAe,MAE7D,KAAK,MAAM,KACT,EAAM,KAAK,MAAM,OAAS,KAAK,MAAM,iBAOzC,CACE,KAAK,mBACH,EAAsB,iBAAiB,MACzC,KAAK,kBAAoB,EAAsB,iBAAiB,KAEhE,MAAK,MAAM,SAAS,EAAQ,GAC5B,KAAK,MAAM,KAAK,IAGd,MAAK,kBACL,EAAsB,iBAAiB,MAEvC,KAAK,MAAM,KACT,EAAO,KAAK,MAAM,OAAS,KAAK,MAAM,gBAIxC,KAAK,mBACL,EAAsB,iBAAiB,MAEvC,KAAK,MAAM,KACT,EACE,KAAK,MAAM,OACX,KAAK,MAAM,eACX,KAAK,MAAM,aAKnB,AACE,KAAK,oBACH,EAAsB,eAAe,MACvC,KAAK,iBAAmB,EAAsB,eAAe,KAE7D,MAAK,MAAM,UAAU,EAAS,GAC9B,KAAK,MAAM,KAAK,IAGd,MAAK,iBAAmB,EAAsB,eAAe,MAE7D,KAAK,MAAM,KACT,EAAM,KAAK,MAAM,OAAS,KAAK,MAAM,gBAIvC,KAAK,oBACL,EAAsB,eAAe,MAErC,KAAK,MAAM,KACT,EACE,KAAK,MAAM,OACX,KAAK,MAAM,eACX,KAAK,MAAM,gBAQzB,iBAAiB,EAAkD,IApY9D,QAsYE,AAtYF,EAsYE,iBAAmB,CACxB,KAAM,EACN,YAAa,EACb,aAAc,EACd,aAAc,GAET,AA5YF,EA4YE,eAAiB,CACtB,KAAM,EACN,WAAY,EACZ,cAAe,EACf,aAAc,GAhZX,EAAM,wBAmZb,EAAK,iBACH,iCACA,EAAK,yBAtZC",
  "names": []
}
