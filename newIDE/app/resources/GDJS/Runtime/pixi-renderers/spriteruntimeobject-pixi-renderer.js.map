{
  "version": 3,
  "sources": ["../../../../../../GDJS/Runtime/pixi-renderers/spriteruntimeobject-pixi-renderer.ts"],
  "sourcesContent": ["namespace gdjs {\n  import PIXI = GlobalPIXIModule.PIXI;\n\n  /**\n   * The renderer for a gdjs.SpriteRuntimeObject using Pixi.js.\n   */\n  export class SpriteRuntimeObjectPixiRenderer {\n    _object: gdjs.SpriteRuntimeObject;\n    _spriteDirty: boolean = true;\n    _textureDirty: boolean = true;\n    _sprite: PIXI.Sprite;\n    _cachedWidth: float = 0;\n    _cachedHeight: float = 0;\n\n    /**\n     * @param runtimeObject The object\n     * @param instanceContainer The scene\n     */\n    constructor(\n      runtimeObject: gdjs.SpriteRuntimeObject,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ) {\n      this._object = runtimeObject;\n      this._sprite = new PIXI.Sprite(\n        instanceContainer.getGame().getImageManager().getInvalidPIXITexture()\n      );\n      const layer = instanceContainer.getLayer('');\n      if (layer) {\n        layer\n          .getRenderer()\n          .addRendererObject(this._sprite, runtimeObject.getZOrder());\n      }\n    }\n\n    reinitialize(\n      runtimeObject: gdjs.SpriteRuntimeObject,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ) {\n      this._object = runtimeObject;\n      this._spriteDirty = true;\n      this._textureDirty = true;\n      this._sprite.tint = 0xffffff;\n      const layer = instanceContainer.getLayer('');\n      if (layer) {\n        layer\n          .getRenderer()\n          .addRendererObject(this._sprite, runtimeObject.getZOrder());\n      }\n    }\n\n    getRendererObject() {\n      return this._sprite;\n    }\n\n    /**\n     * Update the internal PIXI.Sprite position, angle...\n     */\n    _updatePIXISprite() {\n      if (this._object._animationFrame !== null) {\n        this._sprite.anchor.x =\n          this._object._animationFrame.center.x /\n          this._sprite.texture.frame.width;\n        this._sprite.anchor.y =\n          this._object._animationFrame.center.y /\n          this._sprite.texture.frame.height;\n        this._sprite.position.x =\n          this._object.x +\n          (this._object._animationFrame.center.x -\n            this._object._animationFrame.origin.x) *\n            Math.abs(this._object._scaleX);\n        this._sprite.position.y =\n          this._object.y +\n          (this._object._animationFrame.center.y -\n            this._object._animationFrame.origin.y) *\n            Math.abs(this._object._scaleY);\n        this._sprite.rotation = gdjs.toRad(this._object.angle);\n        this._sprite.visible = !this._object.hidden;\n        this._sprite.blendMode = this._object._blendMode;\n        this._sprite.alpha = this._object.opacity / 255;\n        this._sprite.scale.x = this._object._scaleX;\n        this._sprite.scale.y = this._object._scaleY;\n        this._cachedWidth = Math.abs(this._sprite.width);\n        this._cachedHeight = Math.abs(this._sprite.height);\n      } else {\n        this._sprite.visible = false;\n        this._sprite.alpha = 0;\n        this._cachedWidth = 0;\n        this._cachedHeight = 0;\n      }\n      this._spriteDirty = false;\n    }\n\n    /**\n     * Call this to make sure the sprite is ready to be rendered.\n     */\n    ensureUpToDate() {\n      if (this._spriteDirty) {\n        this._updatePIXISprite();\n      }\n    }\n\n    /**\n     * Update the internal texture of the PIXI sprite.\n     */\n    updateFrame(animationFrame): void {\n      this._spriteDirty = true;\n      this._sprite.texture = animationFrame.texture;\n    }\n\n    update(): void {\n      this._spriteDirty = true;\n    }\n\n    updateX(): void {\n      const animationFrame = this._object\n        ._animationFrame as SpriteAnimationFrame;\n      this._sprite.position.x =\n        this._object.x +\n        (animationFrame.center.x - animationFrame.origin.x) *\n          Math.abs(this._object._scaleX);\n    }\n\n    updateY(): void {\n      const animationFrame = this._object\n        ._animationFrame as SpriteAnimationFrame;\n      this._sprite.position.y =\n        this._object.y +\n        (animationFrame.center.y - animationFrame.origin.y) *\n          Math.abs(this._object._scaleY);\n    }\n\n    updateAngle(): void {\n      this._sprite.rotation = gdjs.toRad(this._object.angle);\n    }\n\n    updateOpacity(): void {\n      this._sprite.alpha = this._object.opacity / 255;\n    }\n\n    updateVisibility(): void {\n      this._sprite.visible = !this._object.hidden;\n    }\n\n    setColor(rgbColor): void {\n      const colors = rgbColor.split(';');\n      if (colors.length < 3) {\n        return;\n      }\n      this._sprite.tint = gdjs.rgbToHexNumber(\n        parseInt(colors[0], 10),\n        parseInt(colors[1], 10),\n        parseInt(colors[2], 10)\n      );\n    }\n\n    getColor() {\n      const rgb = PIXI.utils.hex2rgb(this._sprite.tint);\n      return (\n        Math.floor(rgb[0] * 255) +\n        ';' +\n        Math.floor(rgb[1] * 255) +\n        ';' +\n        Math.floor(rgb[2] * 255)\n      );\n    }\n\n    getWidth(): float {\n      if (this._spriteDirty) {\n        this._updatePIXISprite();\n      }\n      return this._cachedWidth;\n    }\n\n    getHeight(): float {\n      if (this._spriteDirty) {\n        this._updatePIXISprite();\n      }\n      return this._cachedHeight;\n    }\n\n    getUnscaledWidth(): float {\n      return this._sprite.texture.frame.width;\n    }\n\n    getUnscaledHeight(): float {\n      return this._sprite.texture.frame.height;\n    }\n\n    static getAnimationFrame(imageManager, imageName) {\n      return imageManager.getPIXITexture(imageName);\n    }\n\n    static getAnimationFrameWidth(pixiTexture) {\n      return pixiTexture.width;\n    }\n\n    static getAnimationFrameHeight(pixiTexture) {\n      return pixiTexture.height;\n    }\n  }\n\n  // Register the class to let the engine use it.\n  export const SpriteRuntimeObjectRenderer = SpriteRuntimeObjectPixiRenderer;\n  export type SpriteRuntimeObjectRenderer = SpriteRuntimeObjectPixiRenderer;\n}\n"],
  "mappings": "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",
  "names": []
}
