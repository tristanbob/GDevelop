{
  "version": 3,
  "sources": ["../../../../../GDJS/Runtime/force.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2016 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\nnamespace gdjs {\n  /**\n   * A vector used to move objects.\n   */\n  export class Force {\n    _x: float;\n    _y: float;\n    _angle: float;\n    _length: float;\n    _dirty: boolean = false;\n    _multiplier: integer;\n\n    /**\n     * @param x The initial x component\n     * @param y The initial y component\n     * @param multiplier The multiplier (0 for a force that disappear on next frame, 1 for a permanent force)\n     */\n    constructor(x: float, y: float, multiplier: integer) {\n      this._x = x || 0;\n      this._y = y || 0;\n      this._angle = (Math.atan2(y, x) * 180) / Math.PI;\n      this._length = Math.sqrt(x * x + y * y);\n      this._multiplier = multiplier;\n    }\n\n    /**\n     * Returns the X component of the force.\n     */\n    getX(): float {\n      return this._x;\n    }\n\n    /**\n     * Returns the Y component of the force.\n     */\n    getY(): float {\n      return this._y;\n    }\n\n    /**\n     * Set the x component of the force.\n     * @param x The new X component\n     */\n    setX(x: float): void {\n      this._x = x;\n      this._dirty = true;\n    }\n\n    /**\n     * Set the y component of the force.\n     * @param y The new Y component\n     */\n    setY(y: float): void {\n      this._y = y;\n      this._dirty = true;\n    }\n\n    /**\n     * Set the angle of the force.\n     * @param angle The new angle\n     */\n    setAngle(angle: float): void {\n      if (this._dirty) {\n        this._length = Math.sqrt(this._x * this._x + this._y * this._y);\n        this._dirty = false;\n      }\n      this._angle = angle;\n      const angleInRadians = (angle / 180) * Math.PI;\n      this._x = Math.cos(angleInRadians) * this._length;\n      this._y = Math.sin(angleInRadians) * this._length;\n    }\n\n    /**\n     * Set the length of the force.\n     * @param len The length\n     */\n    setLength(len: number): void {\n      if (this._dirty) {\n        this._angle = (Math.atan2(this._y, this._x) * 180) / Math.PI;\n        this._dirty = false;\n      }\n      this._length = len;\n      const angleInRadians = (this._angle / 180) * Math.PI;\n      this._x = Math.cos(angleInRadians) * this._length;\n      this._y = Math.sin(angleInRadians) * this._length;\n    }\n\n    /**\n     * Get the angle of the force\n     */\n    getAngle(): float {\n      if (this._dirty) {\n        this._angle = (Math.atan2(this._y, this._x) * 180) / Math.PI;\n        this._length = Math.sqrt(this._x * this._x + this._y * this._y);\n        this._dirty = false;\n      }\n      return this._angle;\n    }\n\n    /**\n     * Get the length of the force\n     */\n    getLength(): float {\n      if (this._dirty) {\n        this._angle = (Math.atan2(this._y, this._x) * 180) / Math.PI;\n        this._length = Math.sqrt(this._x * this._x + this._y * this._y);\n        this._dirty = false;\n      }\n      return this._length;\n    }\n\n    /**\n     * Return 1 (true) if the force is permanent, 0 (false) if it is instant.\n     */\n    getMultiplier(): integer {\n      return this._multiplier;\n    }\n\n    /**\n     * Set if the force multiplier.\n     * @param multiplier The new value\n     */\n    setMultiplier(multiplier: integer): void {\n      this._multiplier = multiplier;\n    }\n  }\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CAIS,OAAY,CAajB,YAAY,EAAU,EAAU,EAAqB,CARrD,YAAkB,GAShB,KAAK,GAAK,GAAK,EACf,KAAK,GAAK,GAAK,EACf,KAAK,OAAU,KAAK,MAAM,EAAG,GAAK,IAAO,KAAK,GAC9C,KAAK,QAAU,KAAK,KAAK,EAAI,EAAI,EAAI,GACrC,KAAK,YAAc,EAMrB,MAAc,CACZ,MAAO,MAAK,GAMd,MAAc,CACZ,MAAO,MAAK,GAOd,KAAK,EAAgB,CACnB,KAAK,GAAK,EACV,KAAK,OAAS,GAOhB,KAAK,EAAgB,CACnB,KAAK,GAAK,EACV,KAAK,OAAS,GAOhB,SAAS,EAAoB,CAC3B,AAAI,KAAK,QACP,MAAK,QAAU,KAAK,KAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,IAC5D,KAAK,OAAS,IAEhB,KAAK,OAAS,EACd,KAAM,GAAkB,EAAQ,IAAO,KAAK,GAC5C,KAAK,GAAK,KAAK,IAAI,GAAkB,KAAK,QAC1C,KAAK,GAAK,KAAK,IAAI,GAAkB,KAAK,QAO5C,UAAU,EAAmB,CAC3B,AAAI,KAAK,QACP,MAAK,OAAU,KAAK,MAAM,KAAK,GAAI,KAAK,IAAM,IAAO,KAAK,GAC1D,KAAK,OAAS,IAEhB,KAAK,QAAU,EACf,KAAM,GAAkB,KAAK,OAAS,IAAO,KAAK,GAClD,KAAK,GAAK,KAAK,IAAI,GAAkB,KAAK,QAC1C,KAAK,GAAK,KAAK,IAAI,GAAkB,KAAK,QAM5C,UAAkB,CAChB,MAAI,MAAK,QACP,MAAK,OAAU,KAAK,MAAM,KAAK,GAAI,KAAK,IAAM,IAAO,KAAK,GAC1D,KAAK,QAAU,KAAK,KAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,IAC5D,KAAK,OAAS,IAET,KAAK,OAMd,WAAmB,CACjB,MAAI,MAAK,QACP,MAAK,OAAU,KAAK,MAAM,KAAK,GAAI,KAAK,IAAM,IAAO,KAAK,GAC1D,KAAK,QAAU,KAAK,KAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,IAC5D,KAAK,OAAS,IAET,KAAK,QAMd,eAAyB,CACvB,MAAO,MAAK,YAOd,cAAc,EAA2B,CACvC,KAAK,YAAc,GAvHhB,EAAM,UAJL",
  "names": []
}
