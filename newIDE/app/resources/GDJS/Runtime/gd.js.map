{
  "version": 3,
  "sources": ["../../../../../GDJS/Runtime/gd.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2016 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\n\n/**\n * The `gdjs` namespace contains all classes and objects of the game engine.\n * @namespace gdjs\n */\nnamespace gdjs {\n  const logger = new gdjs.Logger('Engine runtime');\n\n  /**\n   * Contains functions used by events (this is a convention only, functions can actually\n   * be anywhere).\n   * @namespace\n   * @memberOf gdjs\n   */\n  export namespace evtTools {\n    // @ts-ignore - This variable is unused on purpose.\n    const thisIsUnusedButEnsureTheNamespaceIsDeclared = true;\n  }\n\n  export const objectsTypes = new Hashtable<typeof gdjs.RuntimeObject>();\n  export const behaviorsTypes = new Hashtable<typeof gdjs.RuntimeBehavior>();\n\n  type RuntimeSceneCallback = (runtimeScene: gdjs.RuntimeScene) => void;\n  type RuntimeSceneRuntimeObjectCallback = (\n    instanceContainer: gdjs.RuntimeInstanceContainer,\n    runtimeObject: gdjs.RuntimeObject\n  ) => void;\n\n  export const callbacksFirstRuntimeSceneLoaded: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeSceneLoaded: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeScenePreEvents: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeScenePostEvents: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeScenePaused: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeSceneResumed: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeSceneUnloading: Array<RuntimeSceneCallback> = [];\n  export const callbacksRuntimeSceneUnloaded: Array<RuntimeSceneCallback> = [];\n  export const callbacksObjectDeletedFromScene: Array<RuntimeSceneRuntimeObjectCallback> = [];\n\n  /** Base64 encoded logo of GDevelop for the splash screen. */\n  export let gdevelopLogo: string = '';\n\n  /**\n   * Convert a RGB object to a Hex string.\n   *\n   * No \"#\" or \"0x\" are added.\n   * @param r Red\n   * @param g Green\n   * @param b Blue\n   */\n  export const rgbToHex = function (\n    r: integer,\n    g: integer,\n    b: integer\n  ): string {\n    return '' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n\n  /**\n   * Convert a Hex string to an RGB color array [r, g, b], where each component is in the range [0, 255].\n   *\n   * @param {string} hex Color hexadecimal\n   */\n  export const hexToRGBColor = function (\n    hexString: string\n  ): [number, number, number] {\n    var hexNumber = parseInt(hexString.replace('#', ''), 16);\n    return [\n      (hexNumber >> 16) & 0xff,\n      (hexNumber >> 8) & 0xff,\n      hexNumber & 0xff,\n    ];\n  };\n\n  /**\n   * Convert a RGB string (\"rrr;ggg;bbb\") or a Hex string (\"#rrggbb\") to a RGB color array ([r,g,b] with each component going from 0 to 255).\n   * @param value The color as a RGB string or Hex string\n   */\n  export const rgbOrHexToRGBColor = function (\n    value: string\n  ): [number, number, number] {\n    const splitValue = value.split(';');\n    // If a RGB string is provided, return the RGB object.\n    if (splitValue.length === 3) {\n      return [\n        parseInt(splitValue[0], 10),\n        parseInt(splitValue[1], 10),\n        parseInt(splitValue[2], 10),\n      ];\n    }\n    // Otherwise, convert the Hex to RGB.\n    return hexToRGBColor(value);\n  };\n\n  /**\n   * Convert a RGB string (\"rrr;ggg;bbb\") or a Hex string (\"#rrggbb\") to a RGB color number.\n   * @param rgbOrHexString The color as a RGB string or Hex string\n   */\n  export const rgbOrHexStringToNumber = (rgbOrHexString: string): integer => {\n    const components = gdjs.rgbOrHexToRGBColor(rgbOrHexString);\n    return gdjs.rgbToHexNumber(components[0], components[1], components[2]);\n  };\n\n  /**\n   * Convert a RGB object to a Hex number.\n   * @param r Red\n   * @param g Green\n   * @param b Blue\n   */\n  export const rgbToHexNumber = function (\n    r: integer,\n    g: integer,\n    b: integer\n  ): integer {\n    return (r << 16) + (g << 8) + b;\n  };\n\n  /**\n   * Convert a Hex number to a RGB color object ({r,g,b,a} with each component going from 0 to 255 and alpha set to 255).\n   * @param hex Hex color\n   */\n  export const hexNumberToRGB = (\n    hexNumber: number\n  ): { r: integer; g: integer; b: integer; a: integer } => {\n    return {\n      r: (hexNumber >> 16) & 0xff,\n      g: (hexNumber >> 8) & 0xff,\n      b: hexNumber & 0xff,\n      a: 255,\n    };\n  };\n\n  /**\n   * Convert a Hex number to a RGB color array([r,g,b] with each component going from 0 to 255).\n   * @param hex Hex color\n   */\n  export const hexNumberToRGBArray = (\n    hexNumber: number\n  ): [integer, integer, integer] => {\n    return [\n      (hexNumber >> 16) & 0xff,\n      (hexNumber >> 8) & 0xff,\n      hexNumber & 0xff,\n    ];\n  };\n\n  /**\n   * Get a random integer between 0 and max.\n   * @param max The maximum value (inclusive).\n   */\n  export const random = function (max: float): float {\n    if (max <= 0) return 0;\n    return Math.floor(Math.random() * (max + 1));\n  };\n\n  /**\n * Get a random integer between min and max.\n * @param min The minimum value (inclusive).\n * @param max The maximum value (inclusive).\n\n */\n  export const randomInRange = function (min: float, max: float): float {\n    return min + gdjs.random(max - min); // return min if min >= max\n  };\n\n  /**\n   * Get a random float in the range 0 to less than max (inclusive of 0, but not max).\n   * @param max The maximum value (exclusive).\n   */\n  export const randomFloat = function (max: float): float {\n    if (max <= 0) return 0;\n    return Math.random() * max;\n  };\n\n  /**\n   * Get a random float between min and max\n   * @param min The minimum value (inclusive).\n   * @param max The maximum value (exclusive).\n   * @returns {number}\n   */\n  export const randomFloatInRange = function (min: float, max: float): float {\n    return min + gdjs.randomFloat(max - min); // return min if min >= max\n  };\n\n  /**\n   * Get a random number between min and max in steps\n   * @param min The minimum value (inclusive).\n   * @param max The maximum value (inclusive).\n   * @param step The interval between each value.\n   * @returns {number}\n   */\n  export const randomWithStep = function (\n    min: float,\n    max: float,\n    step: float\n  ): float {\n    if (step <= 0) return min + gdjs.random(max - min);\n    return min + gdjs.random(Math.floor((max - min) / step)) * step; // return min if min >= max\n  };\n\n  /**\n   * Convert an angle in degrees to radians.\n   * @param angleInDegrees The angle in degrees.\n   */\n  export const toRad = function (angleInDegrees: float): float {\n    return (angleInDegrees / 180) * Math.PI;\n  };\n\n  /**\n   * Convert an angle in radians to degrees.\n   * @param angleInRadians The angle in radians.\n   */\n  export const toDegrees = function (angleInRadians: float): float {\n    return (angleInRadians * 180) / Math.PI;\n  };\n\n  /**\n   * Register a runtime object (class extending {@link gdjs.RuntimeObject}) that can be used in a scene.\n   *\n   * The name of the type of the object must be complete, with the namespace if any. For\n   * example, if you are providing a Text object in the TextObject extension, the full name\n   * of the type of the object is \"TextObject::Text\".\n   *\n   * @param objectTypeName The name of the type of the Object.\n   * @param Ctor The constructor of the Object.\n   */\n  export const registerObject = function (\n    objectTypeName: string,\n    Ctor: typeof gdjs.RuntimeObject\n  ): void {\n    gdjs.objectsTypes.put(objectTypeName, Ctor);\n  };\n\n  /**\n   * Register a runtime behavior (class extending {@link gdjs.RuntimeBehavior}) that can be used by a\n   * {@link gdjs.RuntimeObject}.\n   *\n   * The type of the behavior must be complete, with the namespace of the extension. For\n   * example, if you are providing a Draggable behavior in the DraggableBehavior extension,\n   * the full name of the type of the behavior is \"DraggableBehavior::Draggable\".\n   *\n   * @param behaviorTypeName The name of the type of the behavior.\n   * @param Ctor The constructor of the Object.\n   */\n  export const registerBehavior = function (\n    behaviorTypeName: string,\n    Ctor: typeof gdjs.RuntimeBehavior\n  ): void {\n    gdjs.behaviorsTypes.put(behaviorTypeName, Ctor);\n  };\n\n  /**\n   * Register a function to be called when the first {@link gdjs.RuntimeScene} is loaded, after\n   * resources loading is done. This can be considered as the \"start of the game\".\n   *\n   * @param callback The function to be called.\n   */\n  export const registerFirstRuntimeSceneLoadedCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksFirstRuntimeSceneLoaded.push(callback);\n  };\n\n  /**\n   * Register a function to be called when a scene is loaded.\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeSceneLoadedCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeSceneLoaded.push(callback);\n  };\n\n  /**\n   * Register a function to be called each time a scene is stepped (i.e: at every frame),\n   * before events are run.\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeScenePreEventsCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeScenePreEvents.push(callback);\n  };\n\n  /**\n   * Register a function to be called each time a scene is stepped (i.e: at every frame),\n   * after events are run and before rendering.\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeScenePostEventsCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeScenePostEvents.push(callback);\n  };\n\n  /**\n   * Register a function to be called when a scene is paused.\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeScenePausedCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeScenePaused.push(callback);\n  };\n\n  /**\n   * Register a function to be called when a scene is resumed.\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeSceneResumedCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeSceneResumed.push(callback);\n  };\n\n  /**\n   * Register a function to be called when a scene unload started. This is\n   * before the object deletion and renderer destruction. It is safe to\n   * manipulate these. It is **not** be safe to release resources as other\n   * callbacks might do operations on objects or the scene.\n   *\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeSceneUnloadingCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeSceneUnloading.push(callback);\n  };\n\n  /**\n   * Register a function to be called when a scene is unloaded. The objects\n   * and renderer are now destroyed - it is **not** safe to do anything apart\n   * from releasing resources.\n   *\n   * @param callback The function to be called.\n   */\n  export const registerRuntimeSceneUnloadedCallback = function (\n    callback: RuntimeSceneCallback\n  ): void {\n    gdjs.callbacksRuntimeSceneUnloaded.push(callback);\n  };\n\n  /**\n   * Register a function to be called when an object is deleted from a scene.\n   * @param callback The function to be called.\n   */\n  export const registerObjectDeletedFromSceneCallback = function (\n    callback: RuntimeSceneRuntimeObjectCallback\n  ): void {\n    gdjs.callbacksObjectDeletedFromScene.push(callback);\n  };\n\n  /**\n   * Unregister a callback.\n   * This should not be used apart from the code generated from extensions\n   * events functions, to handle hot-reloading.\n   * In any other case, a callback should be registered once, and only once.\n   *\n   * @internal\n   */\n  export const _unregisterCallback = function (callback: unknown): void {\n    const filterArrayInPlace = (array: unknown[]) => {\n      for (let i = 0; i < array.length; ) {\n        if (array[i] === callback) {\n          array.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    };\n\n    filterArrayInPlace(callbacksFirstRuntimeSceneLoaded);\n    filterArrayInPlace(callbacksRuntimeSceneLoaded);\n    filterArrayInPlace(callbacksRuntimeScenePreEvents);\n    filterArrayInPlace(callbacksRuntimeScenePostEvents);\n    filterArrayInPlace(callbacksRuntimeScenePaused);\n    filterArrayInPlace(callbacksRuntimeSceneResumed);\n    filterArrayInPlace(callbacksRuntimeSceneUnloading);\n    filterArrayInPlace(callbacksRuntimeSceneUnloaded);\n    filterArrayInPlace(callbacksObjectDeletedFromScene);\n  };\n\n  /**\n   * Keep this function until we're sure now client is using it anymore.\n   * @deprecated\n   * @private\n   */\n  export const registerGlobalCallbacks = function (): void {\n    logger.warn(\n      \"You're calling gdjs.registerGlobalCallbacks. This method is now useless and you must not call it anymore.\"\n    );\n  };\n\n  /**\n   * Get the constructor of an object.\n   *\n   * @param name The name of the type of the object.\n   */\n  export const getObjectConstructor = function (\n    name: string\n  ): typeof gdjs.RuntimeObject {\n    if (name !== undefined && gdjs.objectsTypes.containsKey(name))\n      return gdjs.objectsTypes.get(name);\n\n    logger.warn('Object type \"' + name + '\" was not found.');\n    return gdjs.objectsTypes.get(''); //Create a base empty runtime object.\n  };\n\n  /**\n   * Get the constructor of a behavior.\n   *\n   * @param name The name of the type of the behavior.\n   */\n  export const getBehaviorConstructor = function (\n    name: string\n  ): typeof gdjs.RuntimeBehavior {\n    if (name !== undefined && gdjs.behaviorsTypes.containsKey(name))\n      return gdjs.behaviorsTypes.get(name);\n\n    logger.warn('Behavior type \"' + name + '\" was not found.');\n    return gdjs.behaviorsTypes.get(''); //Create a base empty runtime behavior.\n  };\n\n  /**\n   * Create a static array that won't need a new allocation each time it's used.\n   * @param owner The owner of the Array.\n   */\n  export const staticArray = function (owner: any): Array<any> {\n    owner._staticArray = owner._staticArray || [];\n    return owner._staticArray;\n  };\n\n  /**\n   * Create a second static array that won't need a new allocation each time it's used.\n   * @param owner The owner of the Array.\n   */\n  export const staticArray2 = function (owner: any): Array<any> {\n    owner._staticArray2 = owner._staticArray2 || [];\n    return owner._staticArray2;\n  };\n\n  /**\n   * Create a static object that won't need a new allocation each time it's used.\n   * @param owner The owner of the Array.\n   */\n  export const staticObject = function (owner: any): Object {\n    owner._staticObject = owner._staticObject || {};\n    return owner._staticObject;\n  };\n\n  /**\n   * Return a new array of objects that is the concatenation of all the objects passed\n   * as parameters.\n   * @param objectsLists\n   * @returns {Array}\n   */\n  export const objectsListsToArray = function (\n    objectsLists: Hashtable<RuntimeObject>\n  ): Array<RuntimeObject> {\n    var lists = gdjs.staticArray(gdjs.objectsListsToArray);\n    objectsLists.values(lists);\n\n    var result: Array<RuntimeObject> = [];\n    for (var i = 0; i < lists.length; ++i) {\n      var arr = lists[i];\n      for (var k = 0; k < arr.length; ++k) {\n        result.push(arr[k]);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Copy the element for the first array into the second array, so that\n   * both array contains the same elements.\n   * @param src The source array\n   * @param dst The destination array\n   */\n  export const copyArray = function <T>(src: Array<T>, dst: Array<T>): void {\n    var len = src.length;\n    for (var i = 0; i < len; ++i) {\n      dst[i] = src[i];\n    }\n    dst.length = len;\n  };\n\n  interface MakeUUID {\n    (): string;\n    hex?: string[];\n  }\n\n  /**\n   * Generate a UUID v4.\n   * @returns The generated UUID.\n   */\n  export const makeUuid = <MakeUUID>function (): string {\n    // Fallback to non cryptographically secure UUIDs if not supported\n    if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n      const makeMathRandomUuid = (a?: any): string => {\n        return a\n          ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n          : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(\n              /[018]/g,\n              makeMathRandomUuid\n            );\n      };\n\n      return makeMathRandomUuid();\n    }\n\n    if (!gdjs.makeUuid.hex) {\n      gdjs.makeUuid.hex = [];\n\n      for (var i = 0; i < 256; i++) {\n        gdjs.makeUuid.hex[i] = (i < 16 ? '0' : '') + i.toString(16);\n      }\n    }\n    const hex = gdjs.makeUuid.hex;\n\n    var r = crypto.getRandomValues(new Uint8Array(16));\n    r[6] = (r[6] & 0x0f) | 0x40;\n    r[8] = (r[8] & 0x3f) | 0x80;\n\n    return (\n      hex[r[0]] +\n      hex[r[1]] +\n      hex[r[2]] +\n      hex[r[3]] +\n      '-' +\n      hex[r[4]] +\n      hex[r[5]] +\n      '-' +\n      hex[r[6]] +\n      hex[r[7]] +\n      '-' +\n      hex[r[8]] +\n      hex[r[9]] +\n      '-' +\n      hex[r[10]] +\n      hex[r[11]] +\n      hex[r[12]] +\n      hex[r[13]] +\n      hex[r[14]] +\n      hex[r[15]]\n    );\n  };\n\n  /**\n   * See https://floating-point-gui.de/errors/comparison/\n   * @param a\n   * @param b\n   * @param epsilon the relative margin error\n   * @returns true when a and b are within a relative margin error.\n   */\n  export const nearlyEqual = (a: float, b: float, epsilon: float): boolean => {\n    const absA = Math.abs(a);\n    const absB = Math.abs(b);\n    const diff = Math.abs(a - b);\n\n    if (a === b) {\n      // shortcut, handles infinities\n      return true;\n    } else if (a == 0 || b == 0 || absA + absB < Number.EPSILON) {\n      // a or b is zero or both are extremely close to it\n      // relative error is less meaningful here\n      return diff < epsilon * Number.EPSILON;\n    } else {\n      // use relative error\n      return diff / Math.min(absA + absB, Number.MAX_VALUE) < epsilon;\n    }\n  };\n\n  const asynchronouslyLoadingLibraryPromises: Array<Promise<any>> = [];\n\n  /**\n   * Register a promise which will be resolved when a third party library has\n   * finished loading (and is required to load before launching the game).\n   *\n   * This method must be called by any library that loads asynchronously.\n   */\n  export const registerAsynchronouslyLoadingLibraryPromise = (\n    promise: Promise<any>\n  ): void => {\n    asynchronouslyLoadingLibraryPromises.push(promise);\n  };\n\n  /**\n   * @returns a promise resolved when all all third party libraries, which need\n   * to be loaded before the game startup, are loaded. If a library fails\n   * loading, this will be rejected.\n   */\n  export const getAllAsynchronouslyLoadingLibraryPromise = (): Promise<\n    any[]\n  > => {\n    return Promise.all(asynchronouslyLoadingLibraryPromises);\n  };\n}\n\n// Make sure console.warn and console.error are available.\nconsole.warn = console.warn || console.log;\nconsole.error = console.error || console.log;\n"],
  "mappings": "AAUA,GAAU,MAAV,UAAU,EAAV,CACE,KAAM,GAAS,GAAI,GAAK,OAAO,kBAQxB,GAAU,GAAV,UAAU,EAAV,CAEL,KAAM,GAA8C,KAFrC,+BAKJ,eAAe,GAAI,WACnB,iBAAiB,GAAI,WAQrB,mCAAgE,GAChE,8BAA2D,GAC3D,iCAA8D,GAC9D,kCAA+D,GAC/D,8BAA2D,GAC3D,+BAA4D,GAC5D,iCAA8D,GAC9D,gCAA6D,GAC7D,kCAA4E,GAG9E,eAAuB,GAUrB,WAAW,SACtB,EACA,EACA,EACQ,CACR,MAAO,GAAO,KAAK,IAAO,IAAK,IAAO,IAAK,GAAK,GAAG,SAAS,IAAI,MAAM,IAQ3D,gBAAgB,SAC3B,EAC0B,CAC1B,GAAI,GAAY,SAAS,EAAU,QAAQ,IAAK,IAAK,IACrD,MAAO,CACJ,GAAa,GAAM,IACnB,GAAa,EAAK,IACnB,EAAY,MAQH,qBAAqB,SAChC,EAC0B,CAC1B,KAAM,GAAa,EAAM,MAAM,KAE/B,MAAI,GAAW,SAAW,EACjB,CACL,SAAS,EAAW,GAAI,IACxB,SAAS,EAAW,GAAI,IACxB,SAAS,EAAW,GAAI,KAIrB,gBAAc,IAOV,yBAAyB,AAAC,GAAoC,CACzE,KAAM,GAAa,EAAK,mBAAmB,GAC3C,MAAO,GAAK,eAAe,EAAW,GAAI,EAAW,GAAI,EAAW,KASzD,iBAAiB,SAC5B,EACA,EACA,EACS,CACT,MAAQ,IAAK,IAAO,IAAK,GAAK,GAOnB,iBAAiB,AAC5B,GAEO,EACL,EAAI,GAAa,GAAM,IACvB,EAAI,GAAa,EAAK,IACtB,EAAG,EAAY,IACf,EAAG,MAQM,sBAAsB,AACjC,GAEO,CACJ,GAAa,GAAM,IACnB,GAAa,EAAK,IACnB,EAAY,KAQH,SAAS,SAAU,EAAmB,CACjD,MAAI,IAAO,EAAU,EACd,KAAK,MAAM,KAAK,SAAY,GAAM,KAS9B,gBAAgB,SAAU,EAAY,EAAmB,CACpE,MAAO,GAAM,EAAK,OAAO,EAAM,IAOpB,cAAc,SAAU,EAAmB,CACtD,MAAI,IAAO,EAAU,EACd,KAAK,SAAW,GASZ,qBAAqB,SAAU,EAAY,EAAmB,CACzE,MAAO,GAAM,EAAK,YAAY,EAAM,IAUzB,iBAAiB,SAC5B,EACA,EACA,EACO,CACP,MAAI,IAAQ,EAAU,EAAM,EAAK,OAAO,EAAM,GACvC,EAAM,EAAK,OAAO,KAAK,MAAO,GAAM,GAAO,IAAS,GAOhD,QAAQ,SAAU,EAA8B,CAC3D,MAAQ,GAAiB,IAAO,KAAK,IAO1B,YAAY,SAAU,EAA8B,CAC/D,MAAQ,GAAiB,IAAO,KAAK,IAa1B,iBAAiB,SAC5B,EACA,EACM,CACN,EAAK,aAAa,IAAI,EAAgB,IAc3B,mBAAmB,SAC9B,EACA,EACM,CACN,EAAK,eAAe,IAAI,EAAkB,IAS/B,0CAA0C,SACrD,EACM,CACN,EAAK,iCAAiC,KAAK,IAOhC,qCAAqC,SAChD,EACM,CACN,EAAK,4BAA4B,KAAK,IAQ3B,wCAAwC,SACnD,EACM,CACN,EAAK,+BAA+B,KAAK,IAQ9B,yCAAyC,SACpD,EACM,CACN,EAAK,gCAAgC,KAAK,IAO/B,qCAAqC,SAChD,EACM,CACN,EAAK,4BAA4B,KAAK,IAO3B,sCAAsC,SACjD,EACM,CACN,EAAK,6BAA6B,KAAK,IAW5B,wCAAwC,SACnD,EACM,CACN,EAAK,+BAA+B,KAAK,IAU9B,uCAAuC,SAClD,EACM,CACN,EAAK,8BAA8B,KAAK,IAO7B,yCAAyC,SACpD,EACM,CACN,EAAK,gCAAgC,KAAK,IAW/B,sBAAsB,SAAU,EAAyB,CACpE,KAAM,GAAqB,AAAC,GAAqB,CAC/C,OAAS,GAAI,EAAG,EAAI,EAAM,QACxB,AAAI,EAAM,KAAO,EACf,EAAM,OAAO,EAAG,GAEhB,KAKN,EAAmB,oCACnB,EAAmB,+BACnB,EAAmB,kCACnB,EAAmB,mCACnB,EAAmB,+BACnB,EAAmB,gCACnB,EAAmB,kCACnB,EAAmB,iCACnB,EAAmB,oCAQR,0BAA0B,UAAkB,CACvD,EAAO,KACL,8GASS,uBAAuB,SAClC,EAC2B,CAC3B,MAAI,KAAS,QAAa,EAAK,aAAa,YAAY,GAC/C,EAAK,aAAa,IAAI,GAE/B,GAAO,KAAK,gBAAkB,EAAO,oBAC9B,EAAK,aAAa,IAAI,MAQlB,yBAAyB,SACpC,EAC6B,CAC7B,MAAI,KAAS,QAAa,EAAK,eAAe,YAAY,GACjD,EAAK,eAAe,IAAI,GAEjC,GAAO,KAAK,kBAAoB,EAAO,oBAChC,EAAK,eAAe,IAAI,MAOpB,cAAc,SAAU,EAAwB,CAC3D,SAAM,aAAe,EAAM,cAAgB,GACpC,EAAM,cAOF,eAAe,SAAU,EAAwB,CAC5D,SAAM,cAAgB,EAAM,eAAiB,GACtC,EAAM,eAOF,eAAe,SAAU,EAAoB,CACxD,SAAM,cAAgB,EAAM,eAAiB,GACtC,EAAM,eASF,sBAAsB,SACjC,EACsB,CACtB,GAAI,GAAQ,EAAK,YAAY,EAAK,qBAClC,EAAa,OAAO,GAGpB,OADI,GAA+B,GAC1B,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAElC,OADI,GAAM,EAAM,GACP,EAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAChC,EAAO,KAAK,EAAI,IAGpB,MAAO,IASI,YAAY,SAAa,EAAe,EAAqB,CAExE,OADI,GAAM,EAAI,OACL,EAAI,EAAG,EAAI,EAAK,EAAE,EACzB,EAAI,GAAK,EAAI,GAEf,EAAI,OAAS,GAYF,WAAqB,UAAoB,CAEpD,GAAI,MAAO,SAAW,aAAe,CAAC,OAAO,gBAAiB,CAC5D,KAAM,GAAqB,AAAC,GACnB,EACF,GAAM,KAAK,SAAW,IAAQ,EAAI,GAAK,SAAS,IAChD,IAAK,IAAM,KAAO,KAAO,KAAO,OAAO,QACtC,SACA,GAIR,MAAO,KAGT,GAAI,CAAC,EAAK,SAAS,IAAK,CACtB,EAAK,SAAS,IAAM,GAEpB,OAAS,GAAI,EAAG,EAAI,IAAK,IACvB,EAAK,SAAS,IAAI,GAAM,GAAI,GAAK,IAAM,IAAM,EAAE,SAAS,IAG5D,KAAM,GAAM,EAAK,SAAS,IAE1B,GAAI,GAAI,OAAO,gBAAgB,GAAI,YAAW,KAC9C,SAAE,GAAM,EAAE,GAAK,GAAQ,GACvB,EAAE,GAAM,EAAE,GAAK,GAAQ,IAGrB,EAAI,EAAE,IACN,EAAI,EAAE,IACN,EAAI,EAAE,IACN,EAAI,EAAE,IACN,IACA,EAAI,EAAE,IACN,EAAI,EAAE,IACN,IACA,EAAI,EAAE,IACN,EAAI,EAAE,IACN,IACA,EAAI,EAAE,IACN,EAAI,EAAE,IACN,IACA,EAAI,EAAE,KACN,EAAI,EAAE,KACN,EAAI,EAAE,KACN,EAAI,EAAE,KACN,EAAI,EAAE,KACN,EAAI,EAAE,MAWG,cAAc,CAAC,EAAU,EAAU,IAA4B,CAC1E,KAAM,GAAO,KAAK,IAAI,GAChB,EAAO,KAAK,IAAI,GAChB,EAAO,KAAK,IAAI,EAAI,GAE1B,MAAI,KAAM,EAED,GACE,GAAK,GAAK,GAAK,GAAK,EAAO,EAAO,OAAO,QAG3C,EAAO,EAAU,OAAO,QAGxB,EAAO,KAAK,IAAI,EAAO,EAAM,OAAO,WAAa,GAI5D,KAAM,GAA4D,GAQ3D,AAAM,8CAA8C,AACzD,GACS,CACT,EAAqC,KAAK,IAQ/B,4CAA4C,IAGhD,QAAQ,IAAI,KA5kBb,iBAilBV,QAAQ,KAAO,QAAQ,MAAQ,QAAQ,IACvC,QAAQ,MAAQ,QAAQ,OAAS,QAAQ",
  "names": []
}
