{
  "version": 3,
  "sources": ["../../../../../../GDJS/Runtime/debugger-client/window-message-debugger-client.ts"],
  "sourcesContent": ["namespace gdjs {\n  const logger = new gdjs.Logger('Debugger client (window message)');\n\n  /**\n   * This debugger client connects to the parent window, exchanging\n   * and receiving messages using `postMessage` and the `message` event listener.\n   */\n  export class WindowMessageDebuggerClient extends gdjs.AbstractDebuggerClient {\n    _opener: Window | null = null;\n\n    /**\n     * @param path - The path of the property to modify, starting from the RuntimeGame.\n     */\n    constructor(runtimeGame: RuntimeGame) {\n      super(runtimeGame);\n\n      this._opener = window.opener || null;\n      if (!this._opener) {\n        logger.info(\"`window.opener` not existing, the debugger won't work.\");\n        return;\n      }\n\n      window.addEventListener('message', (event) => {\n        const data = event.data;\n        this.handleCommand(data);\n      });\n    }\n\n    protected _sendMessage(message: string) {\n      if (!this._opener) return;\n\n      try {\n        this._opener.postMessage(message, '*');\n      } catch (error) {\n        this._originalConsole.warn(\n          'Error while sending a message to the debugger:',\n          error\n        );\n      }\n    }\n  }\n\n  //Register the class to let the engine use it.\n  // @ts-ignore\n  export const DebuggerClient = WindowMessageDebuggerClient;\n}\n"],
  "mappings": "AAAA,GAAU,MAAV,UAAU,EAAV,CACE,KAAM,GAAS,GAAI,GAAK,OAAO,oCAMxB,eAA0C,GAAK,sBAAuB,CAM3E,YAAY,EAA0B,CACpC,MAAM,GANR,aAAyB,KASvB,GADA,KAAK,QAAU,OAAO,QAAU,KAC5B,CAAC,KAAK,QAAS,CACjB,EAAO,KAAK,0DACZ,OAGF,OAAO,iBAAiB,UAAW,AAAC,GAAU,CAC5C,KAAM,GAAO,EAAM,KACnB,KAAK,cAAc,KAIb,aAAa,EAAiB,CACtC,GAAI,EAAC,KAAK,QAEV,GAAI,CACF,KAAK,QAAQ,YAAY,EAAS,WAC3B,EAAP,CACA,KAAK,iBAAiB,KACpB,iDACA,KA7BD,EAAM,8BAqCA,iBAAiB,IA5CtB",
  "names": []
}
