var gdjs;(function(c){const a=new c.Logger("Debugger client"),g={log:console.log,info:console.info,debug:console.debug,warn:console.warn,error:console.error},m=(d,e,o)=>{const r=[],n=[];return e==null&&(e=function(i,t){return r[0]===t?"[Circular ~]":"[Circular ~."+n.slice(0,r.indexOf(t)).join(".")+"]"}),function(i,t){if(r.length>0){const s=r.indexOf(this);if(~s?r.splice(s+1):r.push(this),~s?n.splice(s,1/0,i):n.push(i),o!=null&&s>o)return"[Max depth reached]";~r.indexOf(t)&&(t=e.call(this,i,t))}else r.push(t);return d==null?t:d.call(this,i,t)}},l=(d,e,o,r,n)=>JSON.stringify(d,m(e,n,o),r);class p{constructor(e){this._originalConsole=g;this._runtimegame=e,this._hotReloader=new c.HotReloader(e);const o=(n,...i)=>{this.log("JavaScript",i.reduce((t,s)=>t+s,""),n,!1)};console.log=(...n)=>{g.log(...n),o("info",...n)},console.debug=(...n)=>{g.debug(...n),o("info",...n)},console.info=(...n)=>{g.info(...n),o("info",...n)},console.warn=(...n)=>{g.warn(...n),o("warning",...n)},console.error=(...n)=>{g.error(...n),o("error",...n)};const r=c.Logger.getLoggerOutput();c.Logger.setLoggerOutput({log:(n,i,t="info",s=!0)=>{r.log(n,i,t,s),this.log(n,i,t,s)}})}handleCommand(e){const o=this,r=this._runtimegame;e&&e.command?e.command==="play"?r.pause(!1):e.command==="pause"?(r.pause(!0),o.sendRuntimeGameDump()):e.command==="refresh"?o.sendRuntimeGameDump():e.command==="set"?o.set(e.path,e.newValue):e.command==="call"?o.call(e.path,e.args):e.command==="profiler.start"?(r.startCurrentSceneProfiler(function(n){o.sendProfilerOutput(n.getFramesAverageMeasures(),n.getStats()),o.sendProfilerStopped()}),o.sendProfilerStarted()):e.command==="profiler.stop"?r.stopCurrentSceneProfiler():e.command==="hotReload"?o._hotReloader.hotReload().then(n=>{o.sendHotReloaderLogs(n)}):a.info('Unknown command "'+e.command+'" received by the debugger.'):a.info("Debugger received a message with badly formatted data.")}log(e,o,r,n){this._sendMessage(JSON.stringify({command:"console.log",payload:{message:o,type:r,group:e,internal:n,timestamp:performance.now()}}))}set(e,o){if(!e||!e.length)return a.warn("No path specified, set operation from debugger aborted"),!1;let r=this._runtimegame,n=0;for(;n<e.length-1;){const t=e[n];if(!r||!r[t])return a.error("Incorrect path specified. No "+t+" in ",r),!1;r=r[t],n++}const i=r[e[n]];return typeof i=="number"?o=parseFloat(o):typeof i=="string"&&(o=""+o),a.log("Updating",e,"to",o),r[e[n]]=o,!0}call(e,o){if(!e||!e.length)return a.warn("No path specified, call operation from debugger aborted"),!1;let r=this._runtimegame,n=0;for(;n<e.length-1;){const i=e[n];if(!r||!r[i])return a.error("Incorrect path specified. No "+i+" in ",r),!1;r=r[i],n++}return r[e[n]]?(a.log("Calling",e,"with",o),r[e[n]].apply(r,o),!0):(a.error("Unable to call",e),!1)}sendRuntimeGameDump(){const e=this,o={command:"dump",payload:this._runtimegame},r=Date.now(),n=[e._runtimegame.getGameData()],i=["_debuggerClient","_allInstancesList","_runtimeGame","_runtimeScene","_behaviorsTable","_animations","_animationFrame","linkedObjectsManager","_platformRBush","HSHG","_obstaclesHSHG","owner","_renderer","_gameRenderer","_imageManager","baseTexture","_baseTexture","_invalidTexture"],t=l(o,function(f,u){return n.indexOf(u)!==-1||i.indexOf(f)!==-1?"[Removed from the debugger]":u},18),s=Date.now()-r;a.log("RuntimeGame serialization took "+s+"ms"),s>500&&a.warn("Serialization took a long time: please check if there is a need to remove some objects from serialization"),this._sendMessage(t)}sendHotReloaderLogs(e){this._sendMessage(l({command:"hotReloader.logs",payload:e}))}sendProfilerStarted(){this._sendMessage(l({command:"profiler.started",payload:null}))}sendProfilerStopped(){this._sendMessage(l({command:"profiler.stopped",payload:null}))}sendGamePaused(){this._sendMessage(l({command:"game.paused",payload:null}))}sendGameResumed(){this._sendMessage(l({command:"game.resumed",payload:null}))}sendProfilerOutput(e,o){this._sendMessage(l({command:"profiler.output",payload:{framesAverageMeasures:e,stats:o}}))}}c.AbstractDebuggerClient=p})(gdjs||(gdjs={}));
//# sourceMappingURL=abstract-debugger-client.js.map
